##########################
## Analysis Information ##
##########################
#### Function: __absvdi2
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r2 = MOVr $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORri killed renamable $r1, -2147483648, 14, $noreg, $noreg, debug-location !872; ../absvdi2.c:25:11
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !872; ../absvdi2.c:25:11
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !873; ../absvdi2.c:25:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 1, killed $cpsr, debug-location !873; ../absvdi2.c:25:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !873; ../absvdi2.c:25:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !874 :: (load (s32) from constant-pool); ../absvdi2.c:26:9
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !874 :: (load (s32) from constant-pool); ../absvdi2.c:26:9
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 26, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !874; ../absvdi2.c:26:9
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r2 = LDRi12 $sp, 0, 14, $noreg, debug-location !875 :: (load (s32) from %stack.1); ../absvdi2.c:28:20
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !875 :: (load (s32) from %stack.0); ../absvdi2.c:28:20
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r2, 249, 14, $noreg, def $cpsr, debug-location !875; ../absvdi2.c:28:20
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r2, 249, 14, $noreg, $noreg, debug-location !875; ../absvdi2.c:28:20
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrsi renamable $r2, renamable $r2, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !875; ../absvdi2.c:28:20
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = EORrsi killed renamable $r1, killed renamable $r2, 249, 14, $noreg, $noreg, debug-location !875; ../absvdi2.c:28:20
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !876; ../absvdi2.c:28:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !876; ../absvdi2.c:28:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !876; ../absvdi2.c:28:5
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: __absvsi2
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, -2147483648, 14, $noreg, implicit-def $cpsr, debug-location !881; ../absvsi2.c:25:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 1, killed $cpsr, debug-location !881; ../absvsi2.c:25:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !881; ../absvsi2.c:25:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !882 :: (load (s32) from constant-pool); ../absvsi2.c:26:9
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !882 :: (load (s32) from constant-pool); ../absvsi2.c:26:9
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 26, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !882; ../absvsi2.c:26:9
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !883 :: (load (s32) from %stack.0); ../absvsi2.c:28:20
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !883; ../absvsi2.c:28:20
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.4, 5, killed $cpsr, debug-location !883; ../absvsi2.c:28:20
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !883 :: (load (s32) from %stack.0); ../absvsi2.c:28:20
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = RSBri renamable $r0, 0, 14, $noreg, $noreg, debug-location !883; ../absvsi2.c:28:20
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !883 :: (load (s32) from %stack.1); ../absvsi2.c:28:20
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !884; ../absvsi2.c:28:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !884; ../absvsi2.c:28:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !884; ../absvsi2.c:28:5
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: __addvdi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r12 = MOVr $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r12, $sp, 0, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: $r12 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r12, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r2, 14, $noreg, def $cpsr, debug-location !886; ../addvdi3.c:24:27
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ADCrr killed renamable $r1, renamable $r3, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !886; ../addvdi3.c:24:27
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r3, 0, 14, $noreg, implicit-def $cpsr, debug-location !888; ../addvdi3.c:25:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 4, killed $cpsr, debug-location !888; ../addvdi3.c:25:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !888; ../addvdi3.c:25:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !889 :: (load (s32) from %stack.0); ../addvdi3.c:27:15
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !889 :: (load (s32) from %stack.3); ../addvdi3.c:27:15
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 8, 14, $noreg, debug-location !889 :: (load (s32) from %stack.1); ../addvdi3.c:27:15
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 4, 14, $noreg, debug-location !889 :: (load (s32) from %stack.2); ../addvdi3.c:27:15
# Before:
bot
# After:
not available
## Instruction: dead renamable $r2 = SUBrr renamable $r2, renamable $r3, 14, $noreg, def $cpsr, debug-location !889; ../addvdi3.c:27:15
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCrr renamable $r0, renamable $r1, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !889; ../addvdi3.c:27:15
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 10, killed $cpsr, debug-location !890; ../addvdi3.c:27:13
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !890; ../addvdi3.c:27:13
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !891 :: (load (s32) from constant-pool); ../addvdi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !891 :: (load (s32) from constant-pool); ../addvdi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 28, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !891; ../addvdi3.c:28:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.7, debug-location !892; ../addvdi3.c:29:5
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !893 :: (load (s32) from %stack.0); ../addvdi3.c:32:15
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !893 :: (load (s32) from %stack.3); ../addvdi3.c:32:15
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 8, 14, $noreg, debug-location !893 :: (load (s32) from %stack.1); ../addvdi3.c:32:15
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 4, 14, $noreg, debug-location !893 :: (load (s32) from %stack.2); ../addvdi3.c:32:15
# Before:
bot
# After:
not available
## Instruction: dead renamable $r2 = SUBrr renamable $r2, renamable $r3, 14, $noreg, def $cpsr, debug-location !893; ../addvdi3.c:32:15
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCrr renamable $r0, renamable $r1, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !893; ../addvdi3.c:32:15
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 11, killed $cpsr, debug-location !894; ../addvdi3.c:32:13
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !894; ../addvdi3.c:32:13
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !895 :: (load (s32) from constant-pool); ../addvdi3.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !895 :: (load (s32) from constant-pool); ../addvdi3.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 33, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !895; ../addvdi3.c:33:13
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: B %bb.7
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !896 :: (load (s32) from %stack.0); ../addvdi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !896 :: (load (s32) from %stack.1); ../addvdi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !896; ../addvdi3.c:35:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !896; ../addvdi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !896; ../addvdi3.c:35:5
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: __addvsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ADDrr renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !898; ../addvsi3.c:24:27
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r1, 0, 14, $noreg, implicit-def $cpsr, debug-location !900; ../addvsi3.c:25:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 4, killed $cpsr, debug-location !900; ../addvsi3.c:25:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !900; ../addvsi3.c:25:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !902 :: (load (s32) from %stack.0); ../addvsi3.c:27:13
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !902 :: (load (s32) from %stack.1); ../addvsi3.c:27:13
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !902; ../addvsi3.c:27:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 10, killed $cpsr, debug-location !902; ../addvsi3.c:27:13
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !902; ../addvsi3.c:27:13
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !903 :: (load (s32) from constant-pool); ../addvsi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !903 :: (load (s32) from constant-pool); ../addvsi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 28, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !903; ../addvsi3.c:28:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.7, debug-location !904; ../addvsi3.c:29:5
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !906 :: (load (s32) from %stack.0); ../addvsi3.c:32:13
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !906 :: (load (s32) from %stack.1); ../addvsi3.c:32:13
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !906; ../addvsi3.c:32:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 11, killed $cpsr, debug-location !906; ../addvsi3.c:32:13
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !906; ../addvsi3.c:32:13
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !907 :: (load (s32) from constant-pool); ../addvsi3.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !907 :: (load (s32) from constant-pool); ../addvsi3.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 33, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !907; ../addvsi3.c:33:13
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: B %bb.7
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !908 :: (load (s32) from %stack.0); ../addvsi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !908; ../addvsi3.c:35:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !908; ../addvsi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !908; ../addvsi3.c:35:5
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: __aeabi_lcmp
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL_pred @__cmpdi2, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, debug-location !1060; ../cmpdi2.c:48:9
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBri killed renamable $r0, 1, 14, $noreg, $noreg, debug-location !1061; ../cmpdi2.c:48:24
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1062; ../cmpdi2.c:48:2
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1062; ../cmpdi2.c:48:2
# Before:
not available
# After:
not available
#### Function: __aeabi_ulcmp
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL_pred @__ucmpdi2, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, debug-location !1783; ../ucmpdi2.c:48:9
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBri killed renamable $r0, 1, 14, $noreg, $noreg, debug-location !1784; ../ucmpdi2.c:48:25
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1785; ../ucmpdi2.c:48:2
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1785; ../ucmpdi2.c:48:2
# Before:
not available
# After:
not available
#### Function: __ashldi3
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 40, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 $r2, $sp, 12, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 16, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 20, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 36, 14, $noreg, debug-location !911 :: (store (s32) into %ir.all + 4, basealign 8); ../ashldi3.c:29:15
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 32, 14, $noreg, debug-location !911 :: (store (s32) into %ir.all, align 8); ../ashldi3.c:29:15
# Before:
bot
# After:
not available
## Instruction: TSTri renamable $r2, 32, 14, $noreg, implicit-def $cpsr, debug-location !913; ../ashldi3.c:30:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 0, killed $cpsr, debug-location !913; ../ashldi3.c:30:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !913; ../ashldi3.c:30:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg :: (load (s32) from %stack.4)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !915 :: (store (s32) into %ir.low, align 8); ../ashldi3.c:32:22
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 32, 14, $noreg, debug-location !916 :: (dereferenceable load (s32) from %ir.low2, align 8); ../ashldi3.c:33:33
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = nsw SUBri renamable $r1, 32, 14, $noreg, $noreg, debug-location !917; ../ashldi3.c:33:43
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r1, 2, 14, $noreg, $noreg, debug-location !918; ../ashldi3.c:33:37
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !921 :: (store (s32) into %ir.high); ../ashldi3.c:33:23
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !922; ../ashldi3.c:34:5
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !924 :: (load (s32) from %stack.4); ../ashldi3.c:37:13
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !924; ../ashldi3.c:37:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !924; ../ashldi3.c:37:13
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !924; ../ashldi3.c:37:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg :: (load (s32) from %stack.3)
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 20, 14, $noreg :: (load (s32) from %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !925; ../ashldi3.c:38:13
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r2 = LDRi12 $sp, 12, 14, $noreg, debug-location !926 :: (load (s32) from %stack.4); ../ashldi3.c:39:33
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 32, 14, $noreg, debug-location !926 :: (dereferenceable load (s32) from %ir.low6, align 8); ../ashldi3.c:39:33
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 2, 14, $noreg, $noreg, debug-location !927; ../ashldi3.c:39:37
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !929 :: (store (s32) into %ir.low9, align 8); ../ashldi3.c:39:23
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 32, 14, $noreg, debug-location !933 :: (dereferenceable load (s32) from %ir.low14, align 8); ../ashldi3.c:40:56
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !931 :: (dereferenceable load (s32) from %ir.high11); ../ashldi3.c:40:34
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 2, 14, $noreg, $noreg, debug-location !932; ../ashldi3.c:40:39
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = nsw RSBri renamable $r2, 32, 14, $noreg, $noreg, debug-location !934; ../ashldi3.c:40:77
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsr killed renamable $r0, killed renamable $r1, killed renamable $r2, 3, 14, $noreg, $noreg, debug-location !936; ../ashldi3.c:40:45
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !939 :: (store (s32) into %ir.high17); ../ashldi3.c:40:23
# Before:
bot
# After:
not available
## Instruction: B %bb.5
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !940 :: (dereferenceable load (s32) from %ir.all19, align 8); ../ashldi3.c:42:19
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !940 :: (dereferenceable load (s32) from %ir.all19 + 4, basealign 8); ../ashldi3.c:42:19
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !941; ../ashldi3.c:42:5
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !942 :: (load (s32) from %stack.6); ../ashldi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !942 :: (load (s32) from %stack.5); ../ashldi3.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 40, 14, $noreg, $noreg, debug-location !943; ../ashldi3.c:43:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !943; ../ashldi3.c:43:1
# Before:
not available
# After:
not available
#### Function: __ashrdi3
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 40, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 $r2, $sp, 12, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 16, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 20, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 36, 14, $noreg, debug-location !946 :: (store (s32) into %ir.all + 4, basealign 8); ../ashrdi3.c:29:15
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 32, 14, $noreg, debug-location !946 :: (store (s32) into %ir.all, align 8); ../ashrdi3.c:29:15
# Before:
bot
# After:
not available
## Instruction: TSTri renamable $r2, 32, 14, $noreg, implicit-def $cpsr, debug-location !948; ../ashrdi3.c:30:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 0, killed $cpsr, debug-location !948; ../ashrdi3.c:30:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !948; ../ashrdi3.c:30:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !950 :: (load (s32) from %stack.4); ../ashrdi3.c:33:33
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !950 :: (dereferenceable load (s32) from %ir.high); ../ashrdi3.c:33:33
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 249, 14, $noreg, $noreg, debug-location !951; ../ashrdi3.c:33:38
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !954 :: (store (s32) into %ir.high2); ../ashrdi3.c:33:23
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !956 :: (dereferenceable load (s32) from %ir.high4); ../ashrdi3.c:34:32
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = nsw SUBri renamable $r1, 32, 14, $noreg, $noreg, debug-location !957; ../ashrdi3.c:34:43
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r1, 1, 14, $noreg, $noreg, debug-location !958; ../ashrdi3.c:34:37
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !960 :: (store (s32) into %ir.low, align 8); ../ashrdi3.c:34:22
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !961; ../ashrdi3.c:35:5
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !963 :: (load (s32) from %stack.4); ../ashrdi3.c:38:13
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !963; ../ashrdi3.c:38:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !963; ../ashrdi3.c:38:13
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !963; ../ashrdi3.c:38:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg :: (load (s32) from %stack.3)
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 20, 14, $noreg :: (load (s32) from %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !964; ../ashrdi3.c:39:13
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r2 = LDRi12 $sp, 12, 14, $noreg, debug-location !966 :: (load (s32) from %stack.4); ../ashrdi3.c:40:34
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !966 :: (dereferenceable load (s32) from %ir.high9); ../ashrdi3.c:40:34
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 1, 14, $noreg, $noreg, debug-location !967; ../ashrdi3.c:40:39
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !970 :: (store (s32) into %ir.high12); ../ashrdi3.c:40:24
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 32, 14, $noreg, debug-location !975 :: (dereferenceable load (s32) from %ir.low17, align 8); ../ashrdi3.c:41:72
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !972 :: (dereferenceable load (s32) from %ir.high14); ../ashrdi3.c:41:33
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = nsw RSBri renamable $r2, 32, 14, $noreg, $noreg, debug-location !973; ../ashrdi3.c:41:55
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r3, 2, 14, $noreg, $noreg, debug-location !974; ../ashrdi3.c:41:38
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsr killed renamable $r0, killed renamable $r1, renamable $r2, 3, 14, $noreg, $noreg, debug-location !977; ../ashrdi3.c:41:61
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !979 :: (store (s32) into %ir.low20, align 8); ../ashrdi3.c:41:22
# Before:
bot
# After:
not available
## Instruction: B %bb.5
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !980 :: (dereferenceable load (s32) from %ir.all22, align 8); ../ashrdi3.c:43:19
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !980 :: (dereferenceable load (s32) from %ir.all22 + 4, basealign 8); ../ashrdi3.c:43:19
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !981; ../ashrdi3.c:43:5
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !982 :: (load (s32) from %stack.6); ../ashrdi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !982 :: (load (s32) from %stack.5); ../ashrdi3.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 40, 14, $noreg, $noreg, debug-location !983; ../ashrdi3.c:44:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !983; ../ashrdi3.c:44:1
# Before:
not available
# After:
not available
#### Function: __clzdi2
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 4, 14, $noreg, debug-location !986 :: (store (s32) into %ir.all + 4, basealign 8); ../clzdi2.c:25:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 0, 14, $noreg, debug-location !986 :: (store (s32) into %ir.all, align 8); ../clzdi2.c:25:11
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !992 :: (dereferenceable load (s32) from %ir.low, align 8); ../clzdi2.c:27:49
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !988 :: (dereferenceable load (s32) from %ir.high2); ../clzdi2.c:26:28
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r2, 0, 14, $noreg, implicit-def $cpsr, debug-location !993; ../clzdi2.c:27:42
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr $r2, 14, $noreg, $noreg, debug-location !993; ../clzdi2.c:27:42
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr killed renamable $r1, 0, killed $cpsr, $noreg, implicit renamable $r0, debug-location !993; ../clzdi2.c:27:42
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 11, 14, $noreg, $noreg, debug-location !994; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 19, 14, $noreg, $noreg, debug-location !994; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !994; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 67, 14, $noreg, $noreg, debug-location !994; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 131, 14, $noreg, $noreg, debug-location !994; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MVNr killed renamable $r0, 14, $noreg, $noreg, debug-location !994; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !994; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !994; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r3, renamable $r0, 19, 14, $noreg, $noreg, debug-location !994; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r3, 14, $noreg, $noreg, debug-location !994; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !994; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !994; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !994; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r3 = MULv5 killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !994; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r3, 195, 14, $noreg, $noreg, debug-location !994; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 32, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, killed renamable $r3, 195, 14, $noreg, $noreg, debug-location !997; ../clzdi2.c:27:59
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r2, 0, 14, $noreg, implicit-def $cpsr, debug-location !997; ../clzdi2.c:27:59
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr killed renamable $r1, 0, killed $cpsr, $noreg, implicit renamable $r0, debug-location !997; ../clzdi2.c:27:59
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 8, 14, $noreg, $noreg, debug-location !998; ../clzdi2.c:27:5
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !998; ../clzdi2.c:27:5
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
#### Function: __clzsi2
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r3 = MOVr killed $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPri renamable $r3, 65536, 14, $noreg, implicit-def $cpsr
# Before:
not available
# After:
not available
## Instruction: $r2 = MOVi 1, 3, killed $cpsr, $noreg, implicit renamable $r2
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r2, 34, 14, $noreg, $noreg, debug-location !1001; ../clzsi2.c:25:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = nuw nsw SUBrsi killed renamable $r1, killed renamable $r2, 34, 14, $noreg, $noreg, debug-location !1002; ../clzsi2.c:26:14
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsr renamable $r3, renamable $r12, 3, 14, $noreg, $noreg, debug-location !1003; ../clzsi2.c:26:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 65280, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r3, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !1004; ../clzsi2.c:29:13
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !1004; ../clzsi2.c:29:13
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1004; ../clzsi2.c:29:13
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVi 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = nuw nsw SUBrsi killed renamable $r3, renamable $r1, 26, 14, $noreg, $noreg, debug-location !1007; ../clzsi2.c:30:13
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVsr renamable $r2, renamable $r12, 3, 14, $noreg, $noreg, debug-location !1008; ../clzsi2.c:30:7
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $r1, 26, 14, $noreg, $noreg, debug-location !1009; ../clzsi2.c:31:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 240, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r2, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !1010; ../clzsi2.c:33:13
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !1010; ../clzsi2.c:33:13
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1010; ../clzsi2.c:33:13
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVi 4, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = nuw nsw SUBrsi killed renamable $r2, renamable $r1, 18, 14, $noreg, $noreg, debug-location !1013; ../clzsi2.c:34:13
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsr renamable $r3, renamable $r12, 3, 14, $noreg, $noreg, debug-location !1014; ../clzsi2.c:34:7
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $r1, 18, 14, $noreg, $noreg, debug-location !1015; ../clzsi2.c:35:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 12, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r3, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !1016; ../clzsi2.c:37:13
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !1016; ../clzsi2.c:37:13
# Before:
not available
# After:
not available
## Instruction: renamable $lr = ADCrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1016; ../clzsi2.c:37:13
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 2, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = nuw nsw SUBrsi renamable $r1, renamable $lr, 10, 14, $noreg, $noreg, debug-location !1019; ../clzsi2.c:38:13
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVsr renamable $r2, renamable $r12, 3, 14, $noreg, $noreg, debug-location !1020; ../clzsi2.c:38:7
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $lr, 10, 14, $noreg, $noreg, debug-location !1021; ../clzsi2.c:39:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrsr killed renamable $r1, killed renamable $r2, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !1022; ../clzsi2.c:52:20
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MVNi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ORRrsi killed renamable $r2, killed renamable $r3, 11, 14, $noreg, $noreg, debug-location !1023; ../clzsi2.c:52:37
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = nsw ADDri killed renamable $r2, 1, 14, $noreg, $noreg, debug-location !1023; ../clzsi2.c:52:37
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !1024; ../clzsi2.c:52:25
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1025; ../clzsi2.c:52:14
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1026; ../clzsi2.c:52:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1026; ../clzsi2.c:52:5
# Before:
not available
# After:
not available
#### Function: __cmpdi2
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 24, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 20, 14, $noreg, debug-location !1029 :: (store (s32) into %ir.all + 4, basealign 8); ../cmpdi2.c:26:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 16, 14, $noreg, debug-location !1029 :: (store (s32) into %ir.all, align 8); ../cmpdi2.c:26:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r3, $sp, 12, 14, $noreg, debug-location !1031 :: (store (s32) into %ir.all1 + 4, basealign 8); ../cmpdi2.c:28:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, $sp, 8, 14, $noreg, debug-location !1031 :: (store (s32) into %ir.all1, align 8); ../cmpdi2.c:28:11
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 20, 14, $noreg, debug-location !1033 :: (dereferenceable load (s32) from %ir.high); ../cmpdi2.c:29:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1035 :: (dereferenceable load (s32) from %ir.high3); ../cmpdi2.c:29:24
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1037; ../cmpdi2.c:29:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 10, killed $cpsr, debug-location !1037; ../cmpdi2.c:29:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1037; ../cmpdi2.c:29:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1038; ../cmpdi2.c:30:9
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = LDRi12 $sp, 20, 14, $noreg, debug-location !1040 :: (dereferenceable load (s32) from %ir.high5); ../cmpdi2.c:31:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1042 :: (dereferenceable load (s32) from %ir.high7); ../cmpdi2.c:31:24
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1044; ../cmpdi2.c:31:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 13, killed $cpsr, debug-location !1044; ../cmpdi2.c:31:9
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !1044; ../cmpdi2.c:31:9
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: renamable $r0 = MOVi 2, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1045; ../cmpdi2.c:32:9
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !1046 :: (dereferenceable load (s32) from %ir.low, align 8); ../cmpdi2.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1047 :: (dereferenceable load (s32) from %ir.low13, align 8); ../cmpdi2.c:33:23
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1049; ../cmpdi2.c:33:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 2, killed $cpsr, debug-location !1049; ../cmpdi2.c:33:9
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !1049; ../cmpdi2.c:33:9
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1050; ../cmpdi2.c:34:9
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: renamable $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !1051 :: (dereferenceable load (s32) from %ir.low18, align 8); ../cmpdi2.c:35:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1052 :: (dereferenceable load (s32) from %ir.low20, align 8); ../cmpdi2.c:35:23
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1054; ../cmpdi2.c:35:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 9, killed $cpsr, debug-location !1054; ../cmpdi2.c:35:9
# Before:
not available
# After:
not available
## Instruction: B %bb.7, debug-location !1054; ../cmpdi2.c:35:9
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: renamable $r0 = MOVi 2, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1055; ../cmpdi2.c:36:9
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1056; ../cmpdi2.c:37:5
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1057 :: (load (s32) from %stack.2); ../cmpdi2.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 24, 14, $noreg, $noreg, debug-location !1058; ../cmpdi2.c:38:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1058; ../cmpdi2.c:38:1
# Before:
not available
# After:
not available
#### Function: __ctzdi2
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 4, 14, $noreg, debug-location !1065 :: (store (s32) into %ir.all + 4, basealign 8); ../ctzdi2.c:25:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 0, 14, $noreg, debug-location !1065 :: (store (s32) into %ir.all, align 8); ../ctzdi2.c:25:11
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $sp, 0, 14, $noreg, debug-location !1066 :: (dereferenceable load (s32) from %ir.low, align 8); ../ctzdi2.c:26:28
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1069 :: (dereferenceable load (s32) from %ir.high); ../ctzdi2.c:27:31
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r2, 0, 14, $noreg, implicit-def $cpsr, debug-location !1070; ../ctzdi2.c:27:41
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r2, 14, $noreg, $noreg, debug-location !1070; ../ctzdi2.c:27:41
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr killed renamable $r0, 0, killed $cpsr, $noreg, implicit renamable $r1, debug-location !1070; ../ctzdi2.c:27:41
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !1071; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = BICrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1071; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1071; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1071; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r3, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1071; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r3, 14, $noreg, $noreg, debug-location !1071; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1071; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1071; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1071; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r3 = MULv5 killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1071; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r3, 195, 14, $noreg, $noreg, debug-location !1071; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 32, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, killed renamable $r3, 195, 14, $noreg, $noreg, debug-location !1073; ../ctzdi2.c:27:59
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r2, 0, 14, $noreg, implicit-def $cpsr, debug-location !1073; ../ctzdi2.c:27:59
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr killed renamable $r1, 0, killed $cpsr, $noreg, implicit renamable $r0, debug-location !1073; ../ctzdi2.c:27:59
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 8, 14, $noreg, $noreg, debug-location !1074; ../ctzdi2.c:27:5
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1074; ../ctzdi2.c:27:5
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
#### Function: __ctzsi2
### Basic Block: 0
## Instruction: $r2 = MOVr killed $r0, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: $r0 = MOVi 255, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r0 = ORRri $r0, 65280, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr renamable $r2, killed renamable $r0, 14, $noreg, $noreg, debug-location !1076; ../ctzsi2.c:25:20
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = RSBri renamable $r0, 0, 14, $noreg, def $cpsr, debug-location !1076; ../ctzsi2.c:25:20
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADCrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1076; ../ctzsi2.c:25:20
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 34, 14, $noreg, $noreg, debug-location !1078; ../ctzsi2.c:25:40
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVsr renamable $r2, renamable $r0, 3, 14, $noreg, $noreg, debug-location !1079; ../ctzsi2.c:26:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 255, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r2, renamable $r0, 3, 14, $noreg, $noreg, debug-location !1080; ../ctzsi2.c:29:13
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !1080; ../ctzsi2.c:29:13
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1080; ../ctzsi2.c:29:13
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVsi renamable $r1, 26, 14, $noreg, $noreg, debug-location !1082; ../ctzsi2.c:29:29
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsr renamable $r3, renamable $r12, 3, 14, $noreg, $noreg, debug-location !1083; ../ctzsi2.c:30:7
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $r1, 26, 14, $noreg, $noreg, debug-location !1084; ../ctzsi2.c:31:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 15, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r3, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !1085; ../ctzsi2.c:33:13
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !1085; ../ctzsi2.c:33:13
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1085; ../ctzsi2.c:33:13
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVsi renamable $r1, 18, 14, $noreg, $noreg, debug-location !1087; ../ctzsi2.c:33:27
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVsr renamable $r2, renamable $r12, 3, 14, $noreg, $noreg, debug-location !1088; ../ctzsi2.c:34:7
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $r1, 18, 14, $noreg, $noreg, debug-location !1089; ../ctzsi2.c:35:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 3, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r2, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !1090; ../ctzsi2.c:37:13
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !1090; ../ctzsi2.c:37:13
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1090; ../ctzsi2.c:37:13
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVsi renamable $r1, 10, 14, $noreg, $noreg, debug-location !1092; ../ctzsi2.c:37:26
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsr renamable $r3, renamable $r12, 3, 14, $noreg, $noreg, debug-location !1093; ../ctzsi2.c:38:7
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $r1, 10, 14, $noreg, $noreg, debug-location !1094; ../ctzsi2.c:40:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, killed renamable $r2, 11, 14, $noreg, $noreg, debug-location !1095; ../ctzsi2.c:56:25
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nuw nsw RSBri killed renamable $r1, 2, 14, $noreg, $noreg, debug-location !1096; ../ctzsi2.c:56:20
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MVNi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ORRrsr killed renamable $r2, killed renamable $r3, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !1097; ../ctzsi2.c:56:44
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = nsw ADDri killed renamable $r2, 1, 14, $noreg, $noreg, debug-location !1097; ../ctzsi2.c:56:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !1098; ../ctzsi2.c:56:32
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1099; ../ctzsi2.c:56:14
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1100; ../ctzsi2.c:56:5
# Before:
not available
# After:
not available
#### Function: __divdi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $lr = MOVr killed $r3, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r3 = MOVr killed $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVsi renamable $r3, 249, 14, $noreg, $noreg, debug-location !1102; ../divdi3.c:23:20
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r3, 249, 14, $noreg, $noreg, debug-location !1104; ../divdi3.c:25:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = EORrsi renamable $r3, renamable $r3, 249, 14, $noreg, $noreg, debug-location !1104; ../divdi3.c:25:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrsi killed renamable $r0, renamable $r3, 249, 14, $noreg, def $cpsr, debug-location !1105; ../divdi3.c:25:19
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SBCrsi killed renamable $r1, killed renamable $r3, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1105; ../divdi3.c:25:19
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = EORrsi killed renamable $r2, renamable $lr, 249, 14, $noreg, $noreg, debug-location !1106; ../divdi3.c:26:12
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = EORrsi renamable $lr, renamable $lr, 249, 14, $noreg, $noreg, debug-location !1106; ../divdi3.c:26:12
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = SUBrsi killed renamable $r2, renamable $lr, 249, 14, $noreg, def $cpsr, debug-location !1107; ../divdi3.c:26:19
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = SBCrsi killed renamable $r3, renamable $lr, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1107; ../divdi3.c:26:19
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = EORrsi killed renamable $r12, killed renamable $lr, 249, 14, $noreg, $noreg, debug-location !1108; ../divdi3.c:27:9
# Before:
not available
# After:
not available
## Instruction: STRi12 $r12, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: $lr = MOVr $sp, 14, $noreg, $noreg, debug-location !1109; ../divdi3.c:28:13
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r12, killed renamable $lr, 0, 14, $noreg, debug-location !1109 :: (store (s32) into stack); ../divdi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: BL_pred @__udivmoddi4, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !1109; ../divdi3.c:28:13
# Before:
not available
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !1109 :: (load (s32) from %stack.0); ../divdi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORrr killed renamable $r1, renamable $r2, 14, $noreg, $noreg, debug-location !1110; ../divdi3.c:28:44
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrr killed renamable $r0, renamable $r2, 14, $noreg, $noreg, debug-location !1110; ../divdi3.c:28:44
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, renamable $r2, 14, $noreg, def $cpsr, debug-location !1111; ../divdi3.c:28:51
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SBCrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1111; ../divdi3.c:28:51
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1112; ../divdi3.c:28:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1112; ../divdi3.c:28:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1112; ../divdi3.c:28:5
# Before:
not available
# After:
not available
#### Function: __divmoddi4
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r4, killed $r5, killed $r6, killed $r7, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup ADDri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r3, $sp, 12, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: $r5 = MOVr killed $r2, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, 8, 14, $noreg :: (load (s32) from %fixed-stack.0)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r2, $sp, 8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r5, 14, $noreg, $noreg, debug-location !1477; ../divmoddi4.c:22:14
# Before:
not available
# After:
not available
## Instruction: BL_pred @__divdi3, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !1477; ../divmoddi4.c:22:14
# Before:
not available
# After:
not available
## Instruction: $r12 = LDRi12 $sp, 0, 14, $noreg, debug-location !1477 :: (load (s32) from %stack.3); ../divmoddi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !1477 :: (load (s32) from %stack.2); ../divmoddi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 8, 14, $noreg, debug-location !1477 :: (load (s32) from %stack.1); ../divmoddi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: $lr = LDRi12 $sp, 12, 14, $noreg, debug-location !1477 :: (load (s32) from %stack.0); ../divmoddi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r4, early-clobber renamable $r7 = UMULLv5 renamable $r0, renamable $r5, 14, $noreg, $noreg, debug-location !1478; ../divmoddi4.c:23:16
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r6 = MLAv5 renamable $r0, killed renamable $lr, killed renamable $r7, 14, $noreg, $noreg, debug-location !1478; ../divmoddi4.c:23:16
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $lr = MLAv5 renamable $r1, killed renamable $r5, killed renamable $r6, 14, $noreg, $noreg, debug-location !1478; ../divmoddi4.c:23:16
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = SUBrr killed renamable $r12, killed renamable $r4, 14, $noreg, def $cpsr, debug-location !1479; ../divmoddi4.c:23:12
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = SBCrr killed renamable $r2, killed renamable $lr, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1479; ../divmoddi4.c:23:12
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r12, renamable $r3, 0, 14, $noreg, debug-location !1480 :: (store (s32) into %ir.rem, align 8); ../divmoddi4.c:23:8
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, killed renamable $r3, 4, 14, $noreg, debug-location !1480 :: (store (s32) into %ir.rem + 4, basealign 8); ../divmoddi4.c:23:8
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy SUBri killed $r11, 16, 14, $noreg, $noreg, debug-location !1481; ../divmoddi4.c:24:3
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r4, def $r5, def $r6, def $r7, def $r11, def $lr, debug-location !1481; ../divmoddi4.c:24:3
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1481; ../divmoddi4.c:24:3
# Before:
not available
# After:
not available
#### Function: __divmodsi4
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r2, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: BL_pred @__divsi3, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1483; ../divmodsi4.c:22:14
# Before:
not available
# After:
not available
## Instruction: $r12 = LDRi12 $sp, 4, 14, $noreg, debug-location !1483 :: (load (s32) from %stack.2); ../divmodsi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1483 :: (load (s32) from %stack.1); ../divmodsi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $r11, -4, 14, $noreg, debug-location !1483 :: (load (s32) from %stack.0); ../divmodsi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r3 = nsw MULv5 renamable $r0, killed renamable $r12, 14, $noreg, $noreg, debug-location !1484; ../divmodsi4.c:23:16
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nsw SUBrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, debug-location !1485; ../divmodsi4.c:23:12
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, killed renamable $r2, 0, 14, $noreg, debug-location !1486 :: (store (s32) into %ir.rem); ../divmodsi4.c:23:8
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1487; ../divmodsi4.c:24:3
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1487; ../divmodsi4.c:24:3
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1487; ../divmodsi4.c:24:3
# Before:
not available
# After:
not available
#### Function: __divsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r3 = MOVr killed $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr killed $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsi renamable $r1, 249, 14, $noreg, $noreg, debug-location !1489; ../divsi3.c:25:20
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi renamable $r1, renamable $r1, 249, 14, $noreg, $noreg, debug-location !1491; ../divsi3.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBrsi killed renamable $r0, killed renamable $r1, 249, 14, $noreg, $noreg, debug-location !1492; ../divsi3.c:27:19
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = EORrsi renamable $r3, renamable $r3, 249, 14, $noreg, $noreg, debug-location !1493; ../divsi3.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nsw SUBrsi killed renamable $r1, renamable $r3, 249, 14, $noreg, $noreg, debug-location !1494; ../divsi3.c:28:19
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = EORrsi killed renamable $r2, killed renamable $r3, 249, 14, $noreg, $noreg, debug-location !1495; ../divsi3.c:29:9
# Before:
not available
# After:
not available
## Instruction: STRi12 $r2, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: BL &__udivsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1496; ../divsi3.c:36:22
# Before:
not available
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 4, 14, $noreg, debug-location !1496 :: (load (s32) from %stack.0); ../divsi3.c:36:22
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORrr killed renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1497; ../divsi3.c:36:33
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1498; ../divsi3.c:36:40
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1499; ../divsi3.c:36:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1499; ../divsi3.c:36:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1499; ../divsi3.c:36:5
# Before:
not available
# After:
not available
#### Function: __ffsdi2
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 12, 14, $noreg, debug-location !1502 :: (store (s32) into %ir.all + 4, basealign 8); ../ffsdi2.c:25:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 8, 14, $noreg, debug-location !1502 :: (store (s32) into %ir.all, align 8); ../ffsdi2.c:25:11
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !1503 :: (dereferenceable load (s32) from %ir.low, align 8); ../ffsdi2.c:26:13
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1505; ../ffsdi2.c:26:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !1505; ../ffsdi2.c:26:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1505; ../ffsdi2.c:26:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1507 :: (dereferenceable load (s32) from %ir.high); ../ffsdi2.c:28:17
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1509; ../ffsdi2.c:28:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 1, killed $cpsr, debug-location !1509; ../ffsdi2.c:28:13
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1509; ../ffsdi2.c:28:13
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !1510; ../ffsdi2.c:29:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1512 :: (dereferenceable load (s32) from %ir.high5); ../ffsdi2.c:30:34
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !1513; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = BICrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1513; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1513; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1513; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r2, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1513; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1513; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1513; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1513; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1513; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1513; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 33, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, killed renamable $r1, 195, 14, $noreg, $noreg, debug-location !1514; ../ffsdi2.c:30:40
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !1515; ../ffsdi2.c:30:9
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1516 :: (dereferenceable load (s32) from %ir.low8, align 8); ../ffsdi2.c:32:30
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !1517; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = BICrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1517; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1517; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1517; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r2, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1517; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1517; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1517; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1517; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1517; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1517; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, killed renamable $r1, 195, 14, $noreg, $noreg, debug-location !1518; ../ffsdi2.c:32:35
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !1519; ../ffsdi2.c:32:5
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1520 :: (load (s32) from %stack.1); ../ffsdi2.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 16, 14, $noreg, $noreg, debug-location !1521; ../ffsdi2.c:33:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1521; ../ffsdi2.c:33:1
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
#### Function: __ffssi2
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1524; ../ffssi2.c:24:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 1, killed $cpsr, debug-location !1524; ../ffssi2.c:24:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1524; ../ffssi2.c:24:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: B %bb.3, debug-location !1525; ../ffssi2.c:26:9
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r1 = LDRi12 $sp, 4, 14, $noreg, debug-location !1526 :: (load (s32) from %stack.0); ../ffssi2.c:28:12
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !1526; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = BICrr killed renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1526; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1526; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1526; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r2, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1526; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1526; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1526; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1526; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1526; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1526; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, killed renamable $r1, 195, 14, $noreg, $noreg, debug-location !1527; ../ffssi2.c:28:29
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: B %bb.3, debug-location !1528; ../ffssi2.c:28:5
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1529 :: (load (s32) from %stack.1); ../ffssi2.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 8, 14, $noreg, $noreg, debug-location !1530; ../ffssi2.c:29:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1530; ../ffssi2.c:29:1
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
#### Function: __lshrdi3
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 40, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 $r2, $sp, 12, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 16, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 20, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 36, 14, $noreg, debug-location !1533 :: (store (s32) into %ir.all + 4, basealign 8); ../lshrdi3.c:29:15
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 32, 14, $noreg, debug-location !1533 :: (store (s32) into %ir.all, align 8); ../lshrdi3.c:29:15
# Before:
bot
# After:
not available
## Instruction: TSTri renamable $r2, 32, 14, $noreg, implicit-def $cpsr, debug-location !1535; ../lshrdi3.c:30:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 0, killed $cpsr, debug-location !1535; ../lshrdi3.c:30:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1535; ../lshrdi3.c:30:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg :: (load (s32) from %stack.4)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !1538 :: (store (s32) into %ir.high); ../lshrdi3.c:32:23
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !1540 :: (dereferenceable load (s32) from %ir.high2); ../lshrdi3.c:33:32
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = nsw SUBri renamable $r1, 32, 14, $noreg, $noreg, debug-location !1541; ../lshrdi3.c:33:43
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r1, 3, 14, $noreg, $noreg, debug-location !1542; ../lshrdi3.c:33:37
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !1544 :: (store (s32) into %ir.low, align 8); ../lshrdi3.c:33:22
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !1545; ../lshrdi3.c:34:5
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1547 :: (load (s32) from %stack.4); ../lshrdi3.c:37:13
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1547; ../lshrdi3.c:37:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !1547; ../lshrdi3.c:37:13
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !1547; ../lshrdi3.c:37:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg :: (load (s32) from %stack.3)
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 20, 14, $noreg :: (load (s32) from %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !1548; ../lshrdi3.c:38:13
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r2 = LDRi12 $sp, 12, 14, $noreg, debug-location !1550 :: (load (s32) from %stack.4); ../lshrdi3.c:39:34
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !1550 :: (dereferenceable load (s32) from %ir.high6); ../lshrdi3.c:39:34
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 3, 14, $noreg, $noreg, debug-location !1551; ../lshrdi3.c:39:39
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !1554 :: (store (s32) into %ir.high9); ../lshrdi3.c:39:24
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 32, 14, $noreg, debug-location !1559 :: (dereferenceable load (s32) from %ir.low14, align 8); ../lshrdi3.c:40:72
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !1556 :: (dereferenceable load (s32) from %ir.high11); ../lshrdi3.c:40:33
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = nsw RSBri renamable $r2, 32, 14, $noreg, $noreg, debug-location !1557; ../lshrdi3.c:40:55
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r3, 2, 14, $noreg, $noreg, debug-location !1558; ../lshrdi3.c:40:38
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsr killed renamable $r0, killed renamable $r1, renamable $r2, 3, 14, $noreg, $noreg, debug-location !1561; ../lshrdi3.c:40:61
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !1563 :: (store (s32) into %ir.low17, align 8); ../lshrdi3.c:40:22
# Before:
bot
# After:
not available
## Instruction: B %bb.5
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !1564 :: (dereferenceable load (s32) from %ir.all19, align 8); ../lshrdi3.c:42:19
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !1564 :: (dereferenceable load (s32) from %ir.all19 + 4, basealign 8); ../lshrdi3.c:42:19
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !1565; ../lshrdi3.c:42:5
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1566 :: (load (s32) from %stack.6); ../lshrdi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1566 :: (load (s32) from %stack.5); ../lshrdi3.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 40, 14, $noreg, $noreg, debug-location !1567; ../lshrdi3.c:43:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1567; ../lshrdi3.c:43:1
# Before:
not available
# After:
not available
#### Function: __moddi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r12 = MOVr killed $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r12, $sp, 4, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r2, renamable $r3, 249, 14, $noreg, def $cpsr, debug-location !1569; ../moddi3.c:24:17
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = EORrsi killed renamable $r1, renamable $r3, 249, 14, $noreg, $noreg, debug-location !1569; ../moddi3.c:24:17
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrsi renamable $r3, renamable $r3, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1569; ../moddi3.c:24:17
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = EORrsi killed renamable $r1, killed renamable $r3, 249, 14, $noreg, $noreg, debug-location !1569; ../moddi3.c:24:17
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r12, 249, 14, $noreg, $noreg, debug-location !1571; ../moddi3.c:26:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = EORrsi renamable $r12, renamable $r12, 249, 14, $noreg, $noreg, debug-location !1571; ../moddi3.c:26:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrsi killed renamable $r0, renamable $r12, 249, 14, $noreg, def $cpsr, debug-location !1572; ../moddi3.c:26:17
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SBCrsi killed renamable $r1, renamable $r12, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1572; ../moddi3.c:26:17
# Before:
not available
# After:
not available
## Instruction: $lr = MOVr $sp, 14, $noreg, $noreg, debug-location !1573; ../moddi3.c:28:5
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ADDri $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r12, killed renamable $lr, 0, 14, $noreg, debug-location !1573 :: (store (s32) into stack); ../moddi3.c:28:5
# Before:
bot
# After:
not available
## Instruction: BL_pred @__udivmoddi4, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !1573; ../moddi3.c:28:5
# Before:
not available
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !1573 :: (load (s32) from %stack.1); ../moddi3.c:28:5
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !1574 :: (dereferenceable load (s32) from %ir.r, align 8); ../moddi3.c:29:21
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1574 :: (dereferenceable load (s32) from %ir.r + 4, basealign 8); ../moddi3.c:29:21
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORrsi killed renamable $r1, renamable $r2, 249, 14, $noreg, $noreg, debug-location !1575; ../moddi3.c:29:23
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r2, 249, 14, $noreg, $noreg, debug-location !1575; ../moddi3.c:29:23
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrsi killed renamable $r0, renamable $r2, 249, 14, $noreg, def $cpsr, debug-location !1576; ../moddi3.c:29:28
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SBCrsi killed renamable $r1, killed renamable $r2, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1576; ../moddi3.c:29:28
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1577; ../moddi3.c:29:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1577; ../moddi3.c:29:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1577; ../moddi3.c:29:5
# Before:
not available
# After:
not available
#### Function: __modsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: BL_pred @__divsi3, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1579; ../modsi3.c:22:16
# Before:
not available
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 0, 14, $noreg, debug-location !1579 :: (load (s32) from %stack.1); ../modsi3.c:22:16
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg, debug-location !1579; ../modsi3.c:22:16
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1580 :: (load (s32) from %stack.0); ../modsi3.c:22:31
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r1 = nsw MULv5 killed renamable $r2, killed renamable $r3, 14, $noreg, $noreg, debug-location !1580; ../modsi3.c:22:31
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1581; ../modsi3.c:22:14
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1582; ../modsi3.c:22:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1582; ../modsi3.c:22:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1582; ../modsi3.c:22:5
# Before:
not available
# After:
not available
#### Function: __mulvdi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r4, killed $r10, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup ADDri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 48, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $r11, -24, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r2, $r11, -20, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $r11, -16, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $r11, -12, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORri killed renamable $r1, -2147483648, 14, $noreg, $noreg, debug-location !1584; ../mulvdi3.c:27:11
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1584; ../mulvdi3.c:27:11
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1585; ../mulvdi3.c:27:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.5, 1, killed $cpsr, debug-location !1585; ../mulvdi3.c:27:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1585; ../mulvdi3.c:27:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $r11, -20, 14, $noreg, debug-location !1586 :: (load (s32) from %stack.2); ../mulvdi3.c:29:15
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -24, 14, $noreg, debug-location !1586 :: (load (s32) from %stack.3); ../mulvdi3.c:29:15
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ORRrr renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1586; ../mulvdi3.c:29:15
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1587; ../mulvdi3.c:29:20
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 0, killed $cpsr, debug-location !1587; ../mulvdi3.c:29:20
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1587; ../mulvdi3.c:29:20
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r1 = LDRi12 $r11, -24, 14, $noreg, debug-location !1588 :: (load (s32) from %stack.3); ../mulvdi3.c:29:25
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -20, 14, $noreg, debug-location !1588 :: (load (s32) from %stack.2); ../mulvdi3.c:29:25
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORri renamable $r0, 1, 14, $noreg, $noreg, debug-location !1588; ../mulvdi3.c:29:25
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1588; ../mulvdi3.c:29:25
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1589; ../mulvdi3.c:29:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !1589; ../mulvdi3.c:29:13
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !1589; ../mulvdi3.c:29:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.21, debug-location !1590; ../mulvdi3.c:30:13
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1591 :: (load (s32) from constant-pool); ../mulvdi3.c:31:9
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1591 :: (load (s32) from constant-pool); ../mulvdi3.c:31:9
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 31, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1591; ../mulvdi3.c:31:9
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $r0 = LDRi12 $r11, -20, 14, $noreg, debug-location !1592 :: (load (s32) from %stack.2); ../mulvdi3.c:33:11
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -24, 14, $noreg, debug-location !1592 :: (load (s32) from %stack.3); ../mulvdi3.c:33:11
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORri renamable $r1, -2147483648, 14, $noreg, $noreg, debug-location !1592; ../mulvdi3.c:33:11
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1592; ../mulvdi3.c:33:11
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1593; ../mulvdi3.c:33:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.10, 1, killed $cpsr, debug-location !1593; ../mulvdi3.c:33:9
# Before:
not available
# After:
not available
## Instruction: B %bb.6, debug-location !1593; ../mulvdi3.c:33:9
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !1594 :: (load (s32) from %stack.0); ../mulvdi3.c:35:15
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !1594 :: (load (s32) from %stack.1); ../mulvdi3.c:35:15
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ORRrr renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1594; ../mulvdi3.c:35:15
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1595; ../mulvdi3.c:35:20
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 0, killed $cpsr, debug-location !1595; ../mulvdi3.c:35:20
# Before:
not available
# After:
not available
## Instruction: B %bb.7, debug-location !1595; ../mulvdi3.c:35:20
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !1596 :: (load (s32) from %stack.1); ../mulvdi3.c:35:25
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !1596 :: (load (s32) from %stack.0); ../mulvdi3.c:35:25
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORri renamable $r0, 1, 14, $noreg, $noreg, debug-location !1596; ../mulvdi3.c:35:25
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1596; ../mulvdi3.c:35:25
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1597; ../mulvdi3.c:35:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.9, 1, killed $cpsr, debug-location !1597; ../mulvdi3.c:35:13
# Before:
not available
# After:
not available
## Instruction: B %bb.8, debug-location !1597; ../mulvdi3.c:35:13
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: B %bb.21, debug-location !1598; ../mulvdi3.c:36:13
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1599 :: (load (s32) from constant-pool); ../mulvdi3.c:37:9
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1599 :: (load (s32) from constant-pool); ../mulvdi3.c:37:9
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 37, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1599; ../mulvdi3.c:37:9
# Before:
not available
# After:
not available
### Basic Block: 10
## Instruction: $r3 = LDRi12 $r11, -24, 14, $noreg, debug-location !1600 :: (load (s32) from %stack.3); ../mulvdi3.c:39:19
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $r11, -20, 14, $noreg, debug-location !1600 :: (load (s32) from %stack.2); ../mulvdi3.c:39:19
# Before:
bot
# After:
not available
## Instruction: $r12 = LDRi12 $r11, -16, 14, $noreg, debug-location !1600 :: (load (s32) from %stack.1); ../mulvdi3.c:39:19
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !1600 :: (load (s32) from %stack.0); ../mulvdi3.c:39:19
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVsi renamable $r12, 249, 14, $noreg, $noreg, debug-location !1600; ../mulvdi3.c:39:19
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 0, 14, $noreg :: (store (s32) into %stack.11)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.10)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORrsi renamable $r0, renamable $r12, 249, 14, $noreg, $noreg, debug-location !1601; ../mulvdi3.c:40:23
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi renamable $r12, renamable $r12, 249, 14, $noreg, $noreg, debug-location !1601; ../mulvdi3.c:40:23
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrsi killed renamable $r1, renamable $r12, 249, 14, $noreg, def $cpsr, debug-location !1602; ../mulvdi3.c:40:29
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 8, 14, $noreg :: (store (s32) into %stack.9)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SBCrsi killed renamable $r0, renamable $r12, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1602; ../mulvdi3.c:40:29
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 12, 14, $noreg :: (store (s32) into %stack.8)
# Before:
bot
# After:
not available
## Instruction: renamable $r12 = MOVsi renamable $r3, 249, 14, $noreg, $noreg, debug-location !1603; ../mulvdi3.c:41:19
# Before:
not available
# After:
not available
## Instruction: STRi12 $r12, $sp, 16, 14, $noreg :: (store (s32) into %stack.7)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r12, $sp, 20, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: renamable $r12 = EORrsi renamable $r2, renamable $r3, 249, 14, $noreg, $noreg, debug-location !1604; ../mulvdi3.c:42:23
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = EORrsi renamable $r3, renamable $r3, 249, 14, $noreg, $noreg, debug-location !1604; ../mulvdi3.c:42:23
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = SUBrsi killed renamable $r12, renamable $r3, 249, 14, $noreg, def $cpsr, debug-location !1605; ../mulvdi3.c:42:29
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r12, $sp, 24, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = SBCrsi killed renamable $r2, renamable $r3, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1605; ../mulvdi3.c:42:29
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 28, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: dead renamable $r1 = SUBri renamable $r1, 2, 14, $noreg, def $cpsr, debug-location !1606; ../mulvdi3.c:43:15
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCri renamable $r0, 0, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !1606; ../mulvdi3.c:43:15
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.12, 11, killed $cpsr, debug-location !1607; ../mulvdi3.c:43:19
# Before:
not available
# After:
not available
## Instruction: B %bb.11, debug-location !1607; ../mulvdi3.c:43:19
# Before:
not available
# After:
not available
### Basic Block: 11
## Instruction: $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !1608 :: (load (s32) from %stack.4); ../mulvdi3.c:43:28
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !1608 :: (load (s32) from %stack.5); ../mulvdi3.c:43:28
# Before:
bot
# After:
not available
## Instruction: dead renamable $r1 = RSBri renamable $r1, 1, 14, $noreg, def $cpsr, debug-location !1608; ../mulvdi3.c:43:28
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = RSCri renamable $r0, 0, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !1608; ../mulvdi3.c:43:28
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.13, 11, killed $cpsr, debug-location !1609; ../mulvdi3.c:43:9
# Before:
not available
# After:
not available
## Instruction: B %bb.12, debug-location !1609; ../mulvdi3.c:43:9
# Before:
not available
# After:
not available
### Basic Block: 12
## Instruction: B %bb.21, debug-location !1610; ../mulvdi3.c:44:9
# Before:
not available
# After:
not available
### Basic Block: 13
## Instruction: $r1 = LDRi12 $sp, 4, 14, $noreg, debug-location !1611 :: (load (s32) from %stack.10); ../mulvdi3.c:45:12
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 20, 14, $noreg, debug-location !1611 :: (load (s32) from %stack.6); ../mulvdi3.c:45:12
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1611 :: (load (s32) from %stack.11); ../mulvdi3.c:45:12
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 16, 14, $noreg, debug-location !1611 :: (load (s32) from %stack.7); ../mulvdi3.c:45:12
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORrr renamable $r0, renamable $r3, 14, $noreg, $noreg, debug-location !1611; ../mulvdi3.c:45:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = EORrr renamable $r1, renamable $r2, 14, $noreg, $noreg, debug-location !1611; ../mulvdi3.c:45:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1611; ../mulvdi3.c:45:12
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1612; ../mulvdi3.c:45:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.17, 1, killed $cpsr, debug-location !1612; ../mulvdi3.c:45:9
# Before:
not available
# After:
not available
## Instruction: B %bb.14, debug-location !1612; ../mulvdi3.c:45:9
# Before:
not available
# After:
not available
### Basic Block: 14
## Instruction: $r3 = LDRi12 $sp, 28, 14, $noreg, debug-location !1613 :: (load (s32) from %stack.4); ../mulvdi3.c:47:25
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 24, 14, $noreg, debug-location !1613 :: (load (s32) from %stack.5); ../mulvdi3.c:47:25
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MVNi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MVNi -2147483648, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL &__divdi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !1613; ../mulvdi3.c:47:25
# Before:
not available
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 8, 14, $noreg, debug-location !1613 :: (load (s32) from %stack.9); ../mulvdi3.c:47:25
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg, debug-location !1613; ../mulvdi3.c:47:25
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1613 :: (load (s32) from %stack.8); ../mulvdi3.c:47:25
# Before:
bot
# After:
not available
## Instruction: dead renamable $r2 = SUBrr killed renamable $r2, renamable $r3, 14, $noreg, def $cpsr, debug-location !1614; ../mulvdi3.c:47:19
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCrr killed renamable $r1, renamable $r0, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !1614; ../mulvdi3.c:47:19
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.16, 10, killed $cpsr, debug-location !1615; ../mulvdi3.c:47:13
# Before:
not available
# After:
not available
## Instruction: B %bb.15, debug-location !1615; ../mulvdi3.c:47:13
# Before:
not available
# After:
not available
### Basic Block: 15
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1616 :: (load (s32) from constant-pool); ../mulvdi3.c:48:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1616 :: (load (s32) from constant-pool); ../mulvdi3.c:48:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 48, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1616; ../mulvdi3.c:48:13
# Before:
not available
# After:
not available
### Basic Block: 16
## Instruction: B %bb.20, debug-location !1617; ../mulvdi3.c:49:5
# Before:
not available
# After:
not available
### Basic Block: 17
## Instruction: $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !1618 :: (load (s32) from %stack.4); ../mulvdi3.c:52:27
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !1618 :: (load (s32) from %stack.5); ../mulvdi3.c:52:27
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !1618; ../mulvdi3.c:52:27
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = RSCri renamable $r0, 0, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1618; ../mulvdi3.c:52:27
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi -2147483648, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL &__divdi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !1619; ../mulvdi3.c:52:25
# Before:
not available
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 8, 14, $noreg, debug-location !1619 :: (load (s32) from %stack.9); ../mulvdi3.c:52:25
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg, debug-location !1619; ../mulvdi3.c:52:25
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1619 :: (load (s32) from %stack.8); ../mulvdi3.c:52:25
# Before:
bot
# After:
not available
## Instruction: dead renamable $r2 = SUBrr killed renamable $r2, renamable $r3, 14, $noreg, def $cpsr, debug-location !1620; ../mulvdi3.c:52:19
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCrr killed renamable $r1, renamable $r0, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !1620; ../mulvdi3.c:52:19
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.19, 10, killed $cpsr, debug-location !1621; ../mulvdi3.c:52:13
# Before:
not available
# After:
not available
## Instruction: B %bb.18, debug-location !1621; ../mulvdi3.c:52:13
# Before:
not available
# After:
not available
### Basic Block: 18
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1622 :: (load (s32) from constant-pool); ../mulvdi3.c:53:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1622 :: (load (s32) from constant-pool); ../mulvdi3.c:53:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 53, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1622; ../mulvdi3.c:53:13
# Before:
not available
# After:
not available
### Basic Block: 19
## Instruction: B %bb.20
# Before:
not available
# After:
not available
### Basic Block: 20
## Instruction: B %bb.21, debug-location !1623; ../mulvdi3.c:55:5
# Before:
not available
# After:
not available
### Basic Block: 21
## Instruction: $r2 = LDRi12 $r11, -16, 14, $noreg, debug-location !1624 :: (load (s32) from %stack.1); ../mulvdi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $r11, -20, 14, $noreg, debug-location !1624 :: (load (s32) from %stack.2); ../mulvdi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -12, 14, $noreg, debug-location !1624 :: (load (s32) from %stack.0); ../mulvdi3.c:0
# Before:
bot
# After:
not available
## Instruction: $lr = LDRi12 $r11, -24, 14, $noreg, debug-location !1624 :: (load (s32) from %stack.3); ../mulvdi3.c:0
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r0, early-clobber renamable $r4 = UMULLv5 renamable $r1, renamable $r3, 14, $noreg, $noreg, debug-location !1624; ../mulvdi3.c:0
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r12 = MLAv5 killed renamable $r1, killed renamable $lr, killed renamable $r4, 14, $noreg, $noreg, debug-location !1624; ../mulvdi3.c:0
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r1 = MLAv5 killed renamable $r2, killed renamable $r3, killed renamable $r12, 14, $noreg, $noreg, debug-location !1624; ../mulvdi3.c:0
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy SUBri killed $r11, 8, 14, $noreg, $noreg, debug-location !1625; ../mulvdi3.c:56:1
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r4, def $r10, def $r11, def $lr, debug-location !1625; ../mulvdi3.c:56:1
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1625; ../mulvdi3.c:56:1
# Before:
not available
# After:
not available
### Basic Block: 22
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: __mulvsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 24, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $r11, -8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, -2147483648, 14, $noreg, implicit-def $cpsr, debug-location !1628; ../mulvsi3.c:27:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.5, 1, killed $cpsr, debug-location !1628; ../mulvsi3.c:27:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1628; ../mulvsi3.c:27:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1630 :: (load (s32) from %stack.1); ../mulvsi3.c:29:20
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1630; ../mulvsi3.c:29:20
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 0, killed $cpsr, debug-location !1630; ../mulvsi3.c:29:20
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1630; ../mulvsi3.c:29:20
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1632 :: (load (s32) from %stack.1); ../mulvsi3.c:29:13
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !1632; ../mulvsi3.c:29:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !1632; ../mulvsi3.c:29:13
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !1632; ../mulvsi3.c:29:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.21, debug-location !1633; ../mulvsi3.c:30:13
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1634 :: (load (s32) from constant-pool); ../mulvsi3.c:31:9
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1634 :: (load (s32) from constant-pool); ../mulvsi3.c:31:9
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 31, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1634; ../mulvsi3.c:31:9
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1636 :: (load (s32) from %stack.1); ../mulvsi3.c:33:9
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, -2147483648, 14, $noreg, implicit-def $cpsr, debug-location !1636; ../mulvsi3.c:33:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.10, 1, killed $cpsr, debug-location !1636; ../mulvsi3.c:33:9
# Before:
not available
# After:
not available
## Instruction: B %bb.6, debug-location !1636; ../mulvsi3.c:33:9
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1638 :: (load (s32) from %stack.0); ../mulvsi3.c:35:20
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1638; ../mulvsi3.c:35:20
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 0, killed $cpsr, debug-location !1638; ../mulvsi3.c:35:20
# Before:
not available
# After:
not available
## Instruction: B %bb.7, debug-location !1638; ../mulvsi3.c:35:20
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1640 :: (load (s32) from %stack.0); ../mulvsi3.c:35:13
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !1640; ../mulvsi3.c:35:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.9, 1, killed $cpsr, debug-location !1640; ../mulvsi3.c:35:13
# Before:
not available
# After:
not available
## Instruction: B %bb.8, debug-location !1640; ../mulvsi3.c:35:13
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: B %bb.21, debug-location !1641; ../mulvsi3.c:36:13
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1642 :: (load (s32) from constant-pool); ../mulvsi3.c:37:9
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1642 :: (load (s32) from constant-pool); ../mulvsi3.c:37:9
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 37, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1642; ../mulvsi3.c:37:9
# Before:
not available
# After:
not available
### Basic Block: 10
## Instruction: $r2 = LDRi12 $r11, -8, 14, $noreg, debug-location !1643 :: (load (s32) from %stack.1); ../mulvsi3.c:39:19
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !1643 :: (load (s32) from %stack.0); ../mulvsi3.c:39:19
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r1, 249, 14, $noreg, $noreg, debug-location !1643; ../mulvsi3.c:39:19
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORrsi renamable $r1, renamable $r1, 249, 14, $noreg, $noreg, debug-location !1644; ../mulvsi3.c:40:23
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBrsi killed renamable $r0, renamable $r1, 249, 14, $noreg, $noreg, debug-location !1645; ../mulvsi3.c:40:29
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVsi renamable $r2, 249, 14, $noreg, $noreg, debug-location !1646; ../mulvsi3.c:41:19
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 8, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORrsi renamable $r2, renamable $r2, 249, 14, $noreg, $noreg, debug-location !1647; ../mulvsi3.c:42:23
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nsw SUBrsi killed renamable $r1, renamable $r2, 249, 14, $noreg, $noreg, debug-location !1648; ../mulvsi3.c:42:29
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 12, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 2, 14, $noreg, implicit-def $cpsr, debug-location !1650; ../mulvsi3.c:43:19
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.12, 11, killed $cpsr, debug-location !1650; ../mulvsi3.c:43:19
# Before:
not available
# After:
not available
## Instruction: B %bb.11, debug-location !1650; ../mulvsi3.c:43:19
# Before:
not available
# After:
not available
### Basic Block: 11
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1652 :: (load (s32) from %stack.2); ../mulvsi3.c:43:9
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !1652; ../mulvsi3.c:43:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.13, 12, killed $cpsr, debug-location !1652; ../mulvsi3.c:43:9
# Before:
not available
# After:
not available
## Instruction: B %bb.12, debug-location !1652; ../mulvsi3.c:43:9
# Before:
not available
# After:
not available
### Basic Block: 12
## Instruction: B %bb.21, debug-location !1653; ../mulvsi3.c:44:9
# Before:
not available
# After:
not available
### Basic Block: 13
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1655 :: (load (s32) from %stack.5); ../mulvsi3.c:45:9
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1655 :: (load (s32) from %stack.3); ../mulvsi3.c:45:9
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1655; ../mulvsi3.c:45:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.17, 1, killed $cpsr, debug-location !1655; ../mulvsi3.c:45:9
# Before:
not available
# After:
not available
## Instruction: B %bb.14, debug-location !1655; ../mulvsi3.c:45:9
# Before:
not available
# After:
not available
### Basic Block: 14
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1656 :: (load (s32) from %stack.2); ../mulvsi3.c:47:25
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MVNi -2147483648, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL &__divsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1656; ../mulvsi3.c:47:25
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg, debug-location !1656; ../mulvsi3.c:47:25
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1658 :: (load (s32) from %stack.4); ../mulvsi3.c:47:13
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1658; ../mulvsi3.c:47:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.16, 13, killed $cpsr, debug-location !1658; ../mulvsi3.c:47:13
# Before:
not available
# After:
not available
## Instruction: B %bb.15, debug-location !1658; ../mulvsi3.c:47:13
# Before:
not available
# After:
not available
### Basic Block: 15
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1659 :: (load (s32) from constant-pool); ../mulvsi3.c:48:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1659 :: (load (s32) from constant-pool); ../mulvsi3.c:48:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 48, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1659; ../mulvsi3.c:48:13
# Before:
not available
# After:
not available
### Basic Block: 16
## Instruction: B %bb.20, debug-location !1660; ../mulvsi3.c:49:5
# Before:
not available
# After:
not available
### Basic Block: 17
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1661 :: (load (s32) from %stack.2); ../mulvsi3.c:52:27
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = nsw RSBri renamable $r0, 0, 14, $noreg, $noreg, debug-location !1661; ../mulvsi3.c:52:27
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi -2147483648, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL &__divsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1662; ../mulvsi3.c:52:25
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg, debug-location !1662; ../mulvsi3.c:52:25
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1664 :: (load (s32) from %stack.4); ../mulvsi3.c:52:13
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1664; ../mulvsi3.c:52:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.19, 13, killed $cpsr, debug-location !1664; ../mulvsi3.c:52:13
# Before:
not available
# After:
not available
## Instruction: B %bb.18, debug-location !1664; ../mulvsi3.c:52:13
# Before:
not available
# After:
not available
### Basic Block: 18
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1665 :: (load (s32) from constant-pool); ../mulvsi3.c:53:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1665 :: (load (s32) from constant-pool); ../mulvsi3.c:53:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 53, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1665; ../mulvsi3.c:53:13
# Before:
not available
# After:
not available
### Basic Block: 19
## Instruction: B %bb.20
# Before:
not available
# After:
not available
### Basic Block: 20
## Instruction: B %bb.21, debug-location !1666; ../mulvsi3.c:55:5
# Before:
not available
# After:
not available
### Basic Block: 21
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !1667 :: (load (s32) from %stack.0); ../mulvsi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $r11, -8, 14, $noreg, debug-location !1667 :: (load (s32) from %stack.1); ../mulvsi3.c:0
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r0 = nsw MULv5 killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !1667; ../mulvsi3.c:0
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1668; ../mulvsi3.c:56:1
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1668; ../mulvsi3.c:56:1
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1668; ../mulvsi3.c:56:1
# Before:
not available
# After:
not available
### Basic Block: 22
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: __paritydi2
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 4, 14, $noreg, debug-location !1671 :: (store (s32) into %ir.all + 4, basealign 8); ../paritydi2.c:23:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 0, 14, $noreg, debug-location !1671 :: (store (s32) into %ir.all, align 8); ../paritydi2.c:23:11
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !1674 :: (dereferenceable load (s32) from %ir.low, align 8); ../paritydi2.c:24:39
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1673 :: (dereferenceable load (s32) from %ir.high); ../paritydi2.c:24:28
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1675; ../paritydi2.c:24:33
# Before:
not available
# After:
not available
## Instruction: BL_pred @__paritysi2, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit-def $sp, implicit-def $r0, debug-location !1676; ../paritydi2.c:24:12
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1677; ../paritydi2.c:24:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1677; ../paritydi2.c:24:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1677; ../paritydi2.c:24:5
# Before:
not available
# After:
not available
#### Function: __paritysi2
### Basic Block: 0
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r0, 131, 14, $noreg, $noreg, debug-location !1680; ../paritysi2.c:23:7
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r0, 67, 14, $noreg, $noreg, debug-location !1682; ../paritysi2.c:24:7
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1684; ../paritysi2.c:25:7
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ANDri killed renamable $r0, 15, 14, $noreg, $noreg, debug-location !1685; ../paritysi2.c:26:26
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVi 150, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = ORRri $r1, 26880, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrsr killed renamable $r0, killed renamable $r1, killed renamable $r2, 3, 14, $noreg, $noreg, debug-location !1687; ../paritysi2.c:26:34
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1688; ../paritysi2.c:26:5
# Before:
not available
# After:
not available
#### Function: __popcountdi2
### Basic Block: 0
## Instruction: $r2 = MOVr killed $r0, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: $r0 = MOVsi renamable $r1, 11, 14, $noreg, def $cpsr, debug-location !1690; ../popcountdi2.c:23:20
# Before:
not available
# After:
not available
## Instruction: $r3 = MOVsi renamable $r2, 5, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1690; ../popcountdi2.c:23:20
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, renamable $r12, 14, $noreg, $noreg, debug-location !1691; ../popcountdi2.c:23:26
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = ANDrr killed renamable $r3, killed renamable $r12, 14, $noreg, $noreg, debug-location !1691; ../popcountdi2.c:23:26
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = SUBrr killed renamable $r2, killed renamable $r3, 14, $noreg, def $cpsr, debug-location !1692; ../popcountdi2.c:23:13
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = SBCrr killed renamable $r1, killed renamable $r0, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1692; ../popcountdi2.c:23:13
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r12, renamable $r3, 19, 14, $noreg, $noreg, debug-location !1694; ../popcountdi2.c:25:21
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrsi renamable $r12, renamable $r2, 19, 14, $noreg, $noreg, debug-location !1694; ../popcountdi2.c:25:21
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = ANDrr killed renamable $r3, renamable $r12, 14, $noreg, $noreg, debug-location !1695; ../popcountdi2.c:25:52
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ANDrr killed renamable $r2, killed renamable $r12, 14, $noreg, $noreg, debug-location !1695; ../popcountdi2.c:25:52
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, debug-location !1696; ../popcountdi2.c:25:46
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1696; ../popcountdi2.c:25:46
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, renamable $r1, 35, 14, $noreg, $noreg, debug-location !1698; ../popcountdi2.c:27:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1698; ../popcountdi2.c:27:14
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, renamable $r2, 14, $noreg, $noreg, debug-location !1699; ../popcountdi2.c:27:27
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1699; ../popcountdi2.c:27:27
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1701; ../popcountdi2.c:29:28
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, renamable $r0, 131, 14, $noreg, $noreg, debug-location !1704; ../popcountdi2.c:32:11
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, renamable $r0, 67, 14, $noreg, $noreg, debug-location !1706; ../popcountdi2.c:35:15
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDri killed renamable $r0, 255, 14, $noreg, $noreg, debug-location !1707; ../popcountdi2.c:35:27
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1708; ../popcountdi2.c:35:5
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
#### Function: __popcountsi2
### Basic Block: 0
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1711; ../popcountsi2.c:23:23
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1712; ../popcountsi2.c:23:11
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrsi renamable $r2, renamable $r1, 19, 14, $noreg, $noreg, debug-location !1714; ../popcountsi2.c:25:19
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !1715; ../popcountsi2.c:25:38
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1716; ../popcountsi2.c:25:33
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1718; ../popcountsi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1719; ../popcountsi2.c:27:24
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, renamable $r0, 131, 14, $noreg, $noreg, debug-location !1721; ../popcountsi2.c:29:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, renamable $r0, 67, 14, $noreg, $noreg, debug-location !1723; ../popcountsi2.c:32:15
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDri killed renamable $r0, 255, 14, $noreg, $noreg, debug-location !1724; ../popcountsi2.c:32:27
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1725; ../popcountsi2.c:32:5
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
#### Function: __subvdi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r12 = MOVr $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r12, $sp, 0, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: $r12 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r12, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r2, 14, $noreg, def $cpsr, debug-location !1727; ../subvdi3.c:24:27
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SBCrr killed renamable $r1, renamable $r3, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1727; ../subvdi3.c:24:27
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r3, 0, 14, $noreg, implicit-def $cpsr, debug-location !1729; ../subvdi3.c:25:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 4, killed $cpsr, debug-location !1729; ../subvdi3.c:25:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1729; ../subvdi3.c:25:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1730 :: (load (s32) from %stack.3); ../subvdi3.c:27:15
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !1730 :: (load (s32) from %stack.0); ../subvdi3.c:27:15
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !1730 :: (load (s32) from %stack.2); ../subvdi3.c:27:15
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 8, 14, $noreg, debug-location !1730 :: (load (s32) from %stack.1); ../subvdi3.c:27:15
# Before:
bot
# After:
not available
## Instruction: dead renamable $r2 = SUBrr renamable $r2, renamable $r3, 14, $noreg, def $cpsr, debug-location !1730; ../subvdi3.c:27:15
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCrr renamable $r0, renamable $r1, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !1730; ../subvdi3.c:27:15
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 10, killed $cpsr, debug-location !1731; ../subvdi3.c:27:13
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1731; ../subvdi3.c:27:13
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1732 :: (load (s32) from constant-pool); ../subvdi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1732 :: (load (s32) from constant-pool); ../subvdi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 28, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1732; ../subvdi3.c:28:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.7, debug-location !1733; ../subvdi3.c:29:5
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1734 :: (load (s32) from %stack.3); ../subvdi3.c:32:15
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !1734 :: (load (s32) from %stack.0); ../subvdi3.c:32:15
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !1734 :: (load (s32) from %stack.2); ../subvdi3.c:32:15
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 8, 14, $noreg, debug-location !1734 :: (load (s32) from %stack.1); ../subvdi3.c:32:15
# Before:
bot
# After:
not available
## Instruction: dead renamable $r2 = SUBrr renamable $r2, renamable $r3, 14, $noreg, def $cpsr, debug-location !1734; ../subvdi3.c:32:15
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCrr renamable $r0, renamable $r1, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !1734; ../subvdi3.c:32:15
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 11, killed $cpsr, debug-location !1735; ../subvdi3.c:32:13
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !1735; ../subvdi3.c:32:13
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1736 :: (load (s32) from constant-pool); ../subvdi3.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1736 :: (load (s32) from constant-pool); ../subvdi3.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 33, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1736; ../subvdi3.c:33:13
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: B %bb.7
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !1737 :: (load (s32) from %stack.0); ../subvdi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !1737 :: (load (s32) from %stack.1); ../subvdi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1737; ../subvdi3.c:35:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1737; ../subvdi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1737; ../subvdi3.c:35:5
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: __subvsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SUBrr renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1739; ../subvsi3.c:24:27
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r1, 0, 14, $noreg, implicit-def $cpsr, debug-location !1741; ../subvsi3.c:25:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 4, killed $cpsr, debug-location !1741; ../subvsi3.c:25:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1741; ../subvsi3.c:25:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1743 :: (load (s32) from %stack.0); ../subvsi3.c:27:13
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !1743 :: (load (s32) from %stack.1); ../subvsi3.c:27:13
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1743; ../subvsi3.c:27:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 13, killed $cpsr, debug-location !1743; ../subvsi3.c:27:13
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1743; ../subvsi3.c:27:13
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1744 :: (load (s32) from constant-pool); ../subvsi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1744 :: (load (s32) from constant-pool); ../subvsi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 28, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1744; ../subvsi3.c:28:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.7, debug-location !1745; ../subvsi3.c:29:5
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1747 :: (load (s32) from %stack.0); ../subvsi3.c:32:13
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !1747 :: (load (s32) from %stack.1); ../subvsi3.c:32:13
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1747; ../subvsi3.c:32:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 12, killed $cpsr, debug-location !1747; ../subvsi3.c:32:13
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !1747; ../subvsi3.c:32:13
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1748 :: (load (s32) from constant-pool); ../subvsi3.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1748 :: (load (s32) from constant-pool); ../subvsi3.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 33, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1748; ../subvsi3.c:33:13
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: B %bb.7
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1749 :: (load (s32) from %stack.0); ../subvsi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1749; ../subvsi3.c:35:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1749; ../subvsi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1749; ../subvsi3.c:35:5
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: __ucmpdi2
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 24, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 20, 14, $noreg, debug-location !1752 :: (store (s32) into %ir.all + 4, basealign 8); ../ucmpdi2.c:26:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 16, 14, $noreg, debug-location !1752 :: (store (s32) into %ir.all, align 8); ../ucmpdi2.c:26:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r3, $sp, 12, 14, $noreg, debug-location !1754 :: (store (s32) into %ir.all1 + 4, basealign 8); ../ucmpdi2.c:28:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, $sp, 8, 14, $noreg, debug-location !1754 :: (store (s32) into %ir.all1, align 8); ../ucmpdi2.c:28:11
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 20, 14, $noreg, debug-location !1756 :: (dereferenceable load (s32) from %ir.high); ../ucmpdi2.c:29:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1758 :: (dereferenceable load (s32) from %ir.high3); ../ucmpdi2.c:29:24
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1760; ../ucmpdi2.c:29:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 2, killed $cpsr, debug-location !1760; ../ucmpdi2.c:29:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1760; ../ucmpdi2.c:29:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1761; ../ucmpdi2.c:30:9
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = LDRi12 $sp, 20, 14, $noreg, debug-location !1763 :: (dereferenceable load (s32) from %ir.high5); ../ucmpdi2.c:31:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1765 :: (dereferenceable load (s32) from %ir.high7); ../ucmpdi2.c:31:24
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1767; ../ucmpdi2.c:31:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 9, killed $cpsr, debug-location !1767; ../ucmpdi2.c:31:9
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !1767; ../ucmpdi2.c:31:9
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: renamable $r0 = MOVi 2, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1768; ../ucmpdi2.c:32:9
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !1769 :: (dereferenceable load (s32) from %ir.low, align 8); ../ucmpdi2.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1770 :: (dereferenceable load (s32) from %ir.low13, align 8); ../ucmpdi2.c:33:23
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1772; ../ucmpdi2.c:33:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 2, killed $cpsr, debug-location !1772; ../ucmpdi2.c:33:9
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !1772; ../ucmpdi2.c:33:9
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1773; ../ucmpdi2.c:34:9
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: renamable $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !1774 :: (dereferenceable load (s32) from %ir.low18, align 8); ../ucmpdi2.c:35:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1775 :: (dereferenceable load (s32) from %ir.low20, align 8); ../ucmpdi2.c:35:23
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1777; ../ucmpdi2.c:35:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 9, killed $cpsr, debug-location !1777; ../ucmpdi2.c:35:9
# Before:
not available
# After:
not available
## Instruction: B %bb.7, debug-location !1777; ../ucmpdi2.c:35:9
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: renamable $r0 = MOVi 2, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1778; ../ucmpdi2.c:36:9
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1779; ../ucmpdi2.c:37:5
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1780 :: (load (s32) from %stack.2); ../ucmpdi2.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 24, 14, $noreg, $noreg, debug-location !1781; ../ucmpdi2.c:38:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1781; ../ucmpdi2.c:38:1
# Before:
not available
# After:
not available
#### Function: __udivdi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $lr = MOVr $sp, 14, $noreg, $noreg, debug-location !1787; ../udivdi3.c:22:12
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r12, killed renamable $lr, 0, 14, $noreg, debug-location !1787 :: (store (s32) into stack); ../udivdi3.c:22:12
# Before:
bot
# After:
not available
## Instruction: BL_pred @__udivmoddi4, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !1787; ../udivdi3.c:22:12
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1788; ../udivdi3.c:22:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1788; ../udivdi3.c:22:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1788; ../udivdi3.c:22:5
# Before:
not available
# After:
not available
#### Function: __udivmoddi4
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 88, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = LDRi12 $r11, 8, 14, $noreg :: (load (s32) from %fixed-stack.0)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r12, $r11, -36, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -4, 14, $noreg, debug-location !1115 :: (store (s32) into %ir.all + 4, basealign 8); ../udivmoddi4.c:29:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -8, 14, $noreg, debug-location !1115 :: (store (s32) into %ir.all, align 8); ../udivmoddi4.c:29:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r3, $r11, -12, 14, $noreg, debug-location !1117 :: (store (s32) into %ir.all1 + 4, basealign 8); ../udivmoddi4.c:31:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, $r11, -16, 14, $noreg, debug-location !1117 :: (store (s32) into %ir.all1, align 8); ../udivmoddi4.c:31:11
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1119 :: (dereferenceable load (s32) from %ir.high); ../udivmoddi4.c:36:13
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1121; ../udivmoddi4.c:36:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 1, killed $cpsr, debug-location !1121; ../udivmoddi4.c:36:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1121; ../udivmoddi4.c:36:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !1123 :: (dereferenceable load (s32) from %ir.high3); ../udivmoddi4.c:38:17
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1125; ../udivmoddi4.c:38:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.5, 1, killed $cpsr, debug-location !1125; ../udivmoddi4.c:38:13
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1125; ../udivmoddi4.c:38:13
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !1126 :: (load (s32) from %stack.4); ../udivmoddi4.c:44:17
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1126; ../udivmoddi4.c:44:17
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 0, killed $cpsr, debug-location !1126; ../udivmoddi4.c:44:17
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !1126; ../udivmoddi4.c:44:17
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1127 :: (dereferenceable load (s32) from %ir.low, align 8); ../udivmoddi4.c:45:28
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !1128 :: (dereferenceable load (s32) from %ir.low9, align 8); ../udivmoddi4.c:45:38
# Before:
bot
# After:
not available
## Instruction: BL &__umodsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1129; ../udivmoddi4.c:45:32
# Before:
not available
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !1129 :: (load (s32) from %stack.4); ../udivmoddi4.c:45:32
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !1131 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:45:22
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !1131 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:45:22
# Before:
bot
# After:
not available
## Instruction: B %bb.4, debug-location !1132; ../udivmoddi4.c:45:17
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1133 :: (dereferenceable load (s32) from %ir.low12, align 8); ../udivmoddi4.c:46:24
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !1134 :: (dereferenceable load (s32) from %ir.low14, align 8); ../udivmoddi4.c:46:34
# Before:
bot
# After:
not available
## Instruction: BL &__udivsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1135; ../udivmoddi4.c:46:28
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr killed $r0, 14, $noreg, $noreg, debug-location !1135; ../udivmoddi4.c:46:28
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !1137; ../udivmoddi4.c:46:13
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !1138 :: (load (s32) from %stack.4); ../udivmoddi4.c:52:13
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1138; ../udivmoddi4.c:52:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.7, 0, killed $cpsr, debug-location !1138; ../udivmoddi4.c:52:13
# Before:
not available
# After:
not available
## Instruction: B %bb.6, debug-location !1138; ../udivmoddi4.c:52:13
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !1139 :: (load (s32) from %stack.4); ../udivmoddi4.c:53:24
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1139 :: (dereferenceable load (s32) from %ir.low20, align 8); ../udivmoddi4.c:53:24
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !1141 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:53:18
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !1141 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:53:18
# Before:
bot
# After:
not available
## Instruction: B %bb.7, debug-location !1142; ../udivmoddi4.c:53:13
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !1143; ../udivmoddi4.c:54:9
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: renamable $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !1144 :: (dereferenceable load (s32) from %ir.low25, align 8); ../udivmoddi4.c:57:13
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1146; ../udivmoddi4.c:57:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.26, 1, killed $cpsr, debug-location !1146; ../udivmoddi4.c:57:9
# Before:
not available
# After:
not available
## Instruction: B %bb.9, debug-location !1146; ../udivmoddi4.c:57:9
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: renamable $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !1148 :: (dereferenceable load (s32) from %ir.high30); ../udivmoddi4.c:59:17
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1150; ../udivmoddi4.c:59:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.13, 1, killed $cpsr, debug-location !1150; ../udivmoddi4.c:59:13
# Before:
not available
# After:
not available
## Instruction: B %bb.10, debug-location !1150; ../udivmoddi4.c:59:13
# Before:
not available
# After:
not available
### Basic Block: 10
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !1151 :: (load (s32) from %stack.4); ../udivmoddi4.c:65:17
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1151; ../udivmoddi4.c:65:17
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.12, 0, killed $cpsr, debug-location !1151; ../udivmoddi4.c:65:17
# Before:
not available
# After:
not available
## Instruction: B %bb.11, debug-location !1151; ../udivmoddi4.c:65:17
# Before:
not available
# After:
not available
### Basic Block: 11
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1153 :: (dereferenceable load (s32) from %ir.high37); ../udivmoddi4.c:66:28
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !1154 :: (dereferenceable load (s32) from %ir.low39, align 8); ../udivmoddi4.c:66:39
# Before:
bot
# After:
not available
## Instruction: BL &__umodsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1155; ../udivmoddi4.c:66:33
# Before:
not available
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !1155 :: (load (s32) from %stack.4); ../udivmoddi4.c:66:33
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !1157 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:66:22
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !1157 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:66:22
# Before:
bot
# After:
not available
## Instruction: B %bb.12, debug-location !1158; ../udivmoddi4.c:66:17
# Before:
not available
# After:
not available
### Basic Block: 12
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1160 :: (dereferenceable load (s32) from %ir.high44); ../udivmoddi4.c:67:24
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !1161 :: (dereferenceable load (s32) from %ir.low46, align 8); ../udivmoddi4.c:67:35
# Before:
bot
# After:
not available
## Instruction: BL &__udivsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1162; ../udivmoddi4.c:67:29
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr killed $r0, 14, $noreg, $noreg, debug-location !1162; ../udivmoddi4.c:67:29
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !1164; ../udivmoddi4.c:67:13
# Before:
not available
# After:
not available
### Basic Block: 13
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1165 :: (dereferenceable load (s32) from %ir.low51, align 8); ../udivmoddi4.c:70:17
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1167; ../udivmoddi4.c:70:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.17, 1, killed $cpsr, debug-location !1167; ../udivmoddi4.c:70:13
# Before:
not available
# After:
not available
## Instruction: B %bb.14, debug-location !1167; ../udivmoddi4.c:70:13
# Before:
not available
# After:
not available
### Basic Block: 14
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !1168 :: (load (s32) from %stack.4); ../udivmoddi4.c:76:17
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1168; ../udivmoddi4.c:76:17
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.16, 0, killed $cpsr, debug-location !1168; ../udivmoddi4.c:76:17
# Before:
not available
# After:
not available
## Instruction: B %bb.15, debug-location !1168; ../udivmoddi4.c:76:17
# Before:
not available
# After:
not available
### Basic Block: 15
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1170 :: (dereferenceable load (s32) from %ir.high58); ../udivmoddi4.c:78:32
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -12, 14, $noreg, debug-location !1172 :: (dereferenceable load (s32) from %ir.high60); ../udivmoddi4.c:78:43
# Before:
bot
# After:
not available
## Instruction: BL &__umodsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1173; ../udivmoddi4.c:78:37
# Before:
not available
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !1173 :: (load (s32) from %stack.4); ../udivmoddi4.c:78:37
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -28, 14, $noreg, debug-location !1176 :: (store (s32) into %ir.high63); ../udivmoddi4.c:78:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -32, 14, $noreg, debug-location !1178 :: (store (s32) into %ir.low65, align 8); ../udivmoddi4.c:79:25
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -32, 14, $noreg, debug-location !1179 :: (dereferenceable load (s32) from %ir.all66, align 8); ../udivmoddi4.c:80:26
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -28, 14, $noreg, debug-location !1179 :: (dereferenceable load (s32) from %ir.all66 + 4, basealign 8); ../udivmoddi4.c:80:26
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !1180 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:80:22
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !1180 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:80:22
# Before:
bot
# After:
not available
## Instruction: B %bb.16, debug-location !1181; ../udivmoddi4.c:81:13
# Before:
not available
# After:
not available
### Basic Block: 16
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1183 :: (dereferenceable load (s32) from %ir.high69); ../udivmoddi4.c:82:24
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -12, 14, $noreg, debug-location !1185 :: (dereferenceable load (s32) from %ir.high71); ../udivmoddi4.c:82:35
# Before:
bot
# After:
not available
## Instruction: BL &__udivsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1186; ../udivmoddi4.c:82:29
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr killed $r0, 14, $noreg, $noreg, debug-location !1186; ../udivmoddi4.c:82:29
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !1188; ../udivmoddi4.c:82:13
# Before:
not available
# After:
not available
### Basic Block: 17
## Instruction: renamable $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !1190 :: (dereferenceable load (s32) from %ir.high78); ../udivmoddi4.c:88:18
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = SUBri renamable $r0, 1, 14, $noreg, $noreg, debug-location !1193; ../udivmoddi4.c:88:35
# Before:
not available
# After:
not available
## Instruction: TSTrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1196; ../udivmoddi4.c:88:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.21, 1, killed $cpsr, debug-location !1196; ../udivmoddi4.c:88:13
# Before:
not available
# After:
not available
## Instruction: B %bb.18, debug-location !1196; ../udivmoddi4.c:88:13
# Before:
not available
# After:
not available
### Basic Block: 18
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !1197 :: (load (s32) from %stack.4); ../udivmoddi4.c:90:17
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1197; ../udivmoddi4.c:90:17
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.20, 0, killed $cpsr, debug-location !1197; ../udivmoddi4.c:90:17
# Before:
not available
# After:
not available
## Instruction: B %bb.19, debug-location !1197; ../udivmoddi4.c:90:17
# Before:
not available
# After:
not available
### Basic Block: 19
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !1198 :: (load (s32) from %stack.4); ../udivmoddi4.c:92:31
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1198 :: (dereferenceable load (s32) from %ir.low85, align 8); ../udivmoddi4.c:92:31
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -32, 14, $noreg, debug-location !1200 :: (store (s32) into %ir.low87, align 8); ../udivmoddi4.c:92:25
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1202 :: (dereferenceable load (s32) from %ir.high89); ../udivmoddi4.c:93:32
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -12, 14, $noreg, debug-location !1204 :: (dereferenceable load (s32) from %ir.high91); ../udivmoddi4.c:93:44
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = SUBri killed renamable $r2, 1, 14, $noreg, $noreg, debug-location !1205; ../udivmoddi4.c:93:49
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1206; ../udivmoddi4.c:93:37
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -28, 14, $noreg, debug-location !1209 :: (store (s32) into %ir.high95); ../udivmoddi4.c:93:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -32, 14, $noreg, debug-location !1210 :: (dereferenceable load (s32) from %ir.all96, align 8); ../udivmoddi4.c:94:26
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -28, 14, $noreg, debug-location !1210 :: (dereferenceable load (s32) from %ir.all96 + 4, basealign 8); ../udivmoddi4.c:94:26
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !1211 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:94:22
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !1211 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:94:22
# Before:
bot
# After:
not available
## Instruction: B %bb.20, debug-location !1212; ../udivmoddi4.c:95:13
# Before:
not available
# After:
not available
### Basic Block: 20
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1214 :: (dereferenceable load (s32) from %ir.high99); ../udivmoddi4.c:96:24
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -12, 14, $noreg, debug-location !1216 :: (dereferenceable load (s32) from %ir.high101); ../udivmoddi4.c:96:50
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = SUBri renamable $r2, 1, 14, $noreg, $noreg, debug-location !1217; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = BICrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !1217; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = ANDrsi killed renamable $r2, renamable $r1, 11, 14, $noreg, $noreg, debug-location !1217; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !1217; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = ANDrsi renamable $r3, renamable $r1, 19, 14, $noreg, $noreg, debug-location !1217; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, debug-location !1217; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !1217; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, renamable $r1, 35, 14, $noreg, $noreg, debug-location !1217; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = ANDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !1217; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r2, killed renamable $r3, 14, $noreg, $noreg, debug-location !1217; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVsi killed renamable $r1, 195, 14, $noreg, $noreg, debug-location !1217; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVsr killed renamable $r0, killed renamable $r1, 3, 14, $noreg, $noreg, debug-location !1218; ../udivmoddi4.c:96:29
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !1220; ../udivmoddi4.c:96:13
# Before:
not available
# After:
not available
### Basic Block: 21
## Instruction: renamable $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !1222 :: (dereferenceable load (s32) from %ir.high105); ../udivmoddi4.c:102:32
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1223; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1223; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1223; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 67, 14, $noreg, $noreg, debug-location !1223; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 131, 14, $noreg, $noreg, debug-location !1223; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MVNr killed renamable $r0, 14, $noreg, $noreg, debug-location !1223; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r12, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1223; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1223; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $lr = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $lr, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1223; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, renamable $lr, 14, $noreg, $noreg, debug-location !1223; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1223; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1223; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r0, renamable $r2, 14, $noreg, $noreg, debug-location !1223; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r0 = MULv5 killed renamable $r1, renamable $r3, 14, $noreg, $noreg, debug-location !1223; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 195, 14, $noreg, $noreg, debug-location !1223; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !1225 :: (dereferenceable load (s32) from %ir.high107); ../udivmoddi4.c:102:58
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 11, 14, $noreg, $noreg, debug-location !1226; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 19, 14, $noreg, $noreg, debug-location !1226; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 35, 14, $noreg, $noreg, debug-location !1226; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 67, 14, $noreg, $noreg, debug-location !1226; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 131, 14, $noreg, $noreg, debug-location !1226; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MVNr killed renamable $r1, 14, $noreg, $noreg, debug-location !1226; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ANDrsi killed renamable $r12, renamable $r1, 11, 14, $noreg, $noreg, debug-location !1226; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrr killed renamable $r1, killed renamable $r12, 14, $noreg, $noreg, debug-location !1226; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ANDrsi renamable $lr, renamable $r1, 19, 14, $noreg, $noreg, debug-location !1226; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, killed renamable $lr, 14, $noreg, $noreg, debug-location !1226; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrr killed renamable $r1, killed renamable $r12, 14, $noreg, $noreg, debug-location !1226; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, renamable $r1, 35, 14, $noreg, $noreg, debug-location !1226; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ANDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !1226; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r2, killed renamable $r3, 14, $noreg, $noreg, debug-location !1226; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBrsi killed renamable $r0, killed renamable $r1, 195, 14, $noreg, $noreg, debug-location !1227; ../udivmoddi4.c:102:38
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 40, 14, $noreg :: (store (s32) into %stack.7)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 31, 14, $noreg, implicit-def $cpsr, debug-location !1229; ../udivmoddi4.c:104:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.25, 3, killed $cpsr, debug-location !1229; ../udivmoddi4.c:104:13
# Before:
not available
# After:
not available
## Instruction: B %bb.22, debug-location !1229; ../udivmoddi4.c:104:13
# Before:
not available
# After:
not available
### Basic Block: 22
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !1230 :: (load (s32) from %stack.4); ../udivmoddi4.c:106:16
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1230; ../udivmoddi4.c:106:16
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.24, 0, killed $cpsr, debug-location !1230; ../udivmoddi4.c:106:16
# Before:
not available
# After:
not available
## Instruction: B %bb.23, debug-location !1230; ../udivmoddi4.c:106:16
# Before:
not available
# After:
not available
### Basic Block: 23
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !1231 :: (load (s32) from %stack.4); ../udivmoddi4.c:107:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1231 :: (dereferenceable load (s32) from %ir.all114, align 8); ../udivmoddi4.c:107:26
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -4, 14, $noreg, debug-location !1231 :: (dereferenceable load (s32) from %ir.all114 + 4, basealign 8); ../udivmoddi4.c:107:26
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !1232 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:107:22
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !1232 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:107:22
# Before:
bot
# After:
not available
## Instruction: B %bb.24, debug-location !1233; ../udivmoddi4.c:107:17
# Before:
not available
# After:
not available
### Basic Block: 24
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !1234; ../udivmoddi4.c:108:13
# Before:
not available
# After:
not available
### Basic Block: 25
## Instruction: $r2 = LDRi12 $sp, 40, 14, $noreg, debug-location !1235 :: (load (s32) from %stack.7); ../udivmoddi4.c:110:9
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nsw ADDri renamable $r2, 1, 14, $noreg, $noreg, debug-location !1235; ../udivmoddi4.c:110:9
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -24, 14, $noreg, debug-location !1237 :: (store (s32) into %ir.low118, align 8); ../udivmoddi4.c:113:17
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -8, 14, $noreg, debug-location !1238 :: (dereferenceable load (s32) from %ir.low120, align 8); ../udivmoddi4.c:114:24
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = nsw RSBri renamable $r2, 31, 14, $noreg, $noreg, debug-location !1239; ../udivmoddi4.c:114:45
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVsr killed renamable $r1, renamable $r3, 2, 14, $noreg, $noreg, debug-location !1240; ../udivmoddi4.c:114:28
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -20, 14, $noreg, debug-location !1243 :: (store (s32) into %ir.high123); ../udivmoddi4.c:114:18
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !1245 :: (dereferenceable load (s32) from %ir.high125); ../udivmoddi4.c:116:24
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVsr killed renamable $r1, renamable $r0, 3, 14, $noreg, $noreg, debug-location !1246; ../udivmoddi4.c:116:29
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -28, 14, $noreg, debug-location !1249 :: (store (s32) into %ir.high128); ../udivmoddi4.c:116:18
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -8, 14, $noreg, debug-location !1254 :: (dereferenceable load (s32) from %ir.low134, align 8); ../udivmoddi4.c:117:60
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !1251 :: (dereferenceable load (s32) from %ir.high130); ../udivmoddi4.c:117:24
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVsr killed renamable $r1, killed renamable $r3, 2, 14, $noreg, $noreg, debug-location !1253; ../udivmoddi4.c:117:29
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsr killed renamable $r1, killed renamable $r2, renamable $r0, 3, 14, $noreg, $noreg, debug-location !1256; ../udivmoddi4.c:117:53
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -32, 14, $noreg, debug-location !1258 :: (store (s32) into %ir.low137, align 8); ../udivmoddi4.c:117:17
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 36, 14, $noreg :: (store (s32) into %stack.8)
# Before:
bot
# After:
not available
## Instruction: B %bb.49, debug-location !1259; ../udivmoddi4.c:118:5
# Before:
not available
# After:
not available
### Basic Block: 26
## Instruction: renamable $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !1261 :: (dereferenceable load (s32) from %ir.high139); ../udivmoddi4.c:121:17
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1263; ../udivmoddi4.c:121:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.40, 1, killed $cpsr, debug-location !1263; ../udivmoddi4.c:121:13
# Before:
not available
# After:
not available
## Instruction: B %bb.27, debug-location !1263; ../udivmoddi4.c:121:13
# Before:
not available
# After:
not available
### Basic Block: 27
## Instruction: renamable $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !1264 :: (dereferenceable load (s32) from %ir.low144, align 8); ../udivmoddi4.c:127:22
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = SUBri renamable $r0, 1, 14, $noreg, $noreg, debug-location !1266; ../udivmoddi4.c:127:17
# Before:
not available
# After:
not available
## Instruction: TSTrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1266; ../udivmoddi4.c:127:17
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.33, 1, killed $cpsr, debug-location !1266; ../udivmoddi4.c:127:17
# Before:
not available
# After:
not available
## Instruction: B %bb.28, debug-location !1266; ../udivmoddi4.c:127:17
# Before:
not available
# After:
not available
### Basic Block: 28
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !1267 :: (load (s32) from %stack.4); ../udivmoddi4.c:129:21
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1267; ../udivmoddi4.c:129:21
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.30, 0, killed $cpsr, debug-location !1267; ../udivmoddi4.c:129:21
# Before:
not available
# After:
not available
## Instruction: B %bb.29, debug-location !1267; ../udivmoddi4.c:129:21
# Before:
not available
# After:
not available
### Basic Block: 29
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !1268 :: (load (s32) from %stack.4); ../udivmoddi4.c:130:32
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1268 :: (dereferenceable load (s32) from %ir.low155, align 8); ../udivmoddi4.c:130:32
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -16, 14, $noreg, debug-location !1269 :: (dereferenceable load (s32) from %ir.low157, align 8); ../udivmoddi4.c:130:43
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = SUBri killed renamable $r2, 1, 14, $noreg, $noreg, debug-location !1270; ../udivmoddi4.c:130:47
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1271; ../udivmoddi4.c:130:36
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !1273 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:130:26
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !1273 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:130:26
# Before:
bot
# After:
not available
## Instruction: B %bb.30, debug-location !1274; ../udivmoddi4.c:130:21
# Before:
not available
# After:
not available
### Basic Block: 30
## Instruction: renamable $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !1275 :: (dereferenceable load (s32) from %ir.low163, align 8); ../udivmoddi4.c:131:25
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !1277; ../udivmoddi4.c:131:21
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.32, 1, killed $cpsr, debug-location !1277; ../udivmoddi4.c:131:21
# Before:
not available
# After:
not available
## Instruction: B %bb.31, debug-location !1277; ../udivmoddi4.c:131:21
# Before:
not available
# After:
not available
### Basic Block: 31
## Instruction: renamable $r1 = LDRi12 $r11, -8, 14, $noreg, debug-location !1278 :: (dereferenceable load (s32) from %ir.all167, align 8); ../udivmoddi4.c:132:30
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1278 :: (dereferenceable load (s32) from %ir.all167 + 4, basealign 8); ../udivmoddi4.c:132:30
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !1279; ../udivmoddi4.c:132:21
# Before:
not available
# After:
not available
### Basic Block: 32
## Instruction: renamable $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !1280 :: (dereferenceable load (s32) from %ir.low170, align 8); ../udivmoddi4.c:133:40
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !1281; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = BICrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1281; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1281; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1281; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r2, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1281; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1281; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1281; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1281; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1281; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r12 = MULv5 killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1281; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsi renamable $r12, 195, 14, $noreg, $noreg, debug-location !1281; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1283 :: (dereferenceable load (s32) from %ir.high172); ../udivmoddi4.c:134:32
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 3, 14, $noreg, $noreg, debug-location !1284; ../udivmoddi4.c:134:37
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -20, 14, $noreg, debug-location !1287 :: (store (s32) into %ir.high175); ../udivmoddi4.c:134:26
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -8, 14, $noreg, debug-location !1292 :: (dereferenceable load (s32) from %ir.low181, align 8); ../udivmoddi4.c:135:68
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1289 :: (dereferenceable load (s32) from %ir.high177); ../udivmoddi4.c:135:32
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = MOVi 32, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = nuw nsw SUBrsi killed renamable $r3, killed renamable $r12, 195, 14, $noreg, $noreg, debug-location !1290; ../udivmoddi4.c:135:54
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r3, 2, 14, $noreg, $noreg, debug-location !1291; ../udivmoddi4.c:135:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsr killed renamable $r0, killed renamable $r1, killed renamable $r2, 3, 14, $noreg, $noreg, debug-location !1294; ../udivmoddi4.c:135:61
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -24, 14, $noreg, debug-location !1296 :: (store (s32) into %ir.low185, align 8); ../udivmoddi4.c:135:25
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -24, 14, $noreg, debug-location !1297 :: (dereferenceable load (s32) from %ir.all186, align 8); ../udivmoddi4.c:136:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -20, 14, $noreg, debug-location !1297 :: (dereferenceable load (s32) from %ir.all186 + 4, basealign 8); ../udivmoddi4.c:136:26
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !1298; ../udivmoddi4.c:136:17
# Before:
not available
# After:
not available
### Basic Block: 33
## Instruction: renamable $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !1299 :: (dereferenceable load (s32) from %ir.low189, align 8); ../udivmoddi4.c:142:55
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1300; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1300; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1300; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 67, 14, $noreg, $noreg, debug-location !1300; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 131, 14, $noreg, $noreg, debug-location !1300; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MVNr killed renamable $r0, 14, $noreg, $noreg, debug-location !1300; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r12, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1300; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1300; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $lr = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $lr, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1300; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, renamable $lr, 14, $noreg, $noreg, debug-location !1300; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1300; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1300; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r0, renamable $r2, 14, $noreg, $noreg, debug-location !1300; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r0 = MULv5 killed renamable $r1, renamable $r3, 14, $noreg, $noreg, debug-location !1300; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 195, 14, $noreg, $noreg, debug-location !1300; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !1303 :: (dereferenceable load (s32) from %ir.high191); ../udivmoddi4.c:142:80
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 11, 14, $noreg, $noreg, debug-location !1304; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 19, 14, $noreg, $noreg, debug-location !1304; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 35, 14, $noreg, $noreg, debug-location !1304; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 67, 14, $noreg, $noreg, debug-location !1304; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 131, 14, $noreg, $noreg, debug-location !1304; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MVNr killed renamable $r1, 14, $noreg, $noreg, debug-location !1304; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ANDrsi killed renamable $r12, renamable $r1, 11, 14, $noreg, $noreg, debug-location !1304; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrr killed renamable $r1, killed renamable $r12, 14, $noreg, $noreg, debug-location !1304; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ANDrsi renamable $lr, renamable $r1, 19, 14, $noreg, $noreg, debug-location !1304; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, killed renamable $lr, 14, $noreg, $noreg, debug-location !1304; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrr killed renamable $r1, killed renamable $r12, 14, $noreg, $noreg, debug-location !1304; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, renamable $r1, 35, 14, $noreg, $noreg, debug-location !1304; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ANDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !1304; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r2, killed renamable $r3, 14, $noreg, $noreg, debug-location !1304; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrsi killed renamable $r0, killed renamable $r1, 195, 14, $noreg, $noreg, debug-location !1305; ../udivmoddi4.c:142:60
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDri killed renamable $r0, 33, 14, $noreg, $noreg, debug-location !1305; ../udivmoddi4.c:142:60
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 32, 14, $noreg :: (store (s32) into %stack.9)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 32, 14, $noreg, implicit-def $cpsr, debug-location !1307; ../udivmoddi4.c:147:17
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.35, 1, killed $cpsr, debug-location !1307; ../udivmoddi4.c:147:17
# Before:
not available
# After:
not available
## Instruction: B %bb.34, debug-location !1307; ../udivmoddi4.c:147:17
# Before:
not available
# After:
not available
### Basic Block: 34
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 renamable $r0, $r11, -24, 14, $noreg, debug-location !1309 :: (store (s32) into %ir.low197, align 8); ../udivmoddi4.c:149:25
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -8, 14, $noreg, debug-location !1310 :: (dereferenceable load (s32) from %ir.low199, align 8); ../udivmoddi4.c:150:32
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -20, 14, $noreg, debug-location !1313 :: (store (s32) into %ir.high201); ../udivmoddi4.c:150:26
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -28, 14, $noreg, debug-location !1316 :: (store (s32) into %ir.high203); ../udivmoddi4.c:151:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1318 :: (dereferenceable load (s32) from %ir.high205); ../udivmoddi4.c:152:31
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -32, 14, $noreg, debug-location !1320 :: (store (s32) into %ir.low207, align 8); ../udivmoddi4.c:152:25
# Before:
bot
# After:
not available
## Instruction: B %bb.39, debug-location !1321; ../udivmoddi4.c:153:13
# Before:
not available
# After:
not available
### Basic Block: 35
## Instruction: $r0 = LDRi12 $sp, 32, 14, $noreg, debug-location !1323 :: (load (s32) from %stack.9); ../udivmoddi4.c:154:22
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 31, 14, $noreg, implicit-def $cpsr, debug-location !1323; ../udivmoddi4.c:154:22
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.37, 8, killed $cpsr, debug-location !1323; ../udivmoddi4.c:154:22
# Before:
not available
# After:
not available
## Instruction: B %bb.36, debug-location !1323; ../udivmoddi4.c:154:22
# Before:
not available
# After:
not available
### Basic Block: 36
## Instruction: $r2 = LDRi12 $sp, 32, 14, $noreg :: (load (s32) from %stack.9)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -24, 14, $noreg, debug-location !1325 :: (store (s32) into %ir.low213, align 8); ../udivmoddi4.c:156:25
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1326 :: (dereferenceable load (s32) from %ir.low215, align 8); ../udivmoddi4.c:157:32
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = nsw RSBri renamable $r2, 32, 14, $noreg, $noreg, debug-location !1327; ../udivmoddi4.c:157:53
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r3, 2, 14, $noreg, $noreg, debug-location !1328; ../udivmoddi4.c:157:36
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -20, 14, $noreg, debug-location !1331 :: (store (s32) into %ir.high219); ../udivmoddi4.c:157:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1333 :: (dereferenceable load (s32) from %ir.high221); ../udivmoddi4.c:158:32
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 3, 14, $noreg, $noreg, debug-location !1334; ../udivmoddi4.c:158:37
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -28, 14, $noreg, debug-location !1337 :: (store (s32) into %ir.high224); ../udivmoddi4.c:158:26
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -8, 14, $noreg, debug-location !1342 :: (dereferenceable load (s32) from %ir.low230, align 8); ../udivmoddi4.c:159:68
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1339 :: (dereferenceable load (s32) from %ir.high226); ../udivmoddi4.c:159:32
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r3, 2, 14, $noreg, $noreg, debug-location !1341; ../udivmoddi4.c:159:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsr killed renamable $r0, killed renamable $r1, renamable $r2, 3, 14, $noreg, $noreg, debug-location !1344; ../udivmoddi4.c:159:61
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -32, 14, $noreg, debug-location !1346 :: (store (s32) into %ir.low234, align 8); ../udivmoddi4.c:159:25
# Before:
bot
# After:
not available
## Instruction: B %bb.38, debug-location !1347; ../udivmoddi4.c:160:13
# Before:
not available
# After:
not available
### Basic Block: 37
## Instruction: $r1 = LDRi12 $sp, 32, 14, $noreg, debug-location !1348 :: (load (s32) from %stack.9); ../udivmoddi4.c:163:31
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1348 :: (dereferenceable load (s32) from %ir.low237, align 8); ../udivmoddi4.c:163:31
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = nsw RSBri renamable $r1, 64, 14, $noreg, $noreg, debug-location !1349; ../udivmoddi4.c:163:53
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r3, 2, 14, $noreg, $noreg, debug-location !1350; ../udivmoddi4.c:163:35
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -24, 14, $noreg, debug-location !1352 :: (store (s32) into %ir.low241, align 8); ../udivmoddi4.c:163:25
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -8, 14, $noreg, debug-location !1357 :: (dereferenceable load (s32) from %ir.low247, align 8); ../udivmoddi4.c:165:33
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1354 :: (dereferenceable load (s32) from %ir.high243); ../udivmoddi4.c:164:33
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r3, 2, 14, $noreg, $noreg, debug-location !1356; ../udivmoddi4.c:164:38
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nsw SUBri renamable $r1, 32, 14, $noreg, $noreg, debug-location !1358; ../udivmoddi4.c:165:44
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsr killed renamable $r0, killed renamable $r2, renamable $r1, 3, 14, $noreg, $noreg, debug-location !1360; ../udivmoddi4.c:164:63
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -20, 14, $noreg, debug-location !1363 :: (store (s32) into %ir.high252); ../udivmoddi4.c:164:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -28, 14, $noreg, debug-location !1366 :: (store (s32) into %ir.high254); ../udivmoddi4.c:166:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1368 :: (dereferenceable load (s32) from %ir.high256); ../udivmoddi4.c:167:31
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r1, 3, 14, $noreg, $noreg, debug-location !1370; ../udivmoddi4.c:167:36
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -32, 14, $noreg, debug-location !1372 :: (store (s32) into %ir.low260, align 8); ../udivmoddi4.c:167:25
# Before:
bot
# After:
not available
## Instruction: B %bb.38
# Before:
not available
# After:
not available
### Basic Block: 38
## Instruction: B %bb.39
# Before:
not available
# After:
not available
### Basic Block: 39
## Instruction: $r0 = LDRi12 $sp, 32, 14, $noreg :: (load (s32) from %stack.9)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 28, 14, $noreg :: (store (s32) into %stack.10)
# Before:
bot
# After:
not available
## Instruction: B %bb.48, debug-location !1373; ../udivmoddi4.c:169:9
# Before:
not available
# After:
not available
### Basic Block: 40
## Instruction: renamable $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !1375 :: (dereferenceable load (s32) from %ir.high265); ../udivmoddi4.c:176:36
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1376; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1376; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1376; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 67, 14, $noreg, $noreg, debug-location !1376; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 131, 14, $noreg, $noreg, debug-location !1376; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MVNr killed renamable $r0, 14, $noreg, $noreg, debug-location !1376; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r12, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1376; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1376; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $lr = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $lr, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1376; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, renamable $lr, 14, $noreg, $noreg, debug-location !1376; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1376; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1376; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r0, renamable $r2, 14, $noreg, $noreg, debug-location !1376; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r0 = MULv5 killed renamable $r1, renamable $r3, 14, $noreg, $noreg, debug-location !1376; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 195, 14, $noreg, $noreg, debug-location !1376; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !1378 :: (dereferenceable load (s32) from %ir.high267); ../udivmoddi4.c:176:62
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 11, 14, $noreg, $noreg, debug-location !1379; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 19, 14, $noreg, $noreg, debug-location !1379; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 35, 14, $noreg, $noreg, debug-location !1379; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 67, 14, $noreg, $noreg, debug-location !1379; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 131, 14, $noreg, $noreg, debug-location !1379; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MVNr killed renamable $r1, 14, $noreg, $noreg, debug-location !1379; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ANDrsi killed renamable $r12, renamable $r1, 11, 14, $noreg, $noreg, debug-location !1379; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrr killed renamable $r1, killed renamable $r12, 14, $noreg, $noreg, debug-location !1379; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ANDrsi renamable $lr, renamable $r1, 19, 14, $noreg, $noreg, debug-location !1379; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, killed renamable $lr, 14, $noreg, $noreg, debug-location !1379; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrr killed renamable $r1, killed renamable $r12, 14, $noreg, $noreg, debug-location !1379; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, renamable $r1, 35, 14, $noreg, $noreg, debug-location !1379; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ANDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !1379; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r2, killed renamable $r3, 14, $noreg, $noreg, debug-location !1379; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBrsi killed renamable $r0, killed renamable $r1, 195, 14, $noreg, $noreg, debug-location !1380; ../udivmoddi4.c:176:42
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 24, 14, $noreg :: (store (s32) into %stack.11)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 32, 14, $noreg, implicit-def $cpsr, debug-location !1382; ../udivmoddi4.c:178:17
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.44, 3, killed $cpsr, debug-location !1382; ../udivmoddi4.c:178:17
# Before:
not available
# After:
not available
## Instruction: B %bb.41, debug-location !1382; ../udivmoddi4.c:178:17
# Before:
not available
# After:
not available
### Basic Block: 41
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !1383 :: (load (s32) from %stack.4); ../udivmoddi4.c:180:21
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1383; ../udivmoddi4.c:180:21
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.43, 0, killed $cpsr, debug-location !1383; ../udivmoddi4.c:180:21
# Before:
not available
# After:
not available
## Instruction: B %bb.42, debug-location !1383; ../udivmoddi4.c:180:21
# Before:
not available
# After:
not available
### Basic Block: 42
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !1384 :: (load (s32) from %stack.4); ../udivmoddi4.c:181:30
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1384 :: (dereferenceable load (s32) from %ir.all274, align 8); ../udivmoddi4.c:181:30
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -4, 14, $noreg, debug-location !1384 :: (dereferenceable load (s32) from %ir.all274 + 4, basealign 8); ../udivmoddi4.c:181:30
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !1385 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:181:26
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !1385 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:181:26
# Before:
bot
# After:
not available
## Instruction: B %bb.43, debug-location !1386; ../udivmoddi4.c:181:21
# Before:
not available
# After:
not available
### Basic Block: 43
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !1387; ../udivmoddi4.c:182:17
# Before:
not available
# After:
not available
### Basic Block: 44
## Instruction: $r0 = LDRi12 $sp, 24, 14, $noreg, debug-location !1388 :: (load (s32) from %stack.11); ../udivmoddi4.c:184:13
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nsw ADDri renamable $r0, 1, 14, $noreg, $noreg, debug-location !1388; ../udivmoddi4.c:184:13
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 20, 14, $noreg :: (store (s32) into %stack.12)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -24, 14, $noreg, debug-location !1390 :: (store (s32) into %ir.low279, align 8); ../udivmoddi4.c:187:21
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 32, 14, $noreg, implicit-def $cpsr, debug-location !1392; ../udivmoddi4.c:188:17
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.46, 1, killed $cpsr, debug-location !1392; ../udivmoddi4.c:188:17
# Before:
not available
# After:
not available
## Instruction: B %bb.45, debug-location !1392; ../udivmoddi4.c:188:17
# Before:
not available
# After:
not available
### Basic Block: 45
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1393 :: (dereferenceable load (s32) from %ir.low284, align 8); ../udivmoddi4.c:190:32
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -20, 14, $noreg, debug-location !1396 :: (store (s32) into %ir.high286); ../udivmoddi4.c:190:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -28, 14, $noreg, debug-location !1399 :: (store (s32) into %ir.high288); ../udivmoddi4.c:191:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1401 :: (dereferenceable load (s32) from %ir.high290); ../udivmoddi4.c:192:31
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -32, 14, $noreg, debug-location !1403 :: (store (s32) into %ir.low292, align 8); ../udivmoddi4.c:192:25
# Before:
bot
# After:
not available
## Instruction: B %bb.47, debug-location !1404; ../udivmoddi4.c:193:13
# Before:
not available
# After:
not available
### Basic Block: 46
## Instruction: $r2 = LDRi12 $sp, 20, 14, $noreg, debug-location !1405 :: (load (s32) from %stack.12); ../udivmoddi4.c:196:32
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !1405 :: (load (s32) from %stack.11); ../udivmoddi4.c:196:32
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1405 :: (dereferenceable load (s32) from %ir.low295, align 8); ../udivmoddi4.c:196:32
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = nsw RSBri renamable $r1, 31, 14, $noreg, $noreg, debug-location !1406; ../udivmoddi4.c:196:53
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r3, 2, 14, $noreg, $noreg, debug-location !1407; ../udivmoddi4.c:196:36
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -20, 14, $noreg, debug-location !1410 :: (store (s32) into %ir.high299); ../udivmoddi4.c:196:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1412 :: (dereferenceable load (s32) from %ir.high301); ../udivmoddi4.c:197:32
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 3, 14, $noreg, $noreg, debug-location !1413; ../udivmoddi4.c:197:37
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -28, 14, $noreg, debug-location !1416 :: (store (s32) into %ir.high304); ../udivmoddi4.c:197:26
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -8, 14, $noreg, debug-location !1421 :: (dereferenceable load (s32) from %ir.low310, align 8); ../udivmoddi4.c:198:68
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1418 :: (dereferenceable load (s32) from %ir.high306); ../udivmoddi4.c:198:32
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r3, 2, 14, $noreg, $noreg, debug-location !1420; ../udivmoddi4.c:198:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsr killed renamable $r0, killed renamable $r1, renamable $r2, 3, 14, $noreg, $noreg, debug-location !1423; ../udivmoddi4.c:198:61
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -32, 14, $noreg, debug-location !1425 :: (store (s32) into %ir.low314, align 8); ../udivmoddi4.c:198:25
# Before:
bot
# After:
not available
## Instruction: B %bb.47
# Before:
not available
# After:
not available
### Basic Block: 47
## Instruction: $r0 = LDRi12 $sp, 20, 14, $noreg :: (load (s32) from %stack.12)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 28, 14, $noreg :: (store (s32) into %stack.10)
# Before:
bot
# After:
not available
## Instruction: B %bb.48
# Before:
not available
# After:
not available
### Basic Block: 48
## Instruction: $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !1426 :: (load (s32) from %stack.10); ../udivmoddi4.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 36, 14, $noreg :: (store (s32) into %stack.8)
# Before:
bot
# After:
not available
## Instruction: B %bb.49
# Before:
not available
# After:
not available
### Basic Block: 49
## Instruction: $r1 = LDRi12 $sp, 36, 14, $noreg, debug-location !1426 :: (load (s32) from %stack.8); ../udivmoddi4.c:0
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 12, 14, $noreg :: (store (s32) into %stack.14)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.13)
# Before:
bot
# After:
not available
## Instruction: B %bb.50, debug-location !1427; ../udivmoddi4.c:209:5
# Before:
not available
# After:
not available
### Basic Block: 50
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1426 :: (load (s32) from %stack.14); ../udivmoddi4.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 16, 14, $noreg, debug-location !1426 :: (load (s32) from %stack.13); ../udivmoddi4.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.16)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.15)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1427; ../udivmoddi4.c:209:5
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.53, 0, killed $cpsr, debug-location !1427; ../udivmoddi4.c:209:5
# Before:
not available
# After:
not available
## Instruction: B %bb.51, debug-location !1427; ../udivmoddi4.c:209:5
# Before:
not available
# After:
not available
### Basic Block: 51
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1431 :: (load (s32) from %stack.16); ../udivmoddi4.c:212:43
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -32, 14, $noreg, debug-location !1431 :: (dereferenceable load (s32) from %ir.low324, align 8); ../udivmoddi4.c:212:43
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -28, 14, $noreg, debug-location !1430 :: (dereferenceable load (s32) from %ir.high321); ../udivmoddi4.c:212:25
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = MOVsi killed renamable $r2, 10, 14, $noreg, $noreg, debug-location !1432; ../udivmoddi4.c:212:36
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ORRrsi killed renamable $r2, renamable $r1, 251, 14, $noreg, $noreg, debug-location !1432; ../udivmoddi4.c:212:36
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r2, $r11, -28, 14, $noreg, debug-location !1435 :: (store (s32) into %ir.high328); ../udivmoddi4.c:212:18
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -20, 14, $noreg, debug-location !1437 :: (dereferenceable load (s32) from %ir.high333); ../udivmoddi4.c:213:43
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVsi killed renamable $r1, 10, 14, $noreg, $noreg, debug-location !1438; ../udivmoddi4.c:213:36
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, killed renamable $r2, 251, 14, $noreg, $noreg, debug-location !1438; ../udivmoddi4.c:213:36
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -32, 14, $noreg, debug-location !1440 :: (store (s32) into %ir.low337, align 8); ../udivmoddi4.c:213:18
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -24, 14, $noreg, debug-location !1443 :: (dereferenceable load (s32) from %ir.low342, align 8); ../udivmoddi4.c:214:43
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -20, 14, $noreg, debug-location !1442 :: (dereferenceable load (s32) from %ir.high339); ../udivmoddi4.c:214:25
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = MOVsi killed renamable $r2, 10, 14, $noreg, $noreg, debug-location !1444; ../udivmoddi4.c:214:36
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ORRrsi killed renamable $r2, renamable $r1, 251, 14, $noreg, $noreg, debug-location !1444; ../udivmoddi4.c:214:36
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r2, $r11, -20, 14, $noreg, debug-location !1447 :: (store (s32) into %ir.high346); ../udivmoddi4.c:214:18
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ORRrsi renamable $r0, killed renamable $r1, 10, 14, $noreg, $noreg, debug-location !1449; ../udivmoddi4.c:215:36
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -24, 14, $noreg, debug-location !1451 :: (store (s32) into %ir.low352, align 8); ../udivmoddi4.c:215:18
# Before:
bot
# After:
not available
## Instruction: renamable $r12 = LDRi12 $r11, -16, 14, $noreg, debug-location !1452 :: (dereferenceable load (s32) from %ir.all354, align 8); ../udivmoddi4.c:223:37
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -12, 14, $noreg, debug-location !1452 :: (dereferenceable load (s32) from %ir.all354 + 4, basealign 8); ../udivmoddi4.c:223:37
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -32, 14, $noreg, debug-location !1453 :: (dereferenceable load (s32) from %ir.all355, align 8); ../udivmoddi4.c:223:45
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -28, 14, $noreg, debug-location !1453 :: (dereferenceable load (s32) from %ir.all355 + 4, basealign 8); ../udivmoddi4.c:223:45
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = MVNr renamable $r1, 14, $noreg, $noreg, debug-location !1454; ../udivmoddi4.c:223:49
# Before:
not available
# After:
not available
## Instruction: renamable $lr = MVNr renamable $r0, 14, $noreg, $noreg, debug-location !1454; ../udivmoddi4.c:223:49
# Before:
not available
# After:
not available
## Instruction: dead renamable $lr = ADDrr renamable $r12, killed renamable $lr, 14, $noreg, def $cpsr, debug-location !1454; ../udivmoddi4.c:223:49
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = ADCrr renamable $r2, killed renamable $r3, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1454; ../udivmoddi4.c:223:49
# Before:
not available
# After:
not available
## Instruction: STRi12 $r3, $sp, 0, 14, $noreg :: (store (s32) into %stack.17)
# Before:
bot
# After:
not available
## Instruction: renamable $r12 = SUBrr renamable $r0, killed renamable $r12, 14, $noreg, def $cpsr, debug-location !1457; ../udivmoddi4.c:225:15
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = SBCrr renamable $r1, killed renamable $r2, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1457; ../udivmoddi4.c:225:15
# Before:
not available
# After:
not available
## Instruction: CMPri renamable $r3, 0, 14, $noreg, implicit-def $cpsr, debug-location !1457; ../udivmoddi4.c:225:15
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr killed renamable $r12, 4, killed $cpsr, $noreg, implicit renamable $r0, debug-location !1457; ../udivmoddi4.c:225:15
# Before:
not available
# After:
not available
## Instruction: CMPri renamable $r3, 0, 14, $noreg, implicit-def $cpsr, debug-location !1457; ../udivmoddi4.c:225:15
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr killed renamable $r2, 4, killed $cpsr, $noreg, implicit renamable $r1, debug-location !1457; ../udivmoddi4.c:225:15
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -28, 14, $noreg, debug-location !1457 :: (store (s32) into %ir.all363 + 4, basealign 8); ../udivmoddi4.c:225:15
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -32, 14, $noreg, debug-location !1457 :: (store (s32) into %ir.all363, align 8); ../udivmoddi4.c:225:15
# Before:
bot
# After:
not available
## Instruction: B %bb.52, debug-location !1458; ../udivmoddi4.c:226:5
# Before:
not available
# After:
not available
### Basic Block: 52
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1459 :: (load (s32) from %stack.15); ../udivmoddi4.c:224:19
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1459 :: (load (s32) from %stack.17); ../udivmoddi4.c:224:19
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r0, 251, 14, $noreg, $noreg, debug-location !1459; ../udivmoddi4.c:224:19
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !1461; ../udivmoddi4.c:209:20
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 12, 14, $noreg :: (store (s32) into %stack.14)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.13)
# Before:
bot
# After:
not available
## Instruction: B %bb.50, debug-location !1427; ../udivmoddi4.c:209:5
# Before:
not available
# After:
not available
### Basic Block: 53
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !1463 :: (load (s32) from %stack.4); ../udivmoddi4.c:227:16
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !1463 :: (load (s32) from %stack.16); ../udivmoddi4.c:227:16
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = LDRi12 $r11, -24, 14, $noreg, debug-location !1463 :: (dereferenceable load (s32) from %ir.all365, align 8); ../udivmoddi4.c:227:16
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -20, 14, $noreg, debug-location !1463 :: (dereferenceable load (s32) from %ir.all365 + 4, basealign 8); ../udivmoddi4.c:227:16
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVsi killed renamable $r1, 10, 14, $noreg, $noreg, debug-location !1464; ../udivmoddi4.c:227:20
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r3, 251, 14, $noreg, $noreg, debug-location !1464; ../udivmoddi4.c:227:20
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ORRrsi renamable $r2, killed renamable $r3, 10, 14, $noreg, $noreg, debug-location !1466; ../udivmoddi4.c:227:26
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r2, $r11, -24, 14, $noreg, debug-location !1468 :: (store (s32) into %ir.all369, align 8); ../udivmoddi4.c:227:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -20, 14, $noreg, debug-location !1468 :: (store (s32) into %ir.all369 + 4, basealign 8); ../udivmoddi4.c:227:11
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1469; ../udivmoddi4.c:228:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.55, 0, killed $cpsr, debug-location !1469; ../udivmoddi4.c:228:9
# Before:
not available
# After:
not available
## Instruction: B %bb.54, debug-location !1469; ../udivmoddi4.c:228:9
# Before:
not available
# After:
not available
### Basic Block: 54
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !1470 :: (load (s32) from %stack.4); ../udivmoddi4.c:229:18
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -32, 14, $noreg, debug-location !1470 :: (dereferenceable load (s32) from %ir.all372, align 8); ../udivmoddi4.c:229:18
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -28, 14, $noreg, debug-location !1470 :: (dereferenceable load (s32) from %ir.all372 + 4, basealign 8); ../udivmoddi4.c:229:18
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !1471 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:229:14
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !1471 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:229:14
# Before:
bot
# After:
not available
## Instruction: B %bb.55, debug-location !1472; ../udivmoddi4.c:229:9
# Before:
not available
# After:
not available
### Basic Block: 55
## Instruction: renamable $r1 = LDRi12 $r11, -24, 14, $noreg, debug-location !1473 :: (dereferenceable load (s32) from %ir.all374, align 8); ../udivmoddi4.c:230:14
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -20, 14, $noreg, debug-location !1473 :: (dereferenceable load (s32) from %ir.all374 + 4, basealign 8); ../udivmoddi4.c:230:14
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !1474; ../udivmoddi4.c:230:5
# Before:
not available
# After:
not available
### Basic Block: 56
## Instruction: $r0 = LDRi12 $sp, 44, 14, $noreg, debug-location !1426 :: (load (s32) from %stack.6); ../udivmoddi4.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -40, 14, $noreg, debug-location !1426 :: (load (s32) from %stack.5); ../udivmoddi4.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1475; ../udivmoddi4.c:231:1
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1475; ../udivmoddi4.c:231:1
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1475; ../udivmoddi4.c:231:1
# Before:
not available
# After:
not available
### Basic Block: 57
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
#### Function: __udivmodsi4
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r2, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: BL_pred @__udivsi3, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1790; ../udivmodsi4.c:22:14
# Before:
not available
# After:
not available
## Instruction: $r12 = LDRi12 $sp, 4, 14, $noreg, debug-location !1790 :: (load (s32) from %stack.2); ../udivmodsi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1790 :: (load (s32) from %stack.1); ../udivmodsi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $r11, -4, 14, $noreg, debug-location !1790 :: (load (s32) from %stack.0); ../udivmodsi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r3 = MULv5 renamable $r0, killed renamable $r12, 14, $noreg, $noreg, debug-location !1791; ../udivmodsi4.c:23:16
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, debug-location !1792; ../udivmodsi4.c:23:12
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, killed renamable $r2, 0, 14, $noreg, debug-location !1793 :: (store (s32) into %ir.rem); ../udivmodsi4.c:23:8
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1794; ../udivmodsi4.c:24:3
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1794; ../udivmodsi4.c:24:3
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1794; ../udivmodsi4.c:24:3
# Before:
not available
# After:
not available
#### Function: __udivsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 64, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $r11, -8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r1, 0, 14, $noreg, implicit-def $cpsr, debug-location !1797; ../udivsi3.c:32:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 1, killed $cpsr, debug-location !1797; ../udivsi3.c:32:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1797; ../udivsi3.c:32:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -12, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.13, debug-location !1798; ../udivsi3.c:33:9
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1800 :: (load (s32) from %stack.0); ../udivsi3.c:34:9
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1800; ../udivsi3.c:34:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !1800; ../udivsi3.c:34:9
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !1800; ../udivsi3.c:34:9
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -12, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.13, debug-location !1801; ../udivsi3.c:35:9
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1802 :: (load (s32) from %stack.1); ../udivsi3.c:36:10
# Before:
bot
# After:
not available
## Instruction: BL &__clzsi2, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit-def $sp, implicit-def $r0, debug-location !1802; ../udivsi3.c:36:10
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg, debug-location !1802; ../udivsi3.c:36:10
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg :: (load (s32) from %stack.0)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r1, $r11, -20, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: BL &__clzsi2, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit-def $sp, implicit-def $r0, debug-location !1803; ../udivsi3.c:36:29
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg, debug-location !1803; ../udivsi3.c:36:29
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -20, 14, $noreg, debug-location !1804 :: (load (s32) from %stack.4); ../udivsi3.c:36:27
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nsw SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1804; ../udivsi3.c:36:27
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $r11, -16, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 32, 14, $noreg, implicit-def $cpsr, debug-location !1806; ../udivsi3.c:38:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 3, killed $cpsr, debug-location !1806; ../udivsi3.c:38:9
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !1806; ../udivsi3.c:38:9
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -12, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.13, debug-location !1807; ../udivsi3.c:39:9
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !1809 :: (load (s32) from %stack.3); ../udivsi3.c:40:9
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 31, 14, $noreg, implicit-def $cpsr, debug-location !1809; ../udivsi3.c:40:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 1, killed $cpsr, debug-location !1809; ../udivsi3.c:40:9
# Before:
not available
# After:
not available
## Instruction: B %bb.7, debug-location !1809; ../udivsi3.c:40:9
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg :: (load (s32) from %stack.0)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -12, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.13, debug-location !1810; ../udivsi3.c:41:9
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1811 :: (load (s32) from %stack.0); ../udivsi3.c:42:5
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $r11, -16, 14, $noreg, debug-location !1811 :: (load (s32) from %stack.3); ../udivsi3.c:42:5
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = nsw ADDri renamable $r2, 1, 14, $noreg, $noreg, debug-location !1811; ../udivsi3.c:42:5
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = nsw RSBri renamable $r2, 31, 14, $noreg, $noreg, debug-location !1812; ../udivsi3.c:45:28
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVsr renamable $r0, killed renamable $r2, 2, 14, $noreg, $noreg, debug-location !1813; ../udivsi3.c:45:11
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsr renamable $r0, renamable $r1, 3, 14, $noreg, $noreg, debug-location !1814; ../udivsi3.c:46:11
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 28, 14, $noreg :: (store (s32) into %stack.8)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 32, 14, $noreg :: (store (s32) into %stack.7)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $r11, -28, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -24, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1815; ../udivsi3.c:48:5
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: $r1 = LDRi12 $sp, 28, 14, $noreg, debug-location !1816 :: (load (s32) from %stack.8); ../udivsi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 32, 14, $noreg, debug-location !1816 :: (load (s32) from %stack.7); ../udivsi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -28, 14, $noreg, debug-location !1816 :: (load (s32) from %stack.6); ../udivsi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $r11, -24, 14, $noreg, debug-location !1816 :: (load (s32) from %stack.5); ../udivsi3.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 12, 14, $noreg :: (store (s32) into %stack.12)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.11)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 20, 14, $noreg :: (store (s32) into %stack.10)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 24, 14, $noreg :: (store (s32) into %stack.9)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1815; ../udivsi3.c:48:5
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.12, 0, killed $cpsr, debug-location !1815; ../udivsi3.c:48:5
# Before:
not available
# After:
not available
## Instruction: B %bb.10, debug-location !1815; ../udivsi3.c:48:5
# Before:
not available
# After:
not available
### Basic Block: 10
## Instruction: $r1 = LDRi12 $r11, -8, 14, $noreg, debug-location !1818 :: (load (s32) from %stack.1); ../udivsi3.c:51:22
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 24, 14, $noreg, debug-location !1818 :: (load (s32) from %stack.9); ../udivsi3.c:51:22
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 20, 14, $noreg, debug-location !1818 :: (load (s32) from %stack.10); ../udivsi3.c:51:22
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r0, 10, 14, $noreg, $noreg, debug-location !1818; ../udivsi3.c:51:22
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r2, 251, 14, $noreg, $noreg, debug-location !1818; ../udivsi3.c:51:22
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.14)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MVNr renamable $r0, 14, $noreg, $noreg, debug-location !1819; ../udivsi3.c:60:41
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1819; ../udivsi3.c:60:41
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.13)
# Before:
bot
# After:
not available
## Instruction: B %bb.11, debug-location !1820; ../udivsi3.c:63:5
# Before:
not available
# After:
not available
### Basic Block: 11
## Instruction: $r1 = LDRi12 $sp, 16, 14, $noreg, debug-location !1822 :: (load (s32) from %stack.11); ../udivsi3.c:62:11
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 12, 14, $noreg, debug-location !1822 :: (load (s32) from %stack.12); ../udivsi3.c:62:11
# Before:
bot
# After:
not available
## Instruction: $r12 = LDRi12 $sp, 24, 14, $noreg, debug-location !1822 :: (load (s32) from %stack.9); ../udivsi3.c:62:11
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !1822 :: (load (s32) from %stack.13); ../udivsi3.c:62:11
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !1822 :: (load (s32) from %stack.14); ../udivsi3.c:62:11
# Before:
bot
# After:
not available
## Instruction: $lr = LDRi12 $r11, -8, 14, $noreg, debug-location !1822 :: (load (s32) from %stack.1); ../udivsi3.c:62:11
# Before:
bot
# After:
not available
## Instruction: renamable $lr = SUBrr renamable $r2, renamable $lr, 14, $noreg, $noreg, debug-location !1822; ../udivsi3.c:62:11
# Before:
not available
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1822; ../udivsi3.c:62:11
# Before:
not available
# After:
not available
## Instruction: $r2 = MOVr killed renamable $lr, 4, killed $cpsr, $noreg, implicit renamable $r2, debug-location !1822; ../udivsi3.c:62:11
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r0, 251, 14, $noreg, $noreg, debug-location !1823; ../udivsi3.c:61:19
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = ORRrsi renamable $r3, renamable $r12, 10, 14, $noreg, $noreg, debug-location !1825; ../udivsi3.c:52:22
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !1826; ../udivsi3.c:48:20
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 28, 14, $noreg :: (store (s32) into %stack.8)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 32, 14, $noreg :: (store (s32) into %stack.7)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $r11, -28, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -24, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1815; ../udivsi3.c:48:5
# Before:
not available
# After:
not available
### Basic Block: 12
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1829 :: (load (s32) from %stack.12); ../udivsi3.c:64:18
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !1829 :: (load (s32) from %stack.9); ../udivsi3.c:64:18
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ORRrsi renamable $r0, renamable $r1, 10, 14, $noreg, $noreg, debug-location !1829; ../udivsi3.c:64:18
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -12, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.13, debug-location !1830; ../udivsi3.c:65:5
# Before:
not available
# After:
not available
### Basic Block: 13
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !1816 :: (load (s32) from %stack.2); ../udivsi3.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1831; ../udivsi3.c:66:1
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1831; ../udivsi3.c:66:1
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1831; ../udivsi3.c:66:1
# Before:
not available
# After:
not available
#### Function: __umoddi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $lr = MOVr $sp, 14, $noreg, $noreg, debug-location !1833; ../umoddi3.c:23:5
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ADDri $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r12, killed renamable $lr, 0, 14, $noreg, debug-location !1833 :: (store (s32) into stack); ../umoddi3.c:23:5
# Before:
bot
# After:
not available
## Instruction: BL_pred @__udivmoddi4, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !1833; ../umoddi3.c:23:5
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !1834 :: (dereferenceable load (s32) from %ir.r, align 8); ../umoddi3.c:24:12
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1834 :: (dereferenceable load (s32) from %ir.r + 4, basealign 8); ../umoddi3.c:24:12
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1835; ../umoddi3.c:24:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1835; ../umoddi3.c:24:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1835; ../umoddi3.c:24:5
# Before:
not available
# After:
not available
#### Function: __umodsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: BL_pred @__udivsi3, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1837; ../umodsi3.c:22:16
# Before:
not available
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 0, 14, $noreg, debug-location !1837 :: (load (s32) from %stack.1); ../umodsi3.c:22:16
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg, debug-location !1837; ../umodsi3.c:22:16
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1838 :: (load (s32) from %stack.0); ../umodsi3.c:22:32
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r2, killed renamable $r3, 14, $noreg, $noreg, debug-location !1838; ../umodsi3.c:22:32
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1839; ../umodsi3.c:22:14
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1840; ../umodsi3.c:22:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1840; ../umodsi3.c:22:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1840; ../umodsi3.c:22:5
# Before:
not available
# After:
not available
#### Function: basicmath___copysignf
### Basic Block: 0
## Instruction: renamable $r0 = VMOVRS killed renamable $s0, 14, $noreg, debug-location !673; batchtest/cosf/wcclibm.c:645:3
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = VMOVRS killed renamable $s1, 14, $noreg, debug-location !674; batchtest/cosf/wcclibm.c:646:3
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = BICri killed renamable $r0, -2147483648, 14, $noreg, $noreg, debug-location !675; batchtest/cosf/wcclibm.c:647:3
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDri killed renamable $r1, -2147483648, 14, $noreg, $noreg, debug-location !675; batchtest/cosf/wcclibm.c:647:3
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !675; batchtest/cosf/wcclibm.c:647:3
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMOVSR killed renamable $r0, 14, $noreg, debug-location !675; batchtest/cosf/wcclibm.c:647:3
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $s0, debug-location !676; batchtest/cosf/wcclibm.c:648:3
# Before:
not available
# After:
not available
#### Function: basicmath___cosf
### Basic Block: 0
## Instruction: renamable $s0 = VSUBS killed renamable $s0, renamable $s0, 14, $noreg, debug-location !869; batchtest/cosf/wcclibm.c:665:12
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location cosf_main_BB2_I1 |->
    [
     Call of function basicmath___cosf |->
      Leaf:
[0 |-> top,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $s0, debug-location !870; batchtest/cosf/wcclibm.c:665:3
# Before:
not available
# After:
not available
#### Function: basicmath___fabsf
### Basic Block: 0
## Instruction: renamable $r0 = VMOVRS killed renamable $s0, 14, $noreg, debug-location !624; batchtest/cosf/wcclibm.c:700:3
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = BICri killed renamable $r0, -2147483648, 14, $noreg, $noreg, debug-location !625; batchtest/cosf/wcclibm.c:701:3
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMOVSR killed renamable $r0, 14, $noreg, debug-location !625; batchtest/cosf/wcclibm.c:701:3
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $s0, debug-location !626; batchtest/cosf/wcclibm.c:702:3
# Before:
not available
# After:
not available
#### Function: basicmath___ieee754_acosf
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 40, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: VSTRS $s0, $r11, 259, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = VMOVRS renamable $s0, 14, $noreg, debug-location !161; batchtest/cosf/wcclibm.c:59:3
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $r11, -8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = BICri renamable $r0, -2147483648, 14, $noreg, $noreg, debug-location !162; batchtest/cosf/wcclibm.c:60:11
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1065353216, 14, $noreg, implicit-def $cpsr, debug-location !164; batchtest/cosf/wcclibm.c:61:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !164; batchtest/cosf/wcclibm.c:61:8
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !164; batchtest/cosf/wcclibm.c:61:8
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !166 :: (load (s32) from %stack.1); batchtest/cosf/wcclibm.c:62:10
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !166; batchtest/cosf/wcclibm.c:62:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 11, killed $cpsr, debug-location !166; batchtest/cosf/wcclibm.c:62:10
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !166; batchtest/cosf/wcclibm.c:62:10
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $s0 = VLDRS %const.19, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 260, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: B %bb.14, debug-location !167; batchtest/cosf/wcclibm.c:62:19
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: renamable $s0 = VLDRS %const.18, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 260, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: B %bb.14, debug-location !168; batchtest/cosf/wcclibm.c:63:10
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !170 :: (load (s32) from %stack.0); batchtest/cosf/wcclibm.c:65:10
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1065353216, 14, $noreg, implicit-def $cpsr, debug-location !170; batchtest/cosf/wcclibm.c:65:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 9, killed $cpsr, debug-location !170; batchtest/cosf/wcclibm.c:65:10
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !170; batchtest/cosf/wcclibm.c:65:10
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $s0 = VLDRS $r11, 259, 14, $noreg, debug-location !171 :: (load (s32) from %stack.2); batchtest/cosf/wcclibm.c:66:18
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS renamable $s0, renamable $s0, 14, $noreg, debug-location !171; batchtest/cosf/wcclibm.c:66:18
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VDIVS killed renamable $s0, renamable $s0, 14, $noreg, debug-location !173; batchtest/cosf/wcclibm.c:66:24
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 260, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: B %bb.14, debug-location !174; batchtest/cosf/wcclibm.c:66:7
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: B %bb.7
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !176 :: (load (s32) from %stack.0); batchtest/cosf/wcclibm.c:68:8
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r0, 195, 14, $noreg, $noreg, debug-location !176; batchtest/cosf/wcclibm.c:68:8
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 62, 14, $noreg, implicit-def $cpsr, debug-location !176; batchtest/cosf/wcclibm.c:68:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.11, 8, killed $cpsr, debug-location !176; batchtest/cosf/wcclibm.c:68:8
# Before:
not available
# After:
not available
## Instruction: B %bb.8, debug-location !176; batchtest/cosf/wcclibm.c:68:8
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !178 :: (load (s32) from %stack.0); batchtest/cosf/wcclibm.c:69:10
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 587202560, 14, $noreg, implicit-def $cpsr, debug-location !178; batchtest/cosf/wcclibm.c:69:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.10, 8, killed $cpsr, debug-location !178; batchtest/cosf/wcclibm.c:69:10
# Before:
not available
# After:
not available
## Instruction: B %bb.9, debug-location !178; batchtest/cosf/wcclibm.c:69:10
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: renamable $s0 = VLDRS %const.17, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 260, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: B %bb.14, debug-location !179; batchtest/cosf/wcclibm.c:69:29
# Before:
not available
# After:
not available
### Basic Block: 10
## Instruction: $s2 = VLDRS $r11, 259, 14, $noreg, debug-location !180 :: (load (s32) from %stack.2); batchtest/cosf/wcclibm.c:71:11
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VMULS renamable $s2, renamable $s2, 14, $noreg, debug-location !180; batchtest/cosf/wcclibm.c:71:11
# Before:
not available
# After:
not available
## Instruction: VSTRS $s6, $sp, 5, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.4, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMLAS renamable $s0(tied-def 0), renamable $s6, killed renamable $s4, 14, $noreg, debug-location !181; batchtest/cosf/wcclibm.c:74:55
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.5, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s6, killed renamable $s0, 14, $noreg, debug-location !182; batchtest/cosf/wcclibm.c:73:53
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.6, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMLAS renamable $s0(tied-def 0), renamable $s6, killed renamable $s4, 14, $noreg, debug-location !183; batchtest/cosf/wcclibm.c:72:73
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.7, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s6, killed renamable $s0, 14, $noreg, debug-location !184; batchtest/cosf/wcclibm.c:72:51
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.8, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMLAS renamable $s0(tied-def 0), renamable $s6, killed renamable $s4, 14, $noreg, debug-location !185; batchtest/cosf/wcclibm.c:72:29
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMULS renamable $s6, killed renamable $s0, 14, $noreg, debug-location !186; batchtest/cosf/wcclibm.c:72:11
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.9, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s8 = VLDRS %const.10, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s8 = VMLAS renamable $s8(tied-def 0), renamable $s6, killed renamable $s4, 14, $noreg, debug-location !187; batchtest/cosf/wcclibm.c:76:47
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.11, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s6, killed renamable $s8, 14, $noreg, debug-location !188; batchtest/cosf/wcclibm.c:75:67
# Before:
not available
# After:
not available
## Instruction: renamable $s8 = VLDRS %const.12, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s8 = VMLAS renamable $s8(tied-def 0), renamable $s6, killed renamable $s4, 14, $noreg, debug-location !189; batchtest/cosf/wcclibm.c:75:45
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s6, killed renamable $s8, 14, $noreg, debug-location !190; batchtest/cosf/wcclibm.c:75:23
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VDIVS killed renamable $s0, killed renamable $s4, 14, $noreg, debug-location !191; batchtest/cosf/wcclibm.c:77:11
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.15, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMLSS renamable $s0(tied-def 0), renamable $s2, killed renamable $s4, 14, $noreg, debug-location !192; batchtest/cosf/wcclibm.c:78:58
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VSUBS killed renamable $s0, renamable $s2, 14, $noreg, debug-location !193; batchtest/cosf/wcclibm.c:78:30
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.16, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VADDS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !193; batchtest/cosf/wcclibm.c:78:30
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 260, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: B %bb.14, debug-location !194; batchtest/cosf/wcclibm.c:78:5
# Before:
not available
# After:
not available
### Basic Block: 11
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !196 :: (load (s32) from %stack.1); batchtest/cosf/wcclibm.c:80:10
# Before:
bot
# After:
not available
## Instruction: CMNri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !196; batchtest/cosf/wcclibm.c:80:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.13, 12, killed $cpsr, debug-location !196; batchtest/cosf/wcclibm.c:80:10
# Before:
not available
# After:
not available
## Instruction: B %bb.12, debug-location !196; batchtest/cosf/wcclibm.c:80:10
# Before:
not available
# After:
not available
### Basic Block: 12
## Instruction: $s0 = VLDRS $r11, 259, 14, $noreg :: (load (s32) from %stack.2)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VADDS renamable $s0, renamable $s2, 14, $noreg, debug-location !197; batchtest/cosf/wcclibm.c:81:27
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS killed renamable $s0, killed renamable $s4, 14, $noreg, debug-location !198; batchtest/cosf/wcclibm.c:81:33
# Before:
not available
# After:
not available
## Instruction: VSTRS $s0, $sp, 2, 14, $noreg :: (store (s32) into %stack.7)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.4, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s0, killed renamable $s6, 14, $noreg, debug-location !199; batchtest/cosf/wcclibm.c:84:57
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.5, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VMLAS renamable $s6(tied-def 0), renamable $s0, killed renamable $s4, 14, $noreg, debug-location !200; batchtest/cosf/wcclibm.c:83:55
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.6, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s0, killed renamable $s6, 14, $noreg, debug-location !201; batchtest/cosf/wcclibm.c:82:75
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.7, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VMLAS renamable $s6(tied-def 0), renamable $s0, killed renamable $s4, 14, $noreg, debug-location !202; batchtest/cosf/wcclibm.c:82:53
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.8, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s0, killed renamable $s6, 14, $noreg, debug-location !203; batchtest/cosf/wcclibm.c:82:31
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VMULS renamable $s0, killed renamable $s4, 14, $noreg, debug-location !204; batchtest/cosf/wcclibm.c:82:13
# Before:
not available
# After:
not available
## Instruction: VSTRS $s4, $sp, 4, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.9, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.10, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s0, killed renamable $s6, 14, $noreg, debug-location !205; batchtest/cosf/wcclibm.c:86:49
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.11, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VMLAS renamable $s6(tied-def 0), renamable $s0, killed renamable $s4, 14, $noreg, debug-location !206; batchtest/cosf/wcclibm.c:85:69
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.12, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s0, killed renamable $s6, 14, $noreg, debug-location !207; batchtest/cosf/wcclibm.c:85:47
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VMLAS renamable $s2(tied-def 0), renamable $s0, killed renamable $s4, 14, $noreg, debug-location !208; batchtest/cosf/wcclibm.c:85:25
# Before:
not available
# After:
not available
## Instruction: VSTRS $s2, $sp, 3, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: BL_pred @basicmath___ieee754_sqrtf, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $s0, implicit-def $sp, implicit-def $s0, debug-location !209; batchtest/cosf/wcclibm.c:87:11
# Before:
not available
# After:
not available
## Instruction: $s4 = VLDRS $sp, 3, 14, $noreg, debug-location !209 :: (load (s32) from %stack.6); batchtest/cosf/wcclibm.c:87:11
# Before:
bot
# After:
not available
## Instruction: $s2 = VLDRS $sp, 4, 14, $noreg, debug-location !209 :: (load (s32) from %stack.5); batchtest/cosf/wcclibm.c:87:11
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VDIVS killed renamable $s2, killed renamable $s4, 14, $noreg, debug-location !210; batchtest/cosf/wcclibm.c:88:13
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.13, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VMLAS renamable $s2(tied-def 0), killed renamable $s4, renamable $s0, 14, $noreg, debug-location !211; batchtest/cosf/wcclibm.c:89:17
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VADDS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !212; batchtest/cosf/wcclibm.c:90:49
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VADDS killed renamable $s0, renamable $s0, 14, $noreg, debug-location !213; batchtest/cosf/wcclibm.c:90:27
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.14, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !213; batchtest/cosf/wcclibm.c:90:27
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 260, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: B %bb.14, debug-location !214; batchtest/cosf/wcclibm.c:90:7
# Before:
not available
# After:
not available
### Basic Block: 13
## Instruction: $s2 = VLDRS $r11, 259, 14, $noreg :: (load (s32) from %stack.2)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: VSTRS $s0, $sp, 0, 14, $noreg :: (store (s32) into %stack.9)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS renamable $s0, renamable $s2, 14, $noreg, debug-location !215; batchtest/cosf/wcclibm.c:93:27
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !216; batchtest/cosf/wcclibm.c:93:33
# Before:
not available
# After:
not available
## Instruction: VSTRS $s0, $sp, 1, 14, $noreg :: (store (s32) into %stack.8)
# Before:
bot
# After:
not available
## Instruction: BL_pred @basicmath___ieee754_sqrtf, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $s0, implicit-def $sp, implicit-def $s0, debug-location !217; batchtest/cosf/wcclibm.c:94:11
# Before:
not available
# After:
not available
## Instruction: $s8 = VLDRS $sp, 0, 14, $noreg, debug-location !217 :: (load (s32) from %stack.9); batchtest/cosf/wcclibm.c:94:11
# Before:
bot
# After:
not available
## Instruction: $s10 = VLDRS $sp, 1, 14, $noreg, debug-location !217 :: (load (s32) from %stack.8); batchtest/cosf/wcclibm.c:94:11
# Before:
bot
# After:
not available
## Instruction: $s6 = VMOVS killed $s0, 14, $noreg, debug-location !217; batchtest/cosf/wcclibm.c:94:11
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = VMOVRS renamable $s6, 14, $noreg, debug-location !218; batchtest/cosf/wcclibm.c:96:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !219; batchtest/cosf/wcclibm.c:97:7
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VMOVSR killed renamable $r0, 14, $noreg, debug-location !219; batchtest/cosf/wcclibm.c:97:7
# Before:
not available
# After:
not available
## Instruction: $s0 = VMOVS $s10, 14, $noreg, debug-location !220; batchtest/cosf/wcclibm.c:98:16
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMLSS renamable $s0(tied-def 0), renamable $s2, renamable $s2, 14, $noreg, debug-location !220; batchtest/cosf/wcclibm.c:98:16
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VADDS renamable $s6, renamable $s2, 14, $noreg, debug-location !221; batchtest/cosf/wcclibm.c:98:34
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VDIVS killed renamable $s0, killed renamable $s4, 14, $noreg, debug-location !222; batchtest/cosf/wcclibm.c:98:28
# Before:
not available
# After:
not available
## Instruction: renamable $s12 = VLDRS %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.4, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s10, killed renamable $s12, 14, $noreg, debug-location !223; batchtest/cosf/wcclibm.c:101:57
# Before:
not available
# After:
not available
## Instruction: renamable $s12 = VLDRS %const.5, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s12 = VMLAS renamable $s12(tied-def 0), renamable $s10, killed renamable $s4, 14, $noreg, debug-location !224; batchtest/cosf/wcclibm.c:100:55
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.6, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s10, killed renamable $s12, 14, $noreg, debug-location !225; batchtest/cosf/wcclibm.c:99:75
# Before:
not available
# After:
not available
## Instruction: renamable $s12 = VLDRS %const.7, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s12 = VMLAS renamable $s12(tied-def 0), renamable $s10, killed renamable $s4, 14, $noreg, debug-location !226; batchtest/cosf/wcclibm.c:99:53
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.8, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s10, killed renamable $s12, 14, $noreg, debug-location !227; batchtest/cosf/wcclibm.c:99:31
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VMULS renamable $s10, killed renamable $s4, 14, $noreg, debug-location !228; batchtest/cosf/wcclibm.c:99:13
# Before:
not available
# After:
not available
## Instruction: renamable $s14 = VLDRS %const.9, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s12 = VLDRS %const.10, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s12 = VMLAS renamable $s12(tied-def 0), renamable $s10, killed renamable $s14, 14, $noreg, debug-location !229; batchtest/cosf/wcclibm.c:103:49
# Before:
not available
# After:
not available
## Instruction: renamable $s14 = VLDRS %const.11, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s14 = VMLAS renamable $s14(tied-def 0), renamable $s10, killed renamable $s12, 14, $noreg, debug-location !230; batchtest/cosf/wcclibm.c:102:69
# Before:
not available
# After:
not available
## Instruction: renamable $s12 = VLDRS %const.12, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s12 = VMLAS renamable $s12(tied-def 0), renamable $s10, killed renamable $s14, 14, $noreg, debug-location !231; batchtest/cosf/wcclibm.c:102:47
# Before:
not available
# After:
not available
## Instruction: renamable $s8 = VMLAS renamable $s8(tied-def 0), renamable $s10, killed renamable $s12, 14, $noreg, debug-location !232; batchtest/cosf/wcclibm.c:102:25
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VDIVS killed renamable $s4, killed renamable $s8, 14, $noreg, debug-location !233; batchtest/cosf/wcclibm.c:104:13
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMLAS renamable $s0(tied-def 0), killed renamable $s4, killed renamable $s6, 14, $noreg, debug-location !234; batchtest/cosf/wcclibm.c:105:17
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VADDS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !235; batchtest/cosf/wcclibm.c:106:35
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VADDS killed renamable $s0, renamable $s0, 14, $noreg, debug-location !236; batchtest/cosf/wcclibm.c:106:28
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 260, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: B %bb.14, debug-location !237; batchtest/cosf/wcclibm.c:106:7
# Before:
not available
# After:
not available
### Basic Block: 14
## Instruction: $s0 = VLDRS $r11, 260, 14, $noreg, debug-location !238 :: (load (s32) from %stack.3); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !239; batchtest/cosf/wcclibm.c:108:1
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !239; batchtest/cosf/wcclibm.c:108:1
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $s0, debug-location !239; batchtest/cosf/wcclibm.c:108:1
# Before:
not available
# After:
not available
### Basic Block: 15
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 4, %const.4, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 5, %const.5, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 6, %const.6, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 7, %const.7, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 8, %const.8, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 9, %const.9, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 10, %const.10, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 11, %const.11, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 12, %const.12, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 13, %const.13, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 14, %const.14, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 15, %const.15, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 16, %const.16, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 17, %const.17, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 18, %const.18, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 19, %const.19, 4
# Before:
not available
# After:
not available
#### Function: basicmath___ieee754_powf
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 208, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: VSTRS $s1, $r11, 262, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: VSTRS $s0, $r11, 261, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = VMOVRS renamable $s0, 14, $noreg, debug-location !306; batchtest/cosf/wcclibm.c:148:3
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $r11, -16, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = VMOVRS renamable $s1, 14, $noreg, debug-location !307; batchtest/cosf/wcclibm.c:149:3
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $r11, -12, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = BICri renamable $r1, -2147483648, 14, $noreg, $noreg, debug-location !308; batchtest/cosf/wcclibm.c:150:11
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $r11, -8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = BICri renamable $r0, -2147483648, 14, $noreg, $noreg, debug-location !309; batchtest/cosf/wcclibm.c:151:11
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !311; batchtest/cosf/wcclibm.c:154:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 1, killed $cpsr, debug-location !311; batchtest/cosf/wcclibm.c:154:8
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !311; batchtest/cosf/wcclibm.c:154:8
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $s0 = VLDRS %const.43, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !312; batchtest/cosf/wcclibm.c:154:18
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $s0 = VLDRS $r11, 261, 14, $noreg :: (load (s32) from %stack.4)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.43, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: VCMPS renamable $s0, killed renamable $s2, 14, $noreg, implicit-def $fpscr_nzcv, debug-location !314; batchtest/cosf/wcclibm.c:157:8
# Before:
not available
# After:
not available
## Instruction: FMSTAT 14, $noreg, implicit-def $cpsr, implicit killed $fpscr_nzcv, debug-location !314; batchtest/cosf/wcclibm.c:157:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !314; batchtest/cosf/wcclibm.c:157:8
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !314; batchtest/cosf/wcclibm.c:157:8
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: renamable $s0 = VLDRS %const.43, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !315; batchtest/cosf/wcclibm.c:157:20
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $s0 = VLDRS $r11, 261, 14, $noreg :: (load (s32) from %stack.4)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.44, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: VCMPS renamable $s0, killed renamable $s2, 14, $noreg, implicit-def $fpscr_nzcv, debug-location !317; batchtest/cosf/wcclibm.c:158:19
# Before:
not available
# After:
not available
## Instruction: FMSTAT 14, $noreg, implicit-def $cpsr, implicit killed $fpscr_nzcv, debug-location !317; batchtest/cosf/wcclibm.c:158:19
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.7, 1, killed $cpsr, debug-location !317; batchtest/cosf/wcclibm.c:158:19
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !317; batchtest/cosf/wcclibm.c:158:19
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $s0 = VLDRS $r11, 262, 14, $noreg, debug-location !318 :: (load (s32) from %stack.5); batchtest/cosf/wcclibm.c:158:22
# Before:
bot
# After:
not available
## Instruction: BL_pred @basicmath___isinff, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $s0, implicit-def $sp, implicit-def $r0, debug-location !318; batchtest/cosf/wcclibm.c:158:22
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !319; batchtest/cosf/wcclibm.c:158:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.7, 0, killed $cpsr, debug-location !319; batchtest/cosf/wcclibm.c:158:8
# Before:
not available
# After:
not available
## Instruction: B %bb.6, debug-location !319; batchtest/cosf/wcclibm.c:158:8
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: renamable $s0 = VLDRS %const.43, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !320; batchtest/cosf/wcclibm.c:158:48
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg :: (load (s32) from %stack.1)
# Before:
bot
# After:
not available
## Instruction: $r1 = MOVi 1065353216, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = ORRri $r1, 1073741824, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !322; batchtest/cosf/wcclibm.c:161:24
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.9, 8, killed $cpsr, debug-location !322; batchtest/cosf/wcclibm.c:161:24
# Before:
not available
# After:
not available
## Instruction: B %bb.8, debug-location !322; batchtest/cosf/wcclibm.c:161:24
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg :: (load (s32) from %stack.0)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !324; batchtest/cosf/wcclibm.c:161:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.10, 3, killed $cpsr, debug-location !324; batchtest/cosf/wcclibm.c:161:8
# Before:
not available
# After:
not available
## Instruction: B %bb.9, debug-location !324; batchtest/cosf/wcclibm.c:161:8
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: $s0 = VLDRS $r11, 261, 14, $noreg, debug-location !325 :: (load (s32) from %stack.4); batchtest/cosf/wcclibm.c:163:14
# Before:
bot
# After:
not available
## Instruction: $s2 = VLDRS $r11, 262, 14, $noreg, debug-location !325 :: (load (s32) from %stack.5); batchtest/cosf/wcclibm.c:163:14
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VADDS renamable $s0, renamable $s2, 14, $noreg, debug-location !325; batchtest/cosf/wcclibm.c:163:14
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !326; batchtest/cosf/wcclibm.c:163:5
# Before:
not available
# After:
not available
### Basic Block: 10
## Instruction: $r1 = LDRi12 $r11, -16, 14, $noreg :: (load (s32) from %stack.3)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMNri renamable $r1, 1, 14, $noreg, implicit-def $cpsr, debug-location !328; batchtest/cosf/wcclibm.c:171:8
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -32, 14, $noreg :: (store (s32) into %stack.7)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.19, 12, killed $cpsr, debug-location !328; batchtest/cosf/wcclibm.c:171:8
# Before:
not available
# After:
not available
## Instruction: B %bb.11, debug-location !328; batchtest/cosf/wcclibm.c:171:8
# Before:
not available
# After:
not available
### Basic Block: 11
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !330 :: (load (s32) from %stack.0); batchtest/cosf/wcclibm.c:172:10
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r0, 187, 14, $noreg, $noreg, debug-location !330; batchtest/cosf/wcclibm.c:172:10
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 151, 14, $noreg, implicit-def $cpsr, debug-location !330; batchtest/cosf/wcclibm.c:172:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.13, 3, killed $cpsr, debug-location !330; batchtest/cosf/wcclibm.c:172:10
# Before:
not available
# After:
not available
## Instruction: B %bb.12, debug-location !330; batchtest/cosf/wcclibm.c:172:10
# Before:
not available
# After:
not available
### Basic Block: 12
## Instruction: renamable $r0 = MOVi 2, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -36, 14, $noreg :: (store (s32) into %stack.8)
# Before:
bot
# After:
not available
## Instruction: B %bb.18, debug-location !331; batchtest/cosf/wcclibm.c:172:29
# Before:
not available
# After:
not available
### Basic Block: 13
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg :: (load (s32) from %stack.0)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPri renamable $r1, 1065353216, 14, $noreg, implicit-def $cpsr, debug-location !333; batchtest/cosf/wcclibm.c:174:12
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.9)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.17, 3, killed $cpsr, debug-location !333; batchtest/cosf/wcclibm.c:174:12
# Before:
not available
# After:
not available
## Instruction: B %bb.14, debug-location !333; batchtest/cosf/wcclibm.c:174:12
# Before:
not available
# After:
not available
### Basic Block: 14
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg :: (load (s32) from %stack.0)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 150, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = nsw SUBrsi killed renamable $r0, renamable $r1, 187, 14, $noreg, $noreg, debug-location !335; batchtest/cosf/wcclibm.c:176:24
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsr renamable $r1, renamable $r3, 3, 14, $noreg, $noreg, debug-location !336; batchtest/cosf/wcclibm.c:176:16
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr $r2, 14, $noreg, $noreg, debug-location !336; batchtest/cosf/wcclibm.c:176:16
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -48, 14, $noreg :: (store (s32) into %stack.11)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPrsr renamable $r1, killed renamable $r2, killed renamable $r3, 2, 14, $noreg, implicit-def $cpsr, debug-location !340; batchtest/cosf/wcclibm.c:177:14
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -44, 14, $noreg :: (store (s32) into %stack.10)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.16, 1, killed $cpsr, debug-location !340; batchtest/cosf/wcclibm.c:177:14
# Before:
not available
# After:
not available
## Instruction: B %bb.15, debug-location !340; batchtest/cosf/wcclibm.c:177:14
# Before:
not available
# After:
not available
### Basic Block: 15
## Instruction: $r0 = LDRi12 $r11, -48, 14, $noreg, debug-location !341 :: (load (s32) from %stack.11); batchtest/cosf/wcclibm.c:177:59
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDri renamable $r0, 1, 14, $noreg, $noreg, debug-location !341; batchtest/cosf/wcclibm.c:177:59
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw RSBri killed renamable $r0, 2, 14, $noreg, $noreg, debug-location !342; batchtest/cosf/wcclibm.c:177:53
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -44, 14, $noreg :: (store (s32) into %stack.10)
# Before:
bot
# After:
not available
## Instruction: B %bb.16, debug-location !343; batchtest/cosf/wcclibm.c:177:42
# Before:
not available
# After:
not available
### Basic Block: 16
## Instruction: $r0 = LDRi12 $r11, -44, 14, $noreg, debug-location !344 :: (load (s32) from %stack.10); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.9)
# Before:
bot
# After:
not available
## Instruction: B %bb.17, debug-location !345; batchtest/cosf/wcclibm.c:178:7
# Before:
not available
# After:
not available
### Basic Block: 17
## Instruction: $r0 = LDRi12 $r11, -40, 14, $noreg, debug-location !344 :: (load (s32) from %stack.9); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -36, 14, $noreg :: (store (s32) into %stack.8)
# Before:
bot
# After:
not available
## Instruction: B %bb.18
# Before:
not available
# After:
not available
### Basic Block: 18
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !344 :: (load (s32) from %stack.8); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -32, 14, $noreg :: (store (s32) into %stack.7)
# Before:
bot
# After:
not available
## Instruction: B %bb.19, debug-location !346; batchtest/cosf/wcclibm.c:179:3
# Before:
not available
# After:
not available
### Basic Block: 19
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !344 :: (load (s32) from %stack.0); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -32, 14, $noreg, debug-location !344 :: (load (s32) from %stack.7); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $r11, -52, 14, $noreg :: (store (s32) into %stack.12)
# Before:
bot
# After:
not available
## Instruction: $r1 = MOVi 1065353216, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = ORRri $r1, 1073741824, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !348; batchtest/cosf/wcclibm.c:182:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.31, 1, killed $cpsr, debug-location !348; batchtest/cosf/wcclibm.c:182:8
# Before:
not available
# After:
not available
## Instruction: B %bb.20, debug-location !348; batchtest/cosf/wcclibm.c:182:8
# Before:
not available
# After:
not available
### Basic Block: 20
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !350 :: (load (s32) from %stack.1); batchtest/cosf/wcclibm.c:183:10
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1065353216, 14, $noreg, implicit-def $cpsr, debug-location !350; batchtest/cosf/wcclibm.c:183:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.22, 1, killed $cpsr, debug-location !350; batchtest/cosf/wcclibm.c:183:10
# Before:
not available
# After:
not available
## Instruction: B %bb.21, debug-location !350; batchtest/cosf/wcclibm.c:183:10
# Before:
not available
# After:
not available
### Basic Block: 21
## Instruction: $s0 = VLDRS $r11, 262, 14, $noreg, debug-location !351 :: (load (s32) from %stack.5); batchtest/cosf/wcclibm.c:184:17
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS renamable $s0, renamable $s0, 14, $noreg, debug-location !351; batchtest/cosf/wcclibm.c:184:17
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !352; batchtest/cosf/wcclibm.c:184:7
# Before:
not available
# After:
not available
### Basic Block: 22
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !354 :: (load (s32) from %stack.1); batchtest/cosf/wcclibm.c:186:12
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1065353216, 14, $noreg, implicit-def $cpsr, debug-location !354; batchtest/cosf/wcclibm.c:186:12
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.27, 9, killed $cpsr, debug-location !354; batchtest/cosf/wcclibm.c:186:12
# Before:
not available
# After:
not available
## Instruction: B %bb.23, debug-location !354; batchtest/cosf/wcclibm.c:186:12
# Before:
not available
# After:
not available
### Basic Block: 23
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !356 :: (load (s32) from %stack.2); batchtest/cosf/wcclibm.c:187:16
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !356; batchtest/cosf/wcclibm.c:187:16
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.25, 4, killed $cpsr, debug-location !356; batchtest/cosf/wcclibm.c:187:16
# Before:
not available
# After:
not available
## Instruction: B %bb.24, debug-location !356; batchtest/cosf/wcclibm.c:187:16
# Before:
not available
# After:
not available
### Basic Block: 24
## Instruction: $s0 = VLDRS $r11, 262, 14, $noreg :: (load (s32) from %stack.5)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 270, 14, $noreg :: (store (s32) into %stack.13)
# Before:
bot
# After:
not available
## Instruction: B %bb.26, debug-location !356; batchtest/cosf/wcclibm.c:187:16
# Before:
not available
# After:
not available
### Basic Block: 25
## Instruction: renamable $s0 = VLDRS %const.45, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 270, 14, $noreg :: (store (s32) into %stack.13)
# Before:
bot
# After:
not available
## Instruction: B %bb.26, debug-location !356; batchtest/cosf/wcclibm.c:187:16
# Before:
not available
# After:
not available
### Basic Block: 26
## Instruction: $s0 = VLDRS $r11, 270, 14, $noreg, debug-location !356 :: (load (s32) from %stack.13); batchtest/cosf/wcclibm.c:187:16
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !357; batchtest/cosf/wcclibm.c:187:9
# Before:
not available
# After:
not available
### Basic Block: 27
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !359 :: (load (s32) from %stack.2); batchtest/cosf/wcclibm.c:189:16
# Before:
bot
# After:
not available
## Instruction: CMNri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !359; batchtest/cosf/wcclibm.c:189:16
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.29, 12, killed $cpsr, debug-location !359; batchtest/cosf/wcclibm.c:189:16
# Before:
not available
# After:
not available
## Instruction: B %bb.28, debug-location !359; batchtest/cosf/wcclibm.c:189:16
# Before:
not available
# After:
not available
### Basic Block: 28
## Instruction: $s0 = VLDRS $r11, 262, 14, $noreg, debug-location !360 :: (load (s32) from %stack.5); batchtest/cosf/wcclibm.c:189:29
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VNEGS renamable $s0, 14, $noreg, debug-location !360; batchtest/cosf/wcclibm.c:189:29
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 271, 14, $noreg :: (store (s32) into %stack.14)
# Before:
bot
# After:
not available
## Instruction: B %bb.30, debug-location !359; batchtest/cosf/wcclibm.c:189:16
# Before:
not available
# After:
not available
### Basic Block: 29
## Instruction: renamable $s0 = VLDRS %const.45, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 271, 14, $noreg :: (store (s32) into %stack.14)
# Before:
bot
# After:
not available
## Instruction: B %bb.30, debug-location !359; batchtest/cosf/wcclibm.c:189:16
# Before:
not available
# After:
not available
### Basic Block: 30
## Instruction: $s0 = VLDRS $r11, 271, 14, $noreg, debug-location !359 :: (load (s32) from %stack.14); batchtest/cosf/wcclibm.c:189:16
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !361; batchtest/cosf/wcclibm.c:189:9
# Before:
not available
# After:
not available
### Basic Block: 31
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !363 :: (load (s32) from %stack.0); batchtest/cosf/wcclibm.c:191:8
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1065353216, 14, $noreg, implicit-def $cpsr, debug-location !363; batchtest/cosf/wcclibm.c:191:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.35, 1, killed $cpsr, debug-location !363; batchtest/cosf/wcclibm.c:191:8
# Before:
not available
# After:
not available
## Instruction: B %bb.32, debug-location !363; batchtest/cosf/wcclibm.c:191:8
# Before:
not available
# After:
not available
### Basic Block: 32
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !365 :: (load (s32) from %stack.2); batchtest/cosf/wcclibm.c:192:10
# Before:
bot
# After:
not available
## Instruction: CMNri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !365; batchtest/cosf/wcclibm.c:192:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.34, 12, killed $cpsr, debug-location !365; batchtest/cosf/wcclibm.c:192:10
# Before:
not available
# After:
not available
## Instruction: B %bb.33, debug-location !365; batchtest/cosf/wcclibm.c:192:10
# Before:
not available
# After:
not available
### Basic Block: 33
## Instruction: $s2 = VLDRS $r11, 261, 14, $noreg :: (load (s32) from %stack.4)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.43, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VDIVS killed renamable $s0, renamable $s2, 14, $noreg, debug-location !366; batchtest/cosf/wcclibm.c:192:40
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !367; batchtest/cosf/wcclibm.c:192:19
# Before:
not available
# After:
not available
### Basic Block: 34
## Instruction: $s0 = VLDRS $r11, 261, 14, $noreg :: (load (s32) from %stack.4)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !368; batchtest/cosf/wcclibm.c:193:10
# Before:
not available
# After:
not available
### Basic Block: 35
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !370 :: (load (s32) from %stack.2); batchtest/cosf/wcclibm.c:195:8
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1073741824, 14, $noreg, implicit-def $cpsr, debug-location !370; batchtest/cosf/wcclibm.c:195:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.37, 1, killed $cpsr, debug-location !370; batchtest/cosf/wcclibm.c:195:8
# Before:
not available
# After:
not available
## Instruction: B %bb.36, debug-location !370; batchtest/cosf/wcclibm.c:195:8
# Before:
not available
# After:
not available
### Basic Block: 36
## Instruction: $s0 = VLDRS $r11, 261, 14, $noreg, debug-location !371 :: (load (s32) from %stack.4); batchtest/cosf/wcclibm.c:195:36
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS renamable $s0, renamable $s0, 14, $noreg, debug-location !371; batchtest/cosf/wcclibm.c:195:36
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !372; batchtest/cosf/wcclibm.c:195:27
# Before:
not available
# After:
not available
### Basic Block: 37
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !374 :: (load (s32) from %stack.2); batchtest/cosf/wcclibm.c:196:8
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1056964608, 14, $noreg, implicit-def $cpsr, debug-location !374; batchtest/cosf/wcclibm.c:196:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.41, 1, killed $cpsr, debug-location !374; batchtest/cosf/wcclibm.c:196:8
# Before:
not available
# After:
not available
## Instruction: B %bb.38, debug-location !374; batchtest/cosf/wcclibm.c:196:8
# Before:
not available
# After:
not available
### Basic Block: 38
## Instruction: $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !376 :: (load (s32) from %stack.3); batchtest/cosf/wcclibm.c:197:10
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !376; batchtest/cosf/wcclibm.c:197:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.40, 4, killed $cpsr, debug-location !376; batchtest/cosf/wcclibm.c:197:10
# Before:
not available
# After:
not available
## Instruction: B %bb.39, debug-location !376; batchtest/cosf/wcclibm.c:197:10
# Before:
not available
# After:
not available
### Basic Block: 39
## Instruction: $s0 = VLDRS $r11, 261, 14, $noreg, debug-location !377 :: (load (s32) from %stack.4); batchtest/cosf/wcclibm.c:198:14
# Before:
bot
# After:
not available
## Instruction: BL_pred @basicmath___ieee754_sqrtf, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $s0, implicit-def $sp, implicit-def $s0, debug-location !377; batchtest/cosf/wcclibm.c:198:14
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !378; batchtest/cosf/wcclibm.c:198:7
# Before:
not available
# After:
not available
### Basic Block: 40
## Instruction: B %bb.41, debug-location !379; batchtest/cosf/wcclibm.c:199:3
# Before:
not available
# After:
not available
### Basic Block: 41
## Instruction: $s0 = VLDRS $r11, 261, 14, $noreg, debug-location !380 :: (load (s32) from %stack.4); batchtest/cosf/wcclibm.c:201:10
# Before:
bot
# After:
not available
## Instruction: BL_pred @basicmath___fabsf, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $s0, implicit-def $sp, implicit-def $s0, debug-location !380; batchtest/cosf/wcclibm.c:201:10
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !380 :: (load (s32) from %stack.1); batchtest/cosf/wcclibm.c:201:10
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 272, 14, $noreg :: (store (s32) into %stack.15)
# Before:
bot
# After:
not available
## Instruction: $r1 = MOVi 1065353216, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = ORRri $r1, 1073741824, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !382; batchtest/cosf/wcclibm.c:203:25
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.44, 0, killed $cpsr, debug-location !382; batchtest/cosf/wcclibm.c:203:25
# Before:
not available
# After:
not available
## Instruction: B %bb.42, debug-location !382; batchtest/cosf/wcclibm.c:203:25
# Before:
not available
# After:
not available
### Basic Block: 42
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !384 :: (load (s32) from %stack.1); batchtest/cosf/wcclibm.c:203:36
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !384; batchtest/cosf/wcclibm.c:203:36
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.44, 0, killed $cpsr, debug-location !384; batchtest/cosf/wcclibm.c:203:36
# Before:
not available
# After:
not available
## Instruction: B %bb.43, debug-location !384; batchtest/cosf/wcclibm.c:203:36
# Before:
not available
# After:
not available
### Basic Block: 43
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !386 :: (load (s32) from %stack.1); batchtest/cosf/wcclibm.c:203:8
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1065353216, 14, $noreg, implicit-def $cpsr, debug-location !386; batchtest/cosf/wcclibm.c:203:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.54, 1, killed $cpsr, debug-location !386; batchtest/cosf/wcclibm.c:203:8
# Before:
not available
# After:
not available
## Instruction: B %bb.44, debug-location !386; batchtest/cosf/wcclibm.c:203:8
# Before:
not available
# After:
not available
### Basic Block: 44
## Instruction: $s0 = VLDRS $r11, 272, 14, $noreg, debug-location !388 :: (load (s32) from %stack.15); batchtest/cosf/wcclibm.c:205:10
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !388 :: (load (s32) from %stack.2); batchtest/cosf/wcclibm.c:205:10
# Before:
bot
# After:
not available
## Instruction: CMNri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !388; batchtest/cosf/wcclibm.c:205:10
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 273, 14, $noreg :: (store (s32) into %stack.16)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.46, 12, killed $cpsr, debug-location !388; batchtest/cosf/wcclibm.c:205:10
# Before:
not available
# After:
not available
## Instruction: B %bb.45, debug-location !388; batchtest/cosf/wcclibm.c:205:10
# Before:
not available
# After:
not available
### Basic Block: 45
## Instruction: $s2 = VLDRS $r11, 272, 14, $noreg :: (load (s32) from %stack.15)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.43, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VDIVS killed renamable $s0, renamable $s2, 14, $noreg, debug-location !389; batchtest/cosf/wcclibm.c:205:37
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 273, 14, $noreg :: (store (s32) into %stack.16)
# Before:
bot
# After:
not available
## Instruction: B %bb.46, debug-location !390; batchtest/cosf/wcclibm.c:205:19
# Before:
not available
# After:
not available
### Basic Block: 46
## Instruction: $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !344 :: (load (s32) from %stack.3); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $r11, 273, 14, $noreg, debug-location !344 :: (load (s32) from %stack.16); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: VSTRS $s0, $r11, 275, 14, $noreg :: (store (s32) into %stack.18)
# Before:
bot
# After:
not available
## Instruction: CMNri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !392; batchtest/cosf/wcclibm.c:206:10
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 274, 14, $noreg :: (store (s32) into %stack.17)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.53, 12, killed $cpsr, debug-location !392; batchtest/cosf/wcclibm.c:206:10
# Before:
not available
# After:
not available
## Instruction: B %bb.47, debug-location !392; batchtest/cosf/wcclibm.c:206:10
# Before:
not available
# After:
not available
### Basic Block: 47
## Instruction: $r1 = LDRi12 $r11, -52, 14, $noreg, debug-location !393 :: (load (s32) from %stack.12); batchtest/cosf/wcclibm.c:207:19
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !393 :: (load (s32) from %stack.1); batchtest/cosf/wcclibm.c:207:19
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nsw SUBri renamable $r0, 1065353216, 14, $noreg, $noreg, debug-location !393; batchtest/cosf/wcclibm.c:207:19
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !394; batchtest/cosf/wcclibm.c:207:34
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !396; batchtest/cosf/wcclibm.c:207:12
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.49, 1, killed $cpsr, debug-location !396; batchtest/cosf/wcclibm.c:207:12
# Before:
not available
# After:
not available
## Instruction: B %bb.48, debug-location !396; batchtest/cosf/wcclibm.c:207:12
# Before:
not available
# After:
not available
### Basic Block: 48
## Instruction: $s0 = VLDRS $r11, 275, 14, $noreg, debug-location !397 :: (load (s32) from %stack.18); batchtest/cosf/wcclibm.c:208:17
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS renamable $s0, renamable $s0, 14, $noreg, debug-location !397; batchtest/cosf/wcclibm.c:208:17
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VDIVS killed renamable $s0, renamable $s0, 14, $noreg, debug-location !399; batchtest/cosf/wcclibm.c:208:23
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 276, 14, $noreg :: (store (s32) into %stack.19)
# Before:
bot
# After:
not available
## Instruction: B %bb.52, debug-location !400; batchtest/cosf/wcclibm.c:209:7
# Before:
not available
# After:
not available
### Basic Block: 49
## Instruction: $s0 = VLDRS $r11, 275, 14, $noreg, debug-location !402 :: (load (s32) from %stack.18); batchtest/cosf/wcclibm.c:210:14
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -52, 14, $noreg, debug-location !402 :: (load (s32) from %stack.12); batchtest/cosf/wcclibm.c:210:14
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !402; batchtest/cosf/wcclibm.c:210:14
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 277, 14, $noreg :: (store (s32) into %stack.20)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.51, 1, killed $cpsr, debug-location !402; batchtest/cosf/wcclibm.c:210:14
# Before:
not available
# After:
not available
## Instruction: B %bb.50, debug-location !402; batchtest/cosf/wcclibm.c:210:14
# Before:
not available
# After:
not available
### Basic Block: 50
## Instruction: $s0 = VLDRS $r11, 275, 14, $noreg, debug-location !403 :: (load (s32) from %stack.18); batchtest/cosf/wcclibm.c:211:15
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VNEGS renamable $s0, 14, $noreg, debug-location !403; batchtest/cosf/wcclibm.c:211:15
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 277, 14, $noreg :: (store (s32) into %stack.20)
# Before:
bot
# After:
not available
## Instruction: B %bb.51, debug-location !404; batchtest/cosf/wcclibm.c:211:11
# Before:
not available
# After:
not available
### Basic Block: 51
## Instruction: $s0 = VLDRS $r11, 277, 14, $noreg, debug-location !344 :: (load (s32) from %stack.20); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 276, 14, $noreg :: (store (s32) into %stack.19)
# Before:
bot
# After:
not available
## Instruction: B %bb.52
# Before:
not available
# After:
not available
### Basic Block: 52
## Instruction: $s0 = VLDRS $r11, 276, 14, $noreg, debug-location !344 :: (load (s32) from %stack.19); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 274, 14, $noreg :: (store (s32) into %stack.17)
# Before:
bot
# After:
not available
## Instruction: B %bb.53, debug-location !405; batchtest/cosf/wcclibm.c:212:5
# Before:
not available
# After:
not available
### Basic Block: 53
## Instruction: $s0 = VLDRS $r11, 274, 14, $noreg, debug-location !344 :: (load (s32) from %stack.17); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !406; batchtest/cosf/wcclibm.c:213:5
# Before:
not available
# After:
not available
### Basic Block: 54
## Instruction: $r1 = LDRi12 $r11, -52, 14, $noreg :: (load (s32) from %stack.12)
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $r11, -16, 14, $noreg :: (load (s32) from %stack.3)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MVNi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw ADDrsi killed renamable $r0, renamable $r2, 251, 14, $noreg, $noreg, debug-location !408; batchtest/cosf/wcclibm.c:217:38
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !409; batchtest/cosf/wcclibm.c:217:44
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !411; batchtest/cosf/wcclibm.c:217:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.56, 1, killed $cpsr, debug-location !411; batchtest/cosf/wcclibm.c:217:8
# Before:
not available
# After:
not available
## Instruction: B %bb.55, debug-location !411; batchtest/cosf/wcclibm.c:217:8
# Before:
not available
# After:
not available
### Basic Block: 55
## Instruction: $s0 = VLDRS $r11, 261, 14, $noreg, debug-location !412 :: (load (s32) from %stack.4); batchtest/cosf/wcclibm.c:217:73
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS renamable $s0, renamable $s0, 14, $noreg, debug-location !412; batchtest/cosf/wcclibm.c:217:73
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VDIVS killed renamable $s0, renamable $s0, 14, $noreg, debug-location !414; batchtest/cosf/wcclibm.c:217:79
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !415; batchtest/cosf/wcclibm.c:217:62
# Before:
not available
# After:
not available
### Basic Block: 56
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !417 :: (load (s32) from %stack.0); batchtest/cosf/wcclibm.c:221:8
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1291845632, 14, $noreg, implicit-def $cpsr, debug-location !417; batchtest/cosf/wcclibm.c:221:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.64, 9, killed $cpsr, debug-location !417; batchtest/cosf/wcclibm.c:221:8
# Before:
not available
# After:
not available
## Instruction: B %bb.58, debug-location !417; batchtest/cosf/wcclibm.c:221:8
# Before:
not available
# After:
not available
### Basic Block: 57
## Instruction: CONSTPOOL_ENTRY 43, %const.0, 4
# Before:
not available
# After:
not available
### Basic Block: 58
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg :: (load (s32) from %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.22, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !419; batchtest/cosf/wcclibm.c:223:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.61, 8, killed $cpsr, debug-location !419; batchtest/cosf/wcclibm.c:223:10
# Before:
not available
# After:
not available
## Instruction: B %bb.59, debug-location !419; batchtest/cosf/wcclibm.c:223:10
# Before:
not available
# After:
not available
### Basic Block: 59
## Instruction: $r2 = LDRi12 $r11, -12, 14, $noreg :: (load (s32) from %stack.2)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LEApcrel %const.46, 14, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDri renamable $r0, 4, 14, $noreg, $noreg, debug-location !421; batchtest/cosf/wcclibm.c:223:35
# Before:
not available
# After:
not available
## Instruction: CMPri renamable $r2, 0, 14, $noreg, implicit-def $cpsr, debug-location !421; batchtest/cosf/wcclibm.c:223:35
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr killed renamable $r1, 4, killed $cpsr, $noreg, implicit renamable $r0, debug-location !421; batchtest/cosf/wcclibm.c:223:35
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VLDRS killed renamable $r0, 0, 14, $noreg, debug-location !421 :: (load (s32) from constant-pool); batchtest/cosf/wcclibm.c:223:35
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !422; batchtest/cosf/wcclibm.c:223:28
# Before:
not available
# After:
not available
### Basic Block: 60
## Instruction: CONSTPOOL_ENTRY 44, %const.1, 4
# Before:
not available
# After:
not available
### Basic Block: 61
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg :: (load (s32) from %stack.1)
# Before:
bot
# After:
not available
## Instruction: $r1 = MOVi 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = ORRri $r1, 1065353216, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !424; batchtest/cosf/wcclibm.c:225:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.63, 3, killed $cpsr, debug-location !424; batchtest/cosf/wcclibm.c:225:10
# Before:
not available
# After:
not available
## Instruction: B %bb.62, debug-location !424; batchtest/cosf/wcclibm.c:225:10
# Before:
not available
# After:
not available
### Basic Block: 62
## Instruction: $r2 = LDRi12 $r11, -12, 14, $noreg :: (load (s32) from %stack.2)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LEApcrel %const.46, 14, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDri renamable $r0, 4, 14, $noreg, $noreg, debug-location !426; batchtest/cosf/wcclibm.c:225:35
# Before:
not available
# After:
not available
## Instruction: CMPri renamable $r2, 0, 14, $noreg, implicit-def $cpsr, debug-location !426; batchtest/cosf/wcclibm.c:225:35
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr killed renamable $r1, 12, killed $cpsr, $noreg, implicit renamable $r0, debug-location !426; batchtest/cosf/wcclibm.c:225:35
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VLDRS killed renamable $r0, 0, 14, $noreg, debug-location !426 :: (load (s32) from constant-pool); batchtest/cosf/wcclibm.c:225:35
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !427; batchtest/cosf/wcclibm.c:225:28
# Before:
not available
# After:
not available
### Basic Block: 63
## Instruction: $s0 = VLDRS $r11, 261, 14, $noreg :: (load (s32) from %stack.4)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.44, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VADDS renamable $s0, killed renamable $s2, 14, $noreg, debug-location !428; batchtest/cosf/wcclibm.c:229:11
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VMULS renamable $s0, renamable $s0, 14, $noreg, debug-location !429; batchtest/cosf/wcclibm.c:230:13
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.47, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.48, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VMLAS renamable $s6(tied-def 0), renamable $s0, killed renamable $s4, 14, $noreg, debug-location !430; batchtest/cosf/wcclibm.c:230:70
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.49, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLSS renamable $s4(tied-def 0), renamable $s0, killed renamable $s6, 14, $noreg, debug-location !431; batchtest/cosf/wcclibm.c:230:37
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VMULS killed renamable $s2, killed renamable $s4, 14, $noreg, debug-location !432; batchtest/cosf/wcclibm.c:230:19
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.50, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMULS renamable $s0, killed renamable $s4, 14, $noreg, debug-location !433; batchtest/cosf/wcclibm.c:232:27
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.51, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VMULS killed renamable $s2, killed renamable $s6, 14, $noreg, debug-location !434; batchtest/cosf/wcclibm.c:233:31
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.52, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VMLAS renamable $s2(tied-def 0), killed renamable $s0, killed renamable $s6, 14, $noreg, debug-location !434; batchtest/cosf/wcclibm.c:233:31
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VADDS renamable $s4, renamable $s2, 14, $noreg, debug-location !435; batchtest/cosf/wcclibm.c:234:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = VMOVRS killed renamable $s0, 14, $noreg, debug-location !436; batchtest/cosf/wcclibm.c:235:5
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.8, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !437; batchtest/cosf/wcclibm.c:236:5
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMOVSR killed renamable $r0, 14, $noreg, debug-location !437; batchtest/cosf/wcclibm.c:236:5
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VSUBS renamable $s0, killed renamable $s4, 14, $noreg, debug-location !438; batchtest/cosf/wcclibm.c:237:19
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VSUBS killed renamable $s2, killed renamable $s4, 14, $noreg, debug-location !439; batchtest/cosf/wcclibm.c:237:12
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s2, $r11, 279, 14, $noreg :: (store (s32) into %stack.22)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 278, 14, $noreg :: (store (s32) into %stack.21)
# Before:
bot
# After:
not available
## Instruction: B %bb.74, debug-location !440; batchtest/cosf/wcclibm.c:238:3
# Before:
not available
# After:
not available
### Basic Block: 64
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg :: (load (s32) from %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPrsi renamable $r1, renamable $r0, 187, 14, $noreg, implicit-def $cpsr, debug-location !442; batchtest/cosf/wcclibm.c:242:10
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $r11, -100, 14, $noreg :: (store (s32) into %stack.24)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -96, 14, $noreg :: (store (s32) into %stack.23)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.66, 1, killed $cpsr, debug-location !442; batchtest/cosf/wcclibm.c:242:10
# Before:
not available
# After:
not available
## Instruction: B %bb.65, debug-location !442; batchtest/cosf/wcclibm.c:242:10
# Before:
not available
# After:
not available
### Basic Block: 65
## Instruction: $s0 = VLDRS $r11, 272, 14, $noreg :: (load (s32) from %stack.15)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.53, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS renamable $s0, killed renamable $s2, 14, $noreg, debug-location !443; batchtest/cosf/wcclibm.c:243:10
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = VMOVRS killed renamable $s0, 14, $noreg, debug-location !444; batchtest/cosf/wcclibm.c:245:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MVNi 23, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $r11, -100, 14, $noreg :: (store (s32) into %stack.24)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -96, 14, $noreg :: (store (s32) into %stack.23)
# Before:
bot
# After:
not available
## Instruction: B %bb.66, debug-location !445; batchtest/cosf/wcclibm.c:246:5
# Before:
not available
# After:
not available
### Basic Block: 66
## Instruction: $r1 = LDRi12 $r11, -100, 14, $noreg, debug-location !344 :: (load (s32) from %stack.24); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -96, 14, $noreg, debug-location !344 :: (load (s32) from %stack.23); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, renamable $r0, 185, 14, $noreg, $noreg, debug-location !447; batchtest/cosf/wcclibm.c:247:28
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBri killed renamable $r1, 127, 14, $noreg, $noreg, debug-location !448; batchtest/cosf/wcclibm.c:247:8
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 96, 14, $noreg :: (store (s32) into %stack.27)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.4, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !449; batchtest/cosf/wcclibm.c:248:13
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 100, 14, $noreg :: (store (s32) into %stack.26)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ORRri renamable $r0, 1065353216, 14, $noreg, $noreg, debug-location !450; batchtest/cosf/wcclibm.c:250:12
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 104, 14, $noreg :: (store (s32) into %stack.25)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.5, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !452; batchtest/cosf/wcclibm.c:251:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.68, 8, killed $cpsr, debug-location !452; batchtest/cosf/wcclibm.c:251:10
# Before:
not available
# After:
not available
## Instruction: B %bb.67, debug-location !452; batchtest/cosf/wcclibm.c:251:10
# Before:
not available
# After:
not available
### Basic Block: 67
## Instruction: $r0 = LDRi12 $sp, 104, 14, $noreg :: (load (s32) from %stack.25)
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 96, 14, $noreg :: (load (s32) from %stack.27)
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 84, 14, $noreg :: (store (s32) into %stack.30)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 88, 14, $noreg :: (store (s32) into %stack.29)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 92, 14, $noreg :: (store (s32) into %stack.28)
# Before:
bot
# After:
not available
## Instruction: B %bb.73, debug-location !453; batchtest/cosf/wcclibm.c:251:26
# Before:
not available
# After:
not available
### Basic Block: 68
## Instruction: $r0 = LDRi12 $sp, 100, 14, $noreg :: (load (s32) from %stack.26)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.6, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !455; batchtest/cosf/wcclibm.c:253:12
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.71, 8, killed $cpsr, debug-location !455; batchtest/cosf/wcclibm.c:253:12
# Before:
not available
# After:
not available
## Instruction: B %bb.69, debug-location !455; batchtest/cosf/wcclibm.c:253:12
# Before:
not available
# After:
not available
### Basic Block: 69
## Instruction: $r0 = LDRi12 $sp, 104, 14, $noreg :: (load (s32) from %stack.25)
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 96, 14, $noreg :: (load (s32) from %stack.27)
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 72, 14, $noreg :: (store (s32) into %stack.33)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 76, 14, $noreg :: (store (s32) into %stack.32)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 80, 14, $noreg :: (store (s32) into %stack.31)
# Before:
bot
# After:
not available
## Instruction: B %bb.72, debug-location !456; batchtest/cosf/wcclibm.c:253:27
# Before:
not available
# After:
not available
### Basic Block: 70
## Instruction: CONSTPOOL_ENTRY 45, %const.42, 4
# Before:
not available
# After:
not available
### Basic Block: 71
## Instruction: $r0 = LDRi12 $sp, 100, 14, $noreg, debug-location !457 :: (load (s32) from %stack.26); batchtest/cosf/wcclibm.c:256:11
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 96, 14, $noreg, debug-location !457 :: (load (s32) from %stack.27); batchtest/cosf/wcclibm.c:256:11
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = nsw ADDri renamable $r1, 1, 14, $noreg, $noreg, debug-location !457; batchtest/cosf/wcclibm.c:256:11
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRri renamable $r0, 1056964608, 14, $noreg, $noreg, debug-location !458; batchtest/cosf/wcclibm.c:257:12
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 72, 14, $noreg :: (store (s32) into %stack.33)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 76, 14, $noreg :: (store (s32) into %stack.32)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 80, 14, $noreg :: (store (s32) into %stack.31)
# Before:
bot
# After:
not available
## Instruction: B %bb.72
# Before:
not available
# After:
not available
### Basic Block: 72
## Instruction: $r2 = LDRi12 $sp, 72, 14, $noreg, debug-location !344 :: (load (s32) from %stack.33); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 76, 14, $noreg, debug-location !344 :: (load (s32) from %stack.32); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 80, 14, $noreg, debug-location !344 :: (load (s32) from %stack.31); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 84, 14, $noreg :: (store (s32) into %stack.30)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 88, 14, $noreg :: (store (s32) into %stack.29)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 92, 14, $noreg :: (store (s32) into %stack.28)
# Before:
bot
# After:
not available
## Instruction: B %bb.73
# Before:
not available
# After:
not available
### Basic Block: 73
## Instruction: $r2 = LDRi12 $sp, 84, 14, $noreg, debug-location !459 :: (load (s32) from %stack.30); batchtest/cosf/wcclibm.c:250:8
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 88, 14, $noreg, debug-location !459 :: (load (s32) from %stack.29); batchtest/cosf/wcclibm.c:250:8
# Before:
bot
# After:
not available
## Instruction: $r12 = LDRi12 $sp, 92, 14, $noreg, debug-location !459 :: (load (s32) from %stack.28); batchtest/cosf/wcclibm.c:250:8
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VMOVSR renamable $r12, 14, $noreg, debug-location !460; batchtest/cosf/wcclibm.c:259:5
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRi12 %const.7, 0, 14, $noreg, debug-location !461 :: (load (s32) from constant-pool); batchtest/cosf/wcclibm.c:262:14
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, renamable $r2, 18, 14, $noreg, $noreg, debug-location !461; batchtest/cosf/wcclibm.c:262:14
# Before:
not available
# After:
not available
## Instruction: renamable $s12 = VLDRS killed renamable $r1, 0, 14, $noreg, debug-location !461 :: (load (s32) from %ir.arrayidx178); batchtest/cosf/wcclibm.c:262:14
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VSUBS renamable $s6, renamable $s12, 14, $noreg, debug-location !462; batchtest/cosf/wcclibm.c:262:12
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VADDS renamable $s12, renamable $s6, 14, $noreg, debug-location !463; batchtest/cosf/wcclibm.c:263:30
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.43, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VDIVS killed renamable $s0, killed renamable $s4, 14, $noreg, debug-location !464; batchtest/cosf/wcclibm.c:263:23
# Before:
not available
# After:
not available
## Instruction: renamable $s8 = VMULS renamable $s2, renamable $s0, 14, $noreg, debug-location !465; batchtest/cosf/wcclibm.c:264:11
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = VMOVRS renamable $s8, 14, $noreg, debug-location !466; batchtest/cosf/wcclibm.c:266:5
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.8, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = ANDrr killed renamable $r3, renamable $r1, 14, $noreg, $noreg, debug-location !467; batchtest/cosf/wcclibm.c:267:5
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VMOVSR killed renamable $r3, 14, $noreg, debug-location !467; batchtest/cosf/wcclibm.c:267:5
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVi 536870912, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = ORRrsi killed renamable $r3, killed renamable $r12, 9, 14, $noreg, $noreg, debug-location !468; batchtest/cosf/wcclibm.c:269:5
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = ADDrsi killed renamable $r3, renamable $r2, 170, 14, $noreg, $noreg, debug-location !468; batchtest/cosf/wcclibm.c:269:5
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = ADDri killed renamable $r3, 262144, 14, $noreg, $noreg, debug-location !468; batchtest/cosf/wcclibm.c:269:5
# Before:
not available
# After:
not available
## Instruction: renamable $s10 = VMOVSR killed renamable $r3, 14, $noreg, debug-location !468; batchtest/cosf/wcclibm.c:269:5
# Before:
not available
# After:
not available
## Instruction: renamable $s12 = VSUBS renamable $s10, killed renamable $s12, 14, $noreg, debug-location !470; batchtest/cosf/wcclibm.c:270:22
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VSUBS killed renamable $s6, killed renamable $s12, 14, $noreg, debug-location !471; batchtest/cosf/wcclibm.c:270:14
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VMLSS renamable $s2(tied-def 0), renamable $s4, killed renamable $s10, 14, $noreg, debug-location !472; batchtest/cosf/wcclibm.c:271:21
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VMLSS renamable $s2(tied-def 0), renamable $s4, killed renamable $s6, 14, $noreg, debug-location !473; batchtest/cosf/wcclibm.c:271:35
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VMULS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !474; batchtest/cosf/wcclibm.c:271:13
# Before:
not available
# After:
not available
## Instruction: renamable $s10 = VMULS renamable $s8, renamable $s8, 14, $noreg, debug-location !475; batchtest/cosf/wcclibm.c:273:12
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMULS renamable $s10, renamable $s10, 14, $noreg, debug-location !476; batchtest/cosf/wcclibm.c:274:12
# Before:
not available
# After:
not available
## Instruction: renamable $s12 = VLDRS %const.54, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.55, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VMLAS renamable $s6(tied-def 0), renamable $s10, killed renamable $s12, 14, $noreg, debug-location !477; batchtest/cosf/wcclibm.c:276:62
# Before:
not available
# After:
not available
## Instruction: renamable $s12 = VLDRS %const.56, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s12 = VMLAS renamable $s12(tied-def 0), renamable $s10, killed renamable $s6, 14, $noreg, debug-location !478; batchtest/cosf/wcclibm.c:275:80
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.48, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VMLAS renamable $s6(tied-def 0), renamable $s10, killed renamable $s12, 14, $noreg, debug-location !479; batchtest/cosf/wcclibm.c:275:58
# Before:
not available
# After:
not available
## Instruction: renamable $s12 = VLDRS %const.57, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s12 = VMLAS renamable $s12(tied-def 0), renamable $s10, killed renamable $s6, 14, $noreg, debug-location !480; batchtest/cosf/wcclibm.c:274:56
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.58, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VMLAS renamable $s6(tied-def 0), killed renamable $s10, killed renamable $s12, 14, $noreg, debug-location !481; batchtest/cosf/wcclibm.c:274:34
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMULS killed renamable $s0, killed renamable $s6, 14, $noreg, debug-location !482; batchtest/cosf/wcclibm.c:274:17
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VADDS renamable $s8, renamable $s4, 14, $noreg, debug-location !483; batchtest/cosf/wcclibm.c:277:22
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMLAS renamable $s0(tied-def 0), renamable $s2, killed renamable $s6, 14, $noreg, debug-location !484; batchtest/cosf/wcclibm.c:277:7
# Before:
not available
# After:
not available
## Instruction: renamable $s12 = VMULS renamable $s4, renamable $s4, 14, $noreg, debug-location !485; batchtest/cosf/wcclibm.c:278:15
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.59, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VADDS renamable $s12, killed renamable $s6, 14, $noreg, debug-location !486; batchtest/cosf/wcclibm.c:279:25
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VADDS killed renamable $s6, renamable $s0, 14, $noreg, debug-location !487; batchtest/cosf/wcclibm.c:279:30
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = VMOVRS killed renamable $s6, 14, $noreg, debug-location !488; batchtest/cosf/wcclibm.c:280:5
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = ANDrr killed renamable $r3, renamable $r1, 14, $noreg, $noreg, debug-location !489; batchtest/cosf/wcclibm.c:281:5
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VMOVSR killed renamable $r3, 14, $noreg, debug-location !489; batchtest/cosf/wcclibm.c:281:5
# Before:
not available
# After:
not available
## Instruction: renamable $s10 = VLDRS %const.60, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s10 = VADDS renamable $s6, killed renamable $s10, 14, $noreg, debug-location !490; batchtest/cosf/wcclibm.c:282:23
# Before:
not available
# After:
not available
## Instruction: renamable $s10 = VSUBS killed renamable $s10, killed renamable $s12, 14, $noreg, debug-location !491; batchtest/cosf/wcclibm.c:282:41
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VSUBS killed renamable $s0, killed renamable $s10, 14, $noreg, debug-location !492; batchtest/cosf/wcclibm.c:282:13
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VMULS killed renamable $s4, renamable $s6, 14, $noreg, debug-location !493; batchtest/cosf/wcclibm.c:284:13
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMULS killed renamable $s0, killed renamable $s8, 14, $noreg, debug-location !494; batchtest/cosf/wcclibm.c:285:25
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMLAS renamable $s0(tied-def 0), killed renamable $s2, killed renamable $s6, 14, $noreg, debug-location !495; batchtest/cosf/wcclibm.c:285:19
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VADDS renamable $s4, renamable $s0, 14, $noreg, debug-location !496; batchtest/cosf/wcclibm.c:287:13
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = VMOVRS killed renamable $s2, 14, $noreg, debug-location !497; batchtest/cosf/wcclibm.c:288:5
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = ANDrr killed renamable $r3, renamable $r1, 14, $noreg, $noreg, debug-location !498; batchtest/cosf/wcclibm.c:289:5
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VMOVSR killed renamable $r3, 14, $noreg, debug-location !498; batchtest/cosf/wcclibm.c:289:5
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VSUBS renamable $s2, killed renamable $s4, 14, $noreg, debug-location !499; batchtest/cosf/wcclibm.c:290:21
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VSUBS killed renamable $s0, killed renamable $s4, 14, $noreg, debug-location !500; batchtest/cosf/wcclibm.c:290:13
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.61, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VMULS renamable $s2, killed renamable $s4, 14, $noreg, debug-location !501; batchtest/cosf/wcclibm.c:291:26
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.62, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS killed renamable $s0, killed renamable $s4, 14, $noreg, debug-location !502; batchtest/cosf/wcclibm.c:292:38
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.63, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMLAS renamable $s0(tied-def 0), killed renamable $s2, killed renamable $s4, 14, $noreg, debug-location !503; batchtest/cosf/wcclibm.c:292:32
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRi12 %const.20, 0, 14, $noreg, debug-location !504 :: (load (s32) from constant-pool); batchtest/cosf/wcclibm.c:292:55
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = ADDrsi killed renamable $r3, renamable $r2, 18, 14, $noreg, $noreg, debug-location !504; batchtest/cosf/wcclibm.c:292:55
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VLDRS killed renamable $r3, 0, 14, $noreg, debug-location !504 :: (load (s32) from %ir.arrayidx225); batchtest/cosf/wcclibm.c:292:55
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VADDS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !505; batchtest/cosf/wcclibm.c:292:53
# Before:
not available
# After:
not available
## Instruction: $s0 = VMOVSR killed $r0, 14, $noreg, debug-location !506; batchtest/cosf/wcclibm.c:294:9
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VSITOS killed renamable $s0, 14, $noreg, debug-location !506; batchtest/cosf/wcclibm.c:294:9
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VADDS renamable $s6, renamable $s2, 14, $noreg, debug-location !507; batchtest/cosf/wcclibm.c:295:20
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = LDRi12 %const.21, 0, 14, $noreg, debug-location !508 :: (load (s32) from constant-pool); batchtest/cosf/wcclibm.c:295:30
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, killed renamable $r2, 18, 14, $noreg, $noreg, debug-location !508; batchtest/cosf/wcclibm.c:295:30
# Before:
not available
# After:
not available
## Instruction: renamable $s8 = VLDRS killed renamable $r0, 0, 14, $noreg, debug-location !508 :: (load (s32) from %ir.arrayidx239); batchtest/cosf/wcclibm.c:295:30
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VADDS killed renamable $s0, renamable $s8, 14, $noreg, debug-location !509; batchtest/cosf/wcclibm.c:295:28
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VADDS killed renamable $s0, renamable $s4, 14, $noreg, debug-location !510; batchtest/cosf/wcclibm.c:295:52
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = VMOVRS killed renamable $s0, 14, $noreg, debug-location !511; batchtest/cosf/wcclibm.c:296:5
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !512; batchtest/cosf/wcclibm.c:297:5
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMOVSR killed renamable $r0, 14, $noreg, debug-location !512; batchtest/cosf/wcclibm.c:297:5
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VSUBS renamable $s0, killed renamable $s4, 14, $noreg, debug-location !513; batchtest/cosf/wcclibm.c:298:25
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VSUBS killed renamable $s4, killed renamable $s8, 14, $noreg, debug-location !515; batchtest/cosf/wcclibm.c:298:31
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VSUBS killed renamable $s4, killed renamable $s6, 14, $noreg, debug-location !516; batchtest/cosf/wcclibm.c:298:55
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VSUBS killed renamable $s2, killed renamable $s4, 14, $noreg, debug-location !517; batchtest/cosf/wcclibm.c:298:14
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s2, $r11, 279, 14, $noreg :: (store (s32) into %stack.22)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 278, 14, $noreg :: (store (s32) into %stack.21)
# Before:
bot
# After:
not available
## Instruction: B %bb.74
# Before:
not available
# After:
not available
### Basic Block: 74
## Instruction: $r1 = LDRi12 $r11, -52, 14, $noreg, debug-location !344 :: (load (s32) from %stack.12); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $r11, -16, 14, $noreg, debug-location !344 :: (load (s32) from %stack.3); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $r11, 279, 14, $noreg, debug-location !344 :: (load (s32) from %stack.22); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s2 = VLDRS $r11, 278, 14, $noreg, debug-location !344 :: (load (s32) from %stack.21); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s2, $sp, 15, 14, $noreg :: (store (s32) into %stack.36)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 16, 14, $noreg :: (store (s32) into %stack.35)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MVNi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw ADDrsi killed renamable $r0, renamable $r2, 251, 14, $noreg, $noreg, debug-location !519; batchtest/cosf/wcclibm.c:302:38
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nsw SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !520; batchtest/cosf/wcclibm.c:302:55
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !521; batchtest/cosf/wcclibm.c:302:44
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !523; batchtest/cosf/wcclibm.c:302:8
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 17, 14, $noreg :: (store (s32) into %stack.34)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.76, 1, killed $cpsr, debug-location !523; batchtest/cosf/wcclibm.c:302:8
# Before:
not available
# After:
not available
## Instruction: B %bb.75, debug-location !523; batchtest/cosf/wcclibm.c:302:8
# Before:
not available
# After:
not available
### Basic Block: 75
## Instruction: renamable $s0 = VLDRS %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 17, 14, $noreg :: (store (s32) into %stack.34)
# Before:
bot
# After:
not available
## Instruction: B %bb.76, debug-location !524; batchtest/cosf/wcclibm.c:303:5
# Before:
not available
# After:
not available
### Basic Block: 76
## Instruction: $s2 = VLDRS $sp, 15, 14, $noreg, debug-location !344 :: (load (s32) from %stack.36); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $sp, 16, 14, $noreg, debug-location !344 :: (load (s32) from %stack.35); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s8 = VLDRS $r11, 262, 14, $noreg, debug-location !344 :: (load (s32) from %stack.5); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s4 = VLDRS $sp, 17, 14, $noreg, debug-location !344 :: (load (s32) from %stack.34); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s4, $sp, 10, 14, $noreg :: (store (s32) into %stack.41)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = VMOVRS renamable $s8, 14, $noreg, debug-location !525; batchtest/cosf/wcclibm.c:306:3
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.8, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !526; batchtest/cosf/wcclibm.c:307:3
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VMOVSR killed renamable $r0, 14, $noreg, debug-location !526; batchtest/cosf/wcclibm.c:307:3
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VSUBS renamable $s8, renamable $s4, 14, $noreg, debug-location !527; batchtest/cosf/wcclibm.c:308:13
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMULS renamable $s0, renamable $s8, 14, $noreg, debug-location !528; batchtest/cosf/wcclibm.c:308:29
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMLAS renamable $s0(tied-def 0), killed renamable $s6, renamable $s2, 14, $noreg, debug-location !529; batchtest/cosf/wcclibm.c:308:25
# Before:
not available
# After:
not available
## Instruction: VSTRS $s0, $sp, 11, 14, $noreg :: (store (s32) into %stack.40)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VMULS renamable $s2, killed renamable $s4, 14, $noreg, debug-location !530; batchtest/cosf/wcclibm.c:309:12
# Before:
not available
# After:
not available
## Instruction: VSTRS $s2, $sp, 12, 14, $noreg :: (store (s32) into %stack.39)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VADDS renamable $s0, renamable $s2, 14, $noreg, debug-location !531; batchtest/cosf/wcclibm.c:310:11
# Before:
not available
# After:
not available
## Instruction: VSTRS $s0, $sp, 13, 14, $noreg :: (store (s32) into %stack.38)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = VMOVRS renamable $s0, 14, $noreg, debug-location !532; batchtest/cosf/wcclibm.c:311:3
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 56, 14, $noreg :: (store (s32) into %stack.37)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1124073472, 14, $noreg, implicit-def $cpsr, debug-location !534; batchtest/cosf/wcclibm.c:312:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.78, 13, killed $cpsr, debug-location !534; batchtest/cosf/wcclibm.c:312:8
# Before:
not available
# After:
not available
## Instruction: B %bb.77, debug-location !534; batchtest/cosf/wcclibm.c:312:8
# Before:
not available
# After:
not available
### Basic Block: 77
## Instruction: $s0 = VLDRS $sp, 10, 14, $noreg :: (load (s32) from %stack.41)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.40, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS renamable $s0, renamable $s2, 14, $noreg, debug-location !535; batchtest/cosf/wcclibm.c:313:14
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMULS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !536; batchtest/cosf/wcclibm.c:313:31
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !537; batchtest/cosf/wcclibm.c:313:5
# Before:
not available
# After:
not available
### Basic Block: 78
## Instruction: $r0 = LDRi12 $sp, 56, 14, $noreg, debug-location !539 :: (load (s32) from %stack.37); batchtest/cosf/wcclibm.c:315:10
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1124073472, 14, $noreg, implicit-def $cpsr, debug-location !539; batchtest/cosf/wcclibm.c:315:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.83, 1, killed $cpsr, debug-location !539; batchtest/cosf/wcclibm.c:315:10
# Before:
not available
# After:
not available
## Instruction: B %bb.80, debug-location !539; batchtest/cosf/wcclibm.c:315:10
# Before:
not available
# After:
not available
### Basic Block: 79
## Instruction: CONSTPOOL_ENTRY 46, %const.41, 8
# Before:
not available
# After:
not available
### Basic Block: 80
## Instruction: $s2 = VLDRS $sp, 13, 14, $noreg :: (load (s32) from %stack.38)
# Before:
bot
# After:
not available
## Instruction: $s4 = VLDRS $sp, 12, 14, $noreg :: (load (s32) from %stack.39)
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $sp, 11, 14, $noreg :: (load (s32) from %stack.40)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.30, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VADDS renamable $s0, killed renamable $s6, 14, $noreg, debug-location !540; batchtest/cosf/wcclibm.c:316:16
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VSUBS renamable $s2, renamable $s4, 14, $noreg, debug-location !541; batchtest/cosf/wcclibm.c:316:36
# Before:
not available
# After:
not available
## Instruction: VCMPS killed renamable $s0, killed renamable $s2, 14, $noreg, implicit-def $fpscr_nzcv, debug-location !543; batchtest/cosf/wcclibm.c:316:12
# Before:
not available
# After:
not available
## Instruction: FMSTAT 14, $noreg, implicit-def $cpsr, implicit killed $fpscr_nzcv, debug-location !543; batchtest/cosf/wcclibm.c:316:12
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.82, 13, killed $cpsr, debug-location !543; batchtest/cosf/wcclibm.c:316:12
# Before:
not available
# After:
not available
## Instruction: B %bb.81, debug-location !543; batchtest/cosf/wcclibm.c:316:12
# Before:
not available
# After:
not available
### Basic Block: 81
## Instruction: $s0 = VLDRS $sp, 10, 14, $noreg :: (load (s32) from %stack.41)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.40, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS renamable $s0, renamable $s2, 14, $noreg, debug-location !544; batchtest/cosf/wcclibm.c:316:53
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMULS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !545; batchtest/cosf/wcclibm.c:316:70
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !546; batchtest/cosf/wcclibm.c:316:44
# Before:
not available
# After:
not available
### Basic Block: 82
## Instruction: B %bb.98, debug-location !547; batchtest/cosf/wcclibm.c:318:5
# Before:
not available
# After:
not available
### Basic Block: 83
## Instruction: $r0 = LDRi12 $sp, 56, 14, $noreg, debug-location !548 :: (load (s32) from %stack.37); batchtest/cosf/wcclibm.c:319:16
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = BICri renamable $r0, -2147483648, 14, $noreg, $noreg, debug-location !548; batchtest/cosf/wcclibm.c:319:16
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.28, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !550; batchtest/cosf/wcclibm.c:319:12
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.91, 3, killed $cpsr, debug-location !550; batchtest/cosf/wcclibm.c:319:12
# Before:
not available
# After:
not available
## Instruction: B %bb.87, debug-location !550; batchtest/cosf/wcclibm.c:319:12
# Before:
not available
# After:
not available
### Basic Block: 84
## Instruction: CONSTPOOL_ENTRY 47, %const.23, 4
# Before:
not available
# After:
not available
### Basic Block: 85
## Instruction: CONSTPOOL_ENTRY 48, %const.12, 4
# Before:
not available
# After:
not available
### Basic Block: 86
## Instruction: CONSTPOOL_ENTRY 49, %const.24, 4
# Before:
not available
# After:
not available
### Basic Block: 87
## Instruction: $s0 = VLDRS $sp, 10, 14, $noreg :: (load (s32) from %stack.41)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.29, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS renamable $s0, renamable $s2, 14, $noreg, debug-location !551; batchtest/cosf/wcclibm.c:320:18
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMULS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !552; batchtest/cosf/wcclibm.c:320:35
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !553; batchtest/cosf/wcclibm.c:320:9
# Before:
not available
# After:
not available
### Basic Block: 88
## Instruction: CONSTPOOL_ENTRY 50, %const.25, 4
# Before:
not available
# After:
not available
### Basic Block: 89
## Instruction: CONSTPOOL_ENTRY 51, %const.26, 4
# Before:
not available
# After:
not available
### Basic Block: 90
## Instruction: CONSTPOOL_ENTRY 52, %const.27, 4
# Before:
not available
# After:
not available
### Basic Block: 91
## Instruction: $r0 = LDRi12 $sp, 56, 14, $noreg :: (load (s32) from %stack.37)
# Before:
bot
# After:
not available
## Instruction: $r1 = MOVi 1441792, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = ORRri $r1, 3271557120, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !555; batchtest/cosf/wcclibm.c:322:14
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.96, 1, killed $cpsr, debug-location !555; batchtest/cosf/wcclibm.c:322:14
# Before:
not available
# After:
not available
## Instruction: B %bb.92, debug-location !555; batchtest/cosf/wcclibm.c:322:14
# Before:
not available
# After:
not available
### Basic Block: 92
## Instruction: $s0 = VLDRS $sp, 11, 14, $noreg, debug-location !556 :: (load (s32) from %stack.40); batchtest/cosf/wcclibm.c:323:25
# Before:
bot
# After:
not available
## Instruction: $s2 = VLDRS $sp, 13, 14, $noreg, debug-location !556 :: (load (s32) from %stack.38); batchtest/cosf/wcclibm.c:323:25
# Before:
bot
# After:
not available
## Instruction: $s4 = VLDRS $sp, 12, 14, $noreg, debug-location !556 :: (load (s32) from %stack.39); batchtest/cosf/wcclibm.c:323:25
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VSUBS renamable $s2, renamable $s4, 14, $noreg, debug-location !556; batchtest/cosf/wcclibm.c:323:25
# Before:
not available
# After:
not available
## Instruction: VCMPS renamable $s0, killed renamable $s2, 14, $noreg, implicit-def $fpscr_nzcv, debug-location !558; batchtest/cosf/wcclibm.c:323:16
# Before:
not available
# After:
not available
## Instruction: FMSTAT 14, $noreg, implicit-def $cpsr, implicit killed $fpscr_nzcv, debug-location !558; batchtest/cosf/wcclibm.c:323:16
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.95, 8, killed $cpsr, debug-location !558; batchtest/cosf/wcclibm.c:323:16
# Before:
not available
# After:
not available
## Instruction: B %bb.93, debug-location !558; batchtest/cosf/wcclibm.c:323:16
# Before:
not available
# After:
not available
### Basic Block: 93
## Instruction: $s0 = VLDRS $sp, 10, 14, $noreg :: (load (s32) from %stack.41)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.29, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS renamable $s0, renamable $s2, 14, $noreg, debug-location !559; batchtest/cosf/wcclibm.c:323:42
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMULS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !560; batchtest/cosf/wcclibm.c:323:59
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !561; batchtest/cosf/wcclibm.c:323:33
# Before:
not available
# After:
not available
### Basic Block: 94
## Instruction: CONSTPOOL_ENTRY 53, %const.3, 4
# Before:
not available
# After:
not available
### Basic Block: 95
## Instruction: B %bb.96, debug-location !562; batchtest/cosf/wcclibm.c:325:9
# Before:
not available
# After:
not available
### Basic Block: 96
## Instruction: B %bb.97
# Before:
not available
# After:
not available
### Basic Block: 97
## Instruction: B %bb.98
# Before:
not available
# After:
not available
### Basic Block: 98
## Instruction: B %bb.99
# Before:
not available
# After:
not available
### Basic Block: 99
## Instruction: $s0 = VLDRS $sp, 12, 14, $noreg, debug-location !563 :: (load (s32) from %stack.39); batchtest/cosf/wcclibm.c:329:9
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 56, 14, $noreg, debug-location !563 :: (load (s32) from %stack.37); batchtest/cosf/wcclibm.c:329:9
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = BICri renamable $r0, -2147483648, 14, $noreg, $noreg, debug-location !563; batchtest/cosf/wcclibm.c:329:9
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 28, 14, $noreg :: (store (s32) into %stack.44)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPri renamable $r1, 1056964608, 14, $noreg, implicit-def $cpsr, debug-location !565; batchtest/cosf/wcclibm.c:332:8
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 8, 14, $noreg :: (store (s32) into %stack.43)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 36, 14, $noreg :: (store (s32) into %stack.42)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.109, 9, killed $cpsr, debug-location !565; batchtest/cosf/wcclibm.c:332:8
# Before:
not available
# After:
not available
## Instruction: B %bb.100, debug-location !565; batchtest/cosf/wcclibm.c:332:8
# Before:
not available
# After:
not available
### Basic Block: 100
## Instruction: $r1 = LDRi12 $sp, 56, 14, $noreg :: (load (s32) from %stack.37)
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 28, 14, $noreg :: (load (s32) from %stack.44)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MVNi 125, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = nsw ADDrsi killed renamable $r0, renamable $r2, 187, 14, $noreg, $noreg, debug-location !567; batchtest/cosf/wcclibm.c:333:33
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 8388608, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw ADDrsr renamable $r1, killed renamable $r0, killed renamable $r2, 3, 14, $noreg, $noreg, debug-location !569; batchtest/cosf/wcclibm.c:333:11
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVi 255, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ANDrsi killed renamable $r2, renamable $r0, 187, 14, $noreg, $noreg, debug-location !570; batchtest/cosf/wcclibm.c:334:30
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = nsw SUBri renamable $r2, 127, 14, $noreg, $noreg, debug-location !571; batchtest/cosf/wcclibm.c:334:38
# Before:
not available
# After:
not available
## Instruction: $r3 = MOVi 1065353216, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r3 = ORRri $r3, 3221225472, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = ANDrsr renamable $r0, killed renamable $r3, killed renamable $r12, 1, 14, $noreg, $noreg, debug-location !572; batchtest/cosf/wcclibm.c:335:5
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMOVSR killed renamable $r3, 14, $noreg, debug-location !572; batchtest/cosf/wcclibm.c:335:5
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 4, 14, $noreg :: (store (s32) into %stack.47)
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = LDRcp %const.4, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r3, 14, $noreg, $noreg, debug-location !573; batchtest/cosf/wcclibm.c:336:15
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRri killed renamable $r0, 8388608, 14, $noreg, $noreg, debug-location !574; batchtest/cosf/wcclibm.c:336:30
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = nsw RSBri killed renamable $r2, 150, 14, $noreg, $noreg, debug-location !575; batchtest/cosf/wcclibm.c:336:53
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r2, 3, 14, $noreg, $noreg, debug-location !576; batchtest/cosf/wcclibm.c:336:45
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 20, 14, $noreg :: (store (s32) into %stack.46)
# Before:
bot
# After:
not available
## Instruction: CMNri renamable $r1, 1, 14, $noreg, implicit-def $cpsr, debug-location !578; batchtest/cosf/wcclibm.c:337:10
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 24, 14, $noreg :: (store (s32) into %stack.45)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.108, 12, killed $cpsr, debug-location !578; batchtest/cosf/wcclibm.c:337:10
# Before:
not available
# After:
not available
## Instruction: B %bb.107, debug-location !578; batchtest/cosf/wcclibm.c:337:10
# Before:
not available
# After:
not available
### Basic Block: 101
## Instruction: CONSTPOOL_ENTRY 54, %const.9, 4
# Before:
not available
# After:
not available
### Basic Block: 102
## Instruction: CONSTPOOL_ENTRY 55, %const.10, 4
# Before:
not available
# After:
not available
### Basic Block: 103
## Instruction: CONSTPOOL_ENTRY 56, %const.11, 4
# Before:
not available
# After:
not available
### Basic Block: 104
## Instruction: CONSTPOOL_ENTRY 57, %const.13, 4
# Before:
not available
# After:
not available
### Basic Block: 105
## Instruction: CONSTPOOL_ENTRY 58, %const.14, 4
# Before:
not available
# After:
not available
### Basic Block: 106
## Instruction: CONSTPOOL_ENTRY 59, %const.15, 4
# Before:
not available
# After:
not available
### Basic Block: 107
## Instruction: $r0 = LDRi12 $sp, 20, 14, $noreg, debug-location !579 :: (load (s32) from %stack.46); batchtest/cosf/wcclibm.c:337:22
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nsw RSBri renamable $r0, 0, 14, $noreg, $noreg, debug-location !579; batchtest/cosf/wcclibm.c:337:22
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 24, 14, $noreg :: (store (s32) into %stack.45)
# Before:
bot
# After:
not available
## Instruction: B %bb.108, debug-location !580; batchtest/cosf/wcclibm.c:337:18
# Before:
not available
# After:
not available
### Basic Block: 108
## Instruction: $s0 = VLDRS $sp, 12, 14, $noreg, debug-location !344 :: (load (s32) from %stack.39); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s2 = VLDRS $sp, 4, 14, $noreg, debug-location !344 :: (load (s32) from %stack.47); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 24, 14, $noreg, debug-location !344 :: (load (s32) from %stack.45); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS renamable $s0, renamable $s2, 14, $noreg, debug-location !581; batchtest/cosf/wcclibm.c:338:9
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 8, 14, $noreg :: (store (s32) into %stack.43)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 36, 14, $noreg :: (store (s32) into %stack.42)
# Before:
bot
# After:
not available
## Instruction: B %bb.109, debug-location !582; batchtest/cosf/wcclibm.c:339:3
# Before:
not available
# After:
not available
### Basic Block: 109
## Instruction: $s0 = VLDRS $sp, 11, 14, $noreg, debug-location !344 :: (load (s32) from %stack.40); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s6 = VLDRS $sp, 8, 14, $noreg, debug-location !344 :: (load (s32) from %stack.43); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 36, 14, $noreg, debug-location !344 :: (load (s32) from %stack.42); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.50)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VADDS renamable $s0, renamable $s6, 14, $noreg, debug-location !583; batchtest/cosf/wcclibm.c:340:11
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = VMOVRS killed renamable $s2, 14, $noreg, debug-location !584; batchtest/cosf/wcclibm.c:341:3
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.8, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !585; batchtest/cosf/wcclibm.c:342:3
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VMOVSR killed renamable $r0, 14, $noreg, debug-location !585; batchtest/cosf/wcclibm.c:342:3
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.31, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMULS renamable $s2, killed renamable $s4, 14, $noreg, debug-location !586; batchtest/cosf/wcclibm.c:343:9
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VSUBS renamable $s2, killed renamable $s6, 14, $noreg, debug-location !587; batchtest/cosf/wcclibm.c:344:19
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VSUBS renamable $s0, killed renamable $s6, 14, $noreg, debug-location !588; batchtest/cosf/wcclibm.c:344:13
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.32, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VMULS killed renamable $s2, killed renamable $s6, 14, $noreg, debug-location !589; batchtest/cosf/wcclibm.c:344:49
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.33, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VMLAS renamable $s2(tied-def 0), killed renamable $s0, killed renamable $s6, 14, $noreg, debug-location !590; batchtest/cosf/wcclibm.c:344:45
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VADDS renamable $s4, renamable $s2, 14, $noreg, debug-location !591; batchtest/cosf/wcclibm.c:345:9
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VSUBS renamable $s0, killed renamable $s4, 14, $noreg, debug-location !592; batchtest/cosf/wcclibm.c:346:15
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VSUBS killed renamable $s2, killed renamable $s4, 14, $noreg, debug-location !593; batchtest/cosf/wcclibm.c:346:9
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VMULS renamable $s0, renamable $s0, 14, $noreg, debug-location !594; batchtest/cosf/wcclibm.c:347:10
# Before:
not available
# After:
not available
## Instruction: renamable $s8 = VLDRS %const.34, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.35, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VMLAS renamable $s6(tied-def 0), renamable $s2, killed renamable $s8, 14, $noreg, debug-location !595; batchtest/cosf/wcclibm.c:349:55
# Before:
not available
# After:
not available
## Instruction: renamable $s8 = VLDRS %const.36, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s8 = VMLAS renamable $s8(tied-def 0), renamable $s2, killed renamable $s6, 14, $noreg, debug-location !596; batchtest/cosf/wcclibm.c:348:74
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.37, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VMLAS renamable $s6(tied-def 0), renamable $s2, killed renamable $s8, 14, $noreg, debug-location !597; batchtest/cosf/wcclibm.c:348:53
# Before:
not available
# After:
not available
## Instruction: renamable $s8 = VLDRS %const.38, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s8 = VMLAS renamable $s8(tied-def 0), renamable $s2, killed renamable $s6, 14, $noreg, debug-location !598; batchtest/cosf/wcclibm.c:348:32
# Before:
not available
# After:
not available
## Instruction: $s6 = VMOVS $s0, 14, $noreg, debug-location !599; batchtest/cosf/wcclibm.c:348:11
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VMLSS renamable $s6(tied-def 0), killed renamable $s2, killed renamable $s8, 14, $noreg, debug-location !599; batchtest/cosf/wcclibm.c:348:11
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VMULS renamable $s0, renamable $s6, 14, $noreg, debug-location !600; batchtest/cosf/wcclibm.c:350:12
# Before:
not available
# After:
not available
## Instruction: renamable $s8 = VLDRS %const.39, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VADDS killed renamable $s6, killed renamable $s8, 14, $noreg, debug-location !601; batchtest/cosf/wcclibm.c:350:26
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VDIVS killed renamable $s2, killed renamable $s6, 14, $noreg, debug-location !602; batchtest/cosf/wcclibm.c:350:19
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s0, renamable $s4, 14, $noreg, debug-location !603; batchtest/cosf/wcclibm.c:350:50
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VSUBS killed renamable $s2, killed renamable $s4, 14, $noreg, debug-location !604; batchtest/cosf/wcclibm.c:350:44
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VSUBS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !605; batchtest/cosf/wcclibm.c:351:22
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VADDS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !605; batchtest/cosf/wcclibm.c:351:22
# Before:
not available
# After:
not available
## Instruction: VSTRS $s0, $sp, 2, 14, $noreg :: (store (s32) into %stack.49)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = VMOVRS renamable $s0, 14, $noreg, debug-location !606; batchtest/cosf/wcclibm.c:352:3
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw ADDrsi killed renamable $r0, renamable $r1, 186, 14, $noreg, $noreg, debug-location !608; batchtest/cosf/wcclibm.c:353:5
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 12, 14, $noreg :: (store (s32) into %stack.48)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 8388608, 14, $noreg, implicit-def $cpsr, debug-location !610; batchtest/cosf/wcclibm.c:354:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.114, 10, killed $cpsr, debug-location !610; batchtest/cosf/wcclibm.c:354:8
# Before:
not available
# After:
not available
## Instruction: B %bb.111, debug-location !610; batchtest/cosf/wcclibm.c:354:8
# Before:
not available
# After:
not available
### Basic Block: 110
## Instruction: CONSTPOOL_ENTRY 60, %const.16, 4
# Before:
not available
# After:
not available
### Basic Block: 111
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !611 :: (load (s32) from %stack.50); batchtest/cosf/wcclibm.c:354:31
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $sp, 2, 14, $noreg, debug-location !611 :: (load (s32) from %stack.49); batchtest/cosf/wcclibm.c:354:31
# Before:
bot
# After:
not available
## Instruction: BL_pred @basicmath___scalbnf, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $s0, implicit killed $r0, implicit-def $sp, implicit-def $s0, debug-location !611; batchtest/cosf/wcclibm.c:354:31
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 0, 14, $noreg :: (store (s32) into %stack.51)
# Before:
bot
# After:
not available
## Instruction: B %bb.115, debug-location !612; batchtest/cosf/wcclibm.c:354:27
# Before:
not available
# After:
not available
### Basic Block: 112
## Instruction: CONSTPOOL_ENTRY 61, %const.17, 4
# Before:
not available
# After:
not available
### Basic Block: 113
## Instruction: CONSTPOOL_ENTRY 62, %const.18, 4
# Before:
not available
# After:
not available
### Basic Block: 114
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !613 :: (load (s32) from %stack.48); batchtest/cosf/wcclibm.c:355:8
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMOVSR renamable $r0, 14, $noreg, debug-location !613; batchtest/cosf/wcclibm.c:355:8
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 0, 14, $noreg :: (store (s32) into %stack.51)
# Before:
bot
# After:
not available
## Instruction: B %bb.115
# Before:
not available
# After:
not available
### Basic Block: 115
## Instruction: $s0 = VLDRS $sp, 10, 14, $noreg, debug-location !344 :: (load (s32) from %stack.41); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s2 = VLDRS $sp, 0, 14, $noreg, debug-location !344 :: (load (s32) from %stack.51); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS renamable $s0, killed renamable $s2, 14, $noreg, debug-location !614; batchtest/cosf/wcclibm.c:356:12
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.116, debug-location !615; batchtest/cosf/wcclibm.c:356:3
# Before:
not available
# After:
not available
### Basic Block: 116
## Instruction: $s0 = VLDRS $r11, 263, 14, $noreg, debug-location !344 :: (load (s32) from %stack.6); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !616; batchtest/cosf/wcclibm.c:357:1
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !616; batchtest/cosf/wcclibm.c:357:1
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $s0, debug-location !616; batchtest/cosf/wcclibm.c:357:1
# Before:
not available
# After:
not available
### Basic Block: 117
## Instruction: CONSTPOOL_ENTRY 63, %const.19, 4
# Before:
not available
# After:
not available
### Basic Block: 118
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 4, %const.4, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 5, %const.5, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 6, %const.6, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 7, %const.7, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 8, %const.8, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 20, %const.20, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 21, %const.21, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 22, %const.22, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 28, %const.28, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 29, %const.29, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 30, %const.30, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 31, %const.31, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 32, %const.32, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 33, %const.33, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 34, %const.34, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 35, %const.35, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 36, %const.36, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 37, %const.37, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 38, %const.38, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 39, %const.39, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 40, %const.40, 4
# Before:
not available
# After:
not available
#### Function: basicmath___ieee754_rem_pio2f
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 80, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -16, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: VSTRS $s0, $r11, 259, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = VMOVRS renamable $s0, 14, $noreg, debug-location !678; batchtest/cosf/wcclibm.c:403:3
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $r11, -8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = BICri renamable $r0, -2147483648, 14, $noreg, $noreg, debug-location !679; batchtest/cosf/wcclibm.c:404:11
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !681; batchtest/cosf/wcclibm.c:405:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 8, killed $cpsr, debug-location !681; batchtest/cosf/wcclibm.c:405:8
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !681; batchtest/cosf/wcclibm.c:405:8
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !682 :: (load (s32) from %stack.3); batchtest/cosf/wcclibm.c:406:12
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $r11, 259, 14, $noreg, debug-location !682 :: (load (s32) from %stack.2); batchtest/cosf/wcclibm.c:406:12
# Before:
bot
# After:
not available
## Instruction: VSTRS renamable $s0, renamable $r1, 0, 14, $noreg, debug-location !682 :: (store (s32) into %ir.y); batchtest/cosf/wcclibm.c:406:12
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 renamable $r0, renamable $r1, 4, 14, $noreg, debug-location !684 :: (store (s32) into %ir.arrayidx1); batchtest/cosf/wcclibm.c:407:12
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -20, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: B %bb.27, debug-location !685; batchtest/cosf/wcclibm.c:408:5
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg :: (load (s32) from %stack.0)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !687; batchtest/cosf/wcclibm.c:410:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.12, 8, killed $cpsr, debug-location !687; batchtest/cosf/wcclibm.c:410:8
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !687; batchtest/cosf/wcclibm.c:410:8
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !689 :: (load (s32) from %stack.1); batchtest/cosf/wcclibm.c:411:10
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !689; batchtest/cosf/wcclibm.c:411:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 11, killed $cpsr, debug-location !689; batchtest/cosf/wcclibm.c:411:10
# Before:
not available
# After:
not available
## Instruction: B %bb.4, debug-location !689; batchtest/cosf/wcclibm.c:411:10
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg :: (load (s32) from %stack.1)
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $r11, 259, 14, $noreg :: (load (s32) from %stack.2)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.5, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VADDS renamable $s0, killed renamable $s2, 14, $noreg, debug-location !690; batchtest/cosf/wcclibm.c:412:13
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 262, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = BICri renamable $r0, -2147483633, 14, $noreg, $noreg, debug-location !691; batchtest/cosf/wcclibm.c:413:17
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.13, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !693; batchtest/cosf/wcclibm.c:413:12
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 0, killed $cpsr, debug-location !693; batchtest/cosf/wcclibm.c:413:12
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !693; batchtest/cosf/wcclibm.c:413:12
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $r0 = LDRi12 $r11, -16, 14, $noreg :: (load (s32) from %stack.3)
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $r11, 262, 14, $noreg :: (load (s32) from %stack.5)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.14, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VADDS renamable $s0, renamable $s2, 14, $noreg, debug-location !694; batchtest/cosf/wcclibm.c:414:20
# Before:
not available
# After:
not available
## Instruction: VSTRS renamable $s4, renamable $r0, 0, 14, $noreg, debug-location !695 :: (store (s32) into %ir.y); batchtest/cosf/wcclibm.c:414:16
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS renamable $s0, killed renamable $s4, 14, $noreg, debug-location !696; batchtest/cosf/wcclibm.c:415:22
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VADDS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !697; batchtest/cosf/wcclibm.c:415:33
# Before:
not available
# After:
not available
## Instruction: VSTRS killed renamable $s0, renamable $r0, 1, 14, $noreg, debug-location !699 :: (store (s32) into %ir.arrayidx14); batchtest/cosf/wcclibm.c:415:16
# Before:
bot
# After:
not available
## Instruction: B %bb.7, debug-location !700; batchtest/cosf/wcclibm.c:416:7
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $r11, -16, 14, $noreg :: (load (s32) from %stack.3)
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $r11, 262, 14, $noreg :: (load (s32) from %stack.5)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.15, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VADDS renamable $s0, killed renamable $s2, 14, $noreg, debug-location !701; batchtest/cosf/wcclibm.c:417:11
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.16, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VADDS renamable $s0, renamable $s2, 14, $noreg, debug-location !702; batchtest/cosf/wcclibm.c:418:20
# Before:
not available
# After:
not available
## Instruction: VSTRS renamable $s4, renamable $r0, 0, 14, $noreg, debug-location !703 :: (store (s32) into %ir.y); batchtest/cosf/wcclibm.c:418:16
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS killed renamable $s0, killed renamable $s4, 14, $noreg, debug-location !704; batchtest/cosf/wcclibm.c:419:22
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VADDS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !705; batchtest/cosf/wcclibm.c:419:33
# Before:
not available
# After:
not available
## Instruction: VSTRS killed renamable $s0, renamable $r0, 1, 14, $noreg, debug-location !707 :: (store (s32) into %ir.arrayidx21); batchtest/cosf/wcclibm.c:419:16
# Before:
bot
# After:
not available
## Instruction: B %bb.7
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -20, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: B %bb.27, debug-location !708; batchtest/cosf/wcclibm.c:421:7
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg :: (load (s32) from %stack.1)
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $r11, 259, 14, $noreg :: (load (s32) from %stack.2)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.12, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VADDS renamable $s0, killed renamable $s2, 14, $noreg, debug-location !709; batchtest/cosf/wcclibm.c:423:13
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 263, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = BICri renamable $r0, -2147483633, 14, $noreg, $noreg, debug-location !710; batchtest/cosf/wcclibm.c:424:17
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.13, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !712; batchtest/cosf/wcclibm.c:424:12
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.10, 0, killed $cpsr, debug-location !712; batchtest/cosf/wcclibm.c:424:12
# Before:
not available
# After:
not available
## Instruction: B %bb.9, debug-location !712; batchtest/cosf/wcclibm.c:424:12
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: $r0 = LDRi12 $r11, -16, 14, $noreg :: (load (s32) from %stack.3)
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $r11, 263, 14, $noreg :: (load (s32) from %stack.6)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.6, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VADDS renamable $s0, renamable $s2, 14, $noreg, debug-location !713; batchtest/cosf/wcclibm.c:425:20
# Before:
not available
# After:
not available
## Instruction: VSTRS renamable $s4, renamable $r0, 0, 14, $noreg, debug-location !714 :: (store (s32) into %ir.y); batchtest/cosf/wcclibm.c:425:16
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS renamable $s0, killed renamable $s4, 14, $noreg, debug-location !715; batchtest/cosf/wcclibm.c:426:22
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VADDS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !716; batchtest/cosf/wcclibm.c:426:33
# Before:
not available
# After:
not available
## Instruction: VSTRS killed renamable $s0, renamable $r0, 1, 14, $noreg, debug-location !718 :: (store (s32) into %ir.arrayidx32); batchtest/cosf/wcclibm.c:426:16
# Before:
bot
# After:
not available
## Instruction: B %bb.11, debug-location !719; batchtest/cosf/wcclibm.c:427:7
# Before:
not available
# After:
not available
### Basic Block: 10
## Instruction: $r0 = LDRi12 $r11, -16, 14, $noreg :: (load (s32) from %stack.3)
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $r11, 263, 14, $noreg :: (load (s32) from %stack.6)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.8, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VADDS renamable $s0, killed renamable $s2, 14, $noreg, debug-location !720; batchtest/cosf/wcclibm.c:428:11
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.9, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VADDS renamable $s0, renamable $s2, 14, $noreg, debug-location !721; batchtest/cosf/wcclibm.c:429:20
# Before:
not available
# After:
not available
## Instruction: VSTRS renamable $s4, renamable $r0, 0, 14, $noreg, debug-location !722 :: (store (s32) into %ir.y); batchtest/cosf/wcclibm.c:429:16
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS killed renamable $s0, killed renamable $s4, 14, $noreg, debug-location !723; batchtest/cosf/wcclibm.c:430:22
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VADDS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !724; batchtest/cosf/wcclibm.c:430:33
# Before:
not available
# After:
not available
## Instruction: VSTRS killed renamable $s0, renamable $r0, 1, 14, $noreg, debug-location !726 :: (store (s32) into %ir.arrayidx40); batchtest/cosf/wcclibm.c:430:16
# Before:
bot
# After:
not available
## Instruction: B %bb.11
# Before:
not available
# After:
not available
### Basic Block: 11
## Instruction: renamable $r0 = MVNi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -20, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: B %bb.27, debug-location !727; batchtest/cosf/wcclibm.c:432:7
# Before:
not available
# After:
not available
### Basic Block: 12
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg :: (load (s32) from %stack.0)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !729; batchtest/cosf/wcclibm.c:435:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.24, 8, killed $cpsr, debug-location !729; batchtest/cosf/wcclibm.c:435:8
# Before:
not available
# After:
not available
## Instruction: B %bb.13, debug-location !729; batchtest/cosf/wcclibm.c:435:8
# Before:
not available
# After:
not available
### Basic Block: 13
## Instruction: $s0 = VLDRS $r11, 259, 14, $noreg, debug-location !730 :: (load (s32) from %stack.2); batchtest/cosf/wcclibm.c:436:10
# Before:
bot
# After:
not available
## Instruction: BL_pred @basicmath___fabsf, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $s0, implicit-def $sp, implicit-def $s0, debug-location !730; batchtest/cosf/wcclibm.c:436:10
# Before:
not available
# After:
not available
## Instruction: $s2 = VMOVS killed $s0, 14, $noreg, debug-location !730; batchtest/cosf/wcclibm.c:436:10
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.4, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMLAS renamable $s0(tied-def 0), renamable $s2, killed renamable $s4, 14, $noreg, debug-location !731; batchtest/cosf/wcclibm.c:437:46
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VTOSIZS killed renamable $s0, 14, $noreg, debug-location !732; batchtest/cosf/wcclibm.c:437:10
# Before:
not available
# After:
not available
## Instruction: $r0 = VMOVRS killed $s0, 14, $noreg, debug-location !732; batchtest/cosf/wcclibm.c:437:10
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg, debug-location !732; batchtest/cosf/wcclibm.c:437:10
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 36, 14, $noreg :: (store (s32) into %stack.10)
# Before:
bot
# After:
not available
## Instruction: $s0 = VMOVSR $r0, 14, $noreg, debug-location !733; batchtest/cosf/wcclibm.c:438:10
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VSITOS killed renamable $s0, 14, $noreg, debug-location !733; batchtest/cosf/wcclibm.c:438:10
# Before:
not available
# After:
not available
## Instruction: VSTRS $s0, $sp, 10, 14, $noreg :: (store (s32) into %stack.9)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.5, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VMLAS renamable $s2(tied-def 0), renamable $s0, killed renamable $s4, 14, $noreg, debug-location !734; batchtest/cosf/wcclibm.c:439:12
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s2, $r11, 265, 14, $noreg :: (store (s32) into %stack.8)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.6, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS renamable $s0, killed renamable $s2, 14, $noreg, debug-location !735; batchtest/cosf/wcclibm.c:440:13
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 264, 14, $noreg :: (store (s32) into %stack.7)
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 31, 14, $noreg, implicit-def $cpsr, debug-location !737; batchtest/cosf/wcclibm.c:441:17
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.16, 12, killed $cpsr, debug-location !737; batchtest/cosf/wcclibm.c:441:17
# Before:
not available
# After:
not available
## Instruction: B %bb.14, debug-location !737; batchtest/cosf/wcclibm.c:441:17
# Before:
not available
# After:
not available
### Basic Block: 14
## Instruction: $r2 = LDRi12 $sp, 36, 14, $noreg :: (load (s32) from %stack.10)
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg :: (load (s32) from %stack.1)
# Before:
bot
# After:
not available
## Instruction: $r1 = MVNi 255, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = SUBri $r1, 2147483648, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !738; batchtest/cosf/wcclibm.c:441:36
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRi12 %const.7, 0, 14, $noreg, debug-location !740 :: (load (s32) from constant-pool); batchtest/cosf/wcclibm.c:441:54
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, renamable $r2, 18, 14, $noreg, $noreg, debug-location !740; batchtest/cosf/wcclibm.c:441:54
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRi12 killed renamable $r1, -4, 14, $noreg, debug-location !740 :: (load (s32) from %ir.arrayidx50); batchtest/cosf/wcclibm.c:441:54
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !742; batchtest/cosf/wcclibm.c:441:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.16, 0, killed $cpsr, debug-location !742; batchtest/cosf/wcclibm.c:441:10
# Before:
not available
# After:
not available
## Instruction: B %bb.15, debug-location !742; batchtest/cosf/wcclibm.c:441:10
# Before:
not available
# After:
not available
### Basic Block: 15
## Instruction: $s0 = VLDRS $r11, 264, 14, $noreg, debug-location !743 :: (load (s32) from %stack.7); batchtest/cosf/wcclibm.c:442:18
# Before:
bot
# After:
not available
## Instruction: $s2 = VLDRS $r11, 265, 14, $noreg, debug-location !743 :: (load (s32) from %stack.8); batchtest/cosf/wcclibm.c:442:18
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !743 :: (load (s32) from %stack.3); batchtest/cosf/wcclibm.c:442:18
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VSUBS renamable $s2, renamable $s0, 14, $noreg, debug-location !743; batchtest/cosf/wcclibm.c:442:18
# Before:
not available
# After:
not available
## Instruction: VSTRS killed renamable $s4, renamable $r0, 0, 14, $noreg, debug-location !744 :: (store (s32) into %ir.y); batchtest/cosf/wcclibm.c:442:14
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s2, $sp, 7, 14, $noreg :: (store (s32) into %stack.12)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 8, 14, $noreg :: (store (s32) into %stack.11)
# Before:
bot
# After:
not available
## Instruction: B %bb.21, debug-location !745; batchtest/cosf/wcclibm.c:443:5
# Before:
not available
# After:
not available
### Basic Block: 16
## Instruction: $s0 = VLDRS $r11, 264, 14, $noreg, debug-location !746 :: (load (s32) from %stack.7); batchtest/cosf/wcclibm.c:445:15
# Before:
bot
# After:
not available
## Instruction: $s2 = VLDRS $r11, 265, 14, $noreg, debug-location !746 :: (load (s32) from %stack.8); batchtest/cosf/wcclibm.c:445:15
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !746 :: (load (s32) from %stack.0); batchtest/cosf/wcclibm.c:445:15
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !746 :: (load (s32) from %stack.3); batchtest/cosf/wcclibm.c:445:15
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = MOVsi renamable $r1, 187, 14, $noreg, $noreg, debug-location !746; batchtest/cosf/wcclibm.c:445:15
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 16, 14, $noreg :: (store (s32) into %stack.15)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VSUBS renamable $s2, renamable $s0, 14, $noreg, debug-location !747; batchtest/cosf/wcclibm.c:446:18
# Before:
not available
# After:
not available
## Instruction: VSTRS renamable $s4, renamable $r0, 0, 14, $noreg, debug-location !748 :: (store (s32) into %ir.y); batchtest/cosf/wcclibm.c:446:14
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = VMOVRS killed renamable $s4, 14, $noreg, debug-location !749; batchtest/cosf/wcclibm.c:447:7
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 255, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrsi killed renamable $r0, killed renamable $r2, 187, 14, $noreg, $noreg, debug-location !751; batchtest/cosf/wcclibm.c:448:32
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw RSBrsi killed renamable $r0, renamable $r1, 187, 14, $noreg, $noreg, debug-location !752; batchtest/cosf/wcclibm.c:448:13
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 9, 14, $noreg, implicit-def $cpsr, debug-location !754; batchtest/cosf/wcclibm.c:449:12
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s2, $sp, 5, 14, $noreg :: (store (s32) into %stack.14)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 6, 14, $noreg :: (store (s32) into %stack.13)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.20, 11, killed $cpsr, debug-location !754; batchtest/cosf/wcclibm.c:449:12
# Before:
not available
# After:
not available
## Instruction: B %bb.17, debug-location !754; batchtest/cosf/wcclibm.c:449:12
# Before:
not available
# After:
not available
### Basic Block: 17
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg :: (load (s32) from %stack.15)
# Before:
bot
# After:
not available
## Instruction: $s4 = VLDRS $sp, 10, 14, $noreg :: (load (s32) from %stack.9)
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $r11, 265, 14, $noreg :: (load (s32) from %stack.8)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.8, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VMULS renamable $s4, killed renamable $s2, 14, $noreg, debug-location !755; batchtest/cosf/wcclibm.c:451:17
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VSUBS renamable $s0, renamable $s6, 14, $noreg, debug-location !756; batchtest/cosf/wcclibm.c:452:16
# Before:
not available
# After:
not available
## Instruction: VSTRS $s2, $sp, 0, 14, $noreg :: (store (s32) into %stack.19)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS renamable $s0, renamable $s2, 14, $noreg, debug-location !757; batchtest/cosf/wcclibm.c:453:45
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VSUBS killed renamable $s0, killed renamable $s6, 14, $noreg, debug-location !758; batchtest/cosf/wcclibm.c:453:51
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.9, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VNMLSS renamable $s0(tied-def 0), renamable $s4, killed renamable $s6, 14, $noreg, debug-location !759; batchtest/cosf/wcclibm.c:453:37
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VSUBS renamable $s2, renamable $s0, 14, $noreg, debug-location !760; batchtest/cosf/wcclibm.c:454:20
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = VMOVRS renamable $s4, 14, $noreg, debug-location !761; batchtest/cosf/wcclibm.c:455:9
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 255, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, killed renamable $r2, 187, 14, $noreg, $noreg, debug-location !763; batchtest/cosf/wcclibm.c:456:34
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBrr renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !764; batchtest/cosf/wcclibm.c:456:15
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 26, 14, $noreg, implicit-def $cpsr, debug-location !766; batchtest/cosf/wcclibm.c:457:14
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s4, $sp, 1, 14, $noreg :: (store (s32) into %stack.18)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s2, $sp, 2, 14, $noreg :: (store (s32) into %stack.17)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 3, 14, $noreg :: (store (s32) into %stack.16)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.19, 11, killed $cpsr, debug-location !766; batchtest/cosf/wcclibm.c:457:14
# Before:
not available
# After:
not available
## Instruction: B %bb.18, debug-location !766; batchtest/cosf/wcclibm.c:457:14
# Before:
not available
# After:
not available
### Basic Block: 18
## Instruction: $s4 = VLDRS $sp, 10, 14, $noreg :: (load (s32) from %stack.9)
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $sp, 0, 14, $noreg :: (load (s32) from %stack.19)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.10, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s6 = VMULS renamable $s4, killed renamable $s2, 14, $noreg, debug-location !767; batchtest/cosf/wcclibm.c:459:19
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VSUBS renamable $s0, renamable $s6, 14, $noreg, debug-location !768; batchtest/cosf/wcclibm.c:460:18
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VSUBS renamable $s0, renamable $s2, 14, $noreg, debug-location !769; batchtest/cosf/wcclibm.c:461:47
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VSUBS killed renamable $s0, killed renamable $s6, 14, $noreg, debug-location !770; batchtest/cosf/wcclibm.c:461:53
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.11, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VNMLSS renamable $s0(tied-def 0), renamable $s4, killed renamable $s6, 14, $noreg, debug-location !771; batchtest/cosf/wcclibm.c:461:39
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VSUBS renamable $s2, renamable $s0, 14, $noreg, debug-location !772; batchtest/cosf/wcclibm.c:462:22
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s4, $sp, 1, 14, $noreg :: (store (s32) into %stack.18)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s2, $sp, 2, 14, $noreg :: (store (s32) into %stack.17)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 3, 14, $noreg :: (store (s32) into %stack.16)
# Before:
bot
# After:
not available
## Instruction: B %bb.19, debug-location !773; batchtest/cosf/wcclibm.c:463:9
# Before:
not available
# After:
not available
### Basic Block: 19
## Instruction: $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !774 :: (load (s32) from %stack.3); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s4 = VLDRS $sp, 1, 14, $noreg, debug-location !774 :: (load (s32) from %stack.18); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s2 = VLDRS $sp, 2, 14, $noreg, debug-location !774 :: (load (s32) from %stack.17); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $sp, 3, 14, $noreg, debug-location !774 :: (load (s32) from %stack.16); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: VSTRS killed renamable $s4, renamable $r0, 0, 14, $noreg, debug-location !774 :: (store (s32) into %ir.y); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s2, $sp, 5, 14, $noreg :: (store (s32) into %stack.14)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 6, 14, $noreg :: (store (s32) into %stack.13)
# Before:
bot
# After:
not available
## Instruction: B %bb.20, debug-location !775; batchtest/cosf/wcclibm.c:464:7
# Before:
not available
# After:
not available
### Basic Block: 20
## Instruction: $s2 = VLDRS $sp, 5, 14, $noreg, debug-location !774 :: (load (s32) from %stack.14); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $sp, 6, 14, $noreg, debug-location !774 :: (load (s32) from %stack.13); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s2, $sp, 7, 14, $noreg :: (store (s32) into %stack.12)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 8, 14, $noreg :: (store (s32) into %stack.11)
# Before:
bot
# After:
not available
## Instruction: B %bb.21
# Before:
not available
# After:
not available
### Basic Block: 21
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !774 :: (load (s32) from %stack.1); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !774 :: (load (s32) from %stack.3); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $sp, 7, 14, $noreg, debug-location !774 :: (load (s32) from %stack.12); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s2 = VLDRS $sp, 8, 14, $noreg, debug-location !774 :: (load (s32) from %stack.11); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VLDRS renamable $r1, 0, 14, $noreg, debug-location !776 :: (load (s32) from %ir.y); batchtest/cosf/wcclibm.c:466:20
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS killed renamable $s0, killed renamable $s4, 14, $noreg, debug-location !777; batchtest/cosf/wcclibm.c:466:18
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VSUBS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !778; batchtest/cosf/wcclibm.c:466:29
# Before:
not available
# After:
not available
## Instruction: VSTRS killed renamable $s0, renamable $r1, 1, 14, $noreg, debug-location !780 :: (store (s32) into %ir.arrayidx101); batchtest/cosf/wcclibm.c:466:12
# Before:
bot
# After:
not available
## Instruction: CMNri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !782; batchtest/cosf/wcclibm.c:467:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.23, 12, killed $cpsr, debug-location !782; batchtest/cosf/wcclibm.c:467:10
# Before:
not available
# After:
not available
## Instruction: B %bb.22, debug-location !782; batchtest/cosf/wcclibm.c:467:10
# Before:
not available
# After:
not available
### Basic Block: 22
## Instruction: $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !783 :: (load (s32) from %stack.10); batchtest/cosf/wcclibm.c:468:17
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !783 :: (load (s32) from %stack.3); batchtest/cosf/wcclibm.c:468:17
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VLDRS renamable $r1, 0, 14, $noreg, debug-location !783 :: (load (s32) from %ir.y); batchtest/cosf/wcclibm.c:468:17
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VNEGS killed renamable $s0, 14, $noreg, debug-location !784; batchtest/cosf/wcclibm.c:468:16
# Before:
not available
# After:
not available
## Instruction: VSTRS killed renamable $s0, renamable $r1, 0, 14, $noreg, debug-location !785 :: (store (s32) into %ir.y); batchtest/cosf/wcclibm.c:468:14
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VLDRS renamable $r1, 1, 14, $noreg, debug-location !786 :: (load (s32) from %ir.arrayidx107); batchtest/cosf/wcclibm.c:469:17
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VNEGS killed renamable $s0, 14, $noreg, debug-location !787; batchtest/cosf/wcclibm.c:469:16
# Before:
not available
# After:
not available
## Instruction: VSTRS killed renamable $s0, renamable $r1, 1, 14, $noreg, debug-location !789 :: (store (s32) into %ir.arrayidx109); batchtest/cosf/wcclibm.c:469:14
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nsw RSBri renamable $r0, 0, 14, $noreg, $noreg, debug-location !790; batchtest/cosf/wcclibm.c:470:14
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -20, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: B %bb.27, debug-location !791; batchtest/cosf/wcclibm.c:470:7
# Before:
not available
# After:
not available
### Basic Block: 23
## Instruction: $r0 = LDRi12 $sp, 36, 14, $noreg :: (load (s32) from %stack.10)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -20, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: B %bb.27, debug-location !792; batchtest/cosf/wcclibm.c:471:14
# Before:
not available
# After:
not available
### Basic Block: 24
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !794 :: (load (s32) from %stack.0); batchtest/cosf/wcclibm.c:476:8
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r0, 187, 14, $noreg, $noreg, debug-location !794; batchtest/cosf/wcclibm.c:476:8
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 255, 14, $noreg, implicit-def $cpsr, debug-location !794; batchtest/cosf/wcclibm.c:476:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.26, 3, killed $cpsr, debug-location !794; batchtest/cosf/wcclibm.c:476:8
# Before:
not available
# After:
not available
## Instruction: B %bb.25, debug-location !794; batchtest/cosf/wcclibm.c:476:8
# Before:
not available
# After:
not available
### Basic Block: 25
## Instruction: $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !795 :: (load (s32) from %stack.3); batchtest/cosf/wcclibm.c:477:25
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $r11, 259, 14, $noreg, debug-location !795 :: (load (s32) from %stack.2); batchtest/cosf/wcclibm.c:477:25
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS renamable $s0, renamable $s0, 14, $noreg, debug-location !795; batchtest/cosf/wcclibm.c:477:25
# Before:
not available
# After:
not available
## Instruction: VSTRS renamable $s0, renamable $r0, 1, 14, $noreg, debug-location !797 :: (store (s32) into %ir.arrayidx117); batchtest/cosf/wcclibm.c:477:21
# Before:
bot
# After:
not available
## Instruction: VSTRS killed renamable $s0, renamable $r0, 0, 14, $noreg, debug-location !798 :: (store (s32) into %ir.y); batchtest/cosf/wcclibm.c:477:12
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -20, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: B %bb.27, debug-location !799; batchtest/cosf/wcclibm.c:478:5
# Before:
not available
# After:
not available
### Basic Block: 26
## Instruction: $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !800 :: (load (s32) from %stack.3); batchtest/cosf/wcclibm.c:484:23
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $r11, 259, 14, $noreg, debug-location !800 :: (load (s32) from %stack.2); batchtest/cosf/wcclibm.c:484:23
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS renamable $s0, renamable $s0, 14, $noreg, debug-location !800; batchtest/cosf/wcclibm.c:484:23
# Before:
not available
# After:
not available
## Instruction: VSTRS renamable $s0, renamable $r0, 1, 14, $noreg, debug-location !802 :: (store (s32) into %ir.arrayidx121); batchtest/cosf/wcclibm.c:484:19
# Before:
bot
# After:
not available
## Instruction: VSTRS killed renamable $s0, renamable $r0, 0, 14, $noreg, debug-location !803 :: (store (s32) into %ir.y); batchtest/cosf/wcclibm.c:484:10
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -20, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: B %bb.27, debug-location !804; batchtest/cosf/wcclibm.c:485:3
# Before:
not available
# After:
not available
### Basic Block: 27
## Instruction: $r0 = LDRi12 $r11, -20, 14, $noreg, debug-location !774 :: (load (s32) from %stack.4); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !805; batchtest/cosf/wcclibm.c:486:1
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !805; batchtest/cosf/wcclibm.c:486:1
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !805; batchtest/cosf/wcclibm.c:486:1
# Before:
not available
# After:
not available
### Basic Block: 28
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 4, %const.4, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 5, %const.5, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 6, %const.6, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 7, %const.7, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 8, %const.8, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 9, %const.9, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 10, %const.10, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 11, %const.11, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 12, %const.12, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 13, %const.13, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 14, %const.14, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 15, %const.15, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 16, %const.16, 4
# Before:
not available
# After:
not available
#### Function: basicmath___ieee754_sqrtf
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 84, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: VSTRS $s0, $sp, 19, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = VMOVRS renamable $s0, 14, $noreg, debug-location !241; batchtest/cosf/wcclibm.c:500:3
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 80, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: $r1 = MOVi 1065353216, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = ORRri $r1, 1073741824, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !242; batchtest/cosf/wcclibm.c:503:13
# Before:
not available
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !244; batchtest/cosf/wcclibm.c:503:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 1, killed $cpsr, debug-location !244; batchtest/cosf/wcclibm.c:503:8
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !244; batchtest/cosf/wcclibm.c:503:8
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $s0 = VLDRS $sp, 19, 14, $noreg, debug-location !245 :: (load (s32) from %stack.1); batchtest/cosf/wcclibm.c:504:18
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMLAS renamable $s0(tied-def 0), renamable $s0, renamable $s0, 14, $noreg, debug-location !245; batchtest/cosf/wcclibm.c:504:18
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 18, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.28, debug-location !246; batchtest/cosf/wcclibm.c:504:5
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 80, 14, $noreg, debug-location !248 :: (load (s32) from %stack.0); batchtest/cosf/wcclibm.c:508:8
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !248; batchtest/cosf/wcclibm.c:508:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.9, 12, killed $cpsr, debug-location !248; batchtest/cosf/wcclibm.c:508:8
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !248; batchtest/cosf/wcclibm.c:508:8
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 80, 14, $noreg :: (load (s32) from %stack.0)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MVNi -2147483648, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: TSTrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !251; batchtest/cosf/wcclibm.c:509:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.5, 1, killed $cpsr, debug-location !251; batchtest/cosf/wcclibm.c:509:10
# Before:
not available
# After:
not available
## Instruction: B %bb.4, debug-location !251; batchtest/cosf/wcclibm.c:509:10
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $s0 = VLDRS $sp, 19, 14, $noreg :: (load (s32) from %stack.1)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 18, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.28, debug-location !252; batchtest/cosf/wcclibm.c:509:36
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $r0 = LDRi12 $sp, 80, 14, $noreg, debug-location !254 :: (load (s32) from %stack.0); batchtest/cosf/wcclibm.c:511:12
# Before:
bot
# After:
not available
## Instruction: CMNri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !254; batchtest/cosf/wcclibm.c:511:12
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.7, 12, killed $cpsr, debug-location !254; batchtest/cosf/wcclibm.c:511:12
# Before:
not available
# After:
not available
## Instruction: B %bb.6, debug-location !254; batchtest/cosf/wcclibm.c:511:12
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $s0 = VLDRS $sp, 19, 14, $noreg, debug-location !255 :: (load (s32) from %stack.1); batchtest/cosf/wcclibm.c:512:20
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS renamable $s0, renamable $s0, 14, $noreg, debug-location !255; batchtest/cosf/wcclibm.c:512:20
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VDIVS killed renamable $s0, renamable $s0, 14, $noreg, debug-location !257; batchtest/cosf/wcclibm.c:512:26
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 18, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.28, debug-location !258; batchtest/cosf/wcclibm.c:512:9
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: B %bb.8
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: B %bb.9, debug-location !259; batchtest/cosf/wcclibm.c:513:3
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: $r0 = LDRi12 $sp, 80, 14, $noreg, debug-location !260 :: (load (s32) from %stack.0); batchtest/cosf/wcclibm.c:515:12
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVsi renamable $r0, 185, 14, $noreg, $noreg, debug-location !260; batchtest/cosf/wcclibm.c:515:12
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 60, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPrsi killed renamable $r2, renamable $r0, 187, 14, $noreg, implicit-def $cpsr, debug-location !262; batchtest/cosf/wcclibm.c:516:8
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 64, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 68, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.15, 1, killed $cpsr, debug-location !262; batchtest/cosf/wcclibm.c:516:8
# Before:
not available
# After:
not available
## Instruction: B %bb.10, debug-location !262; batchtest/cosf/wcclibm.c:516:8
# Before:
not available
# After:
not available
### Basic Block: 10
## Instruction: $r1 = LDRi12 $sp, 80, 14, $noreg :: (load (s32) from %stack.0)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 52, 14, $noreg :: (store (s32) into %stack.7)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 56, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.11, debug-location !263; batchtest/cosf/wcclibm.c:518:11
# Before:
not available
# After:
not available
### Basic Block: 11
## Instruction: $r0 = LDRi12 $sp, 52, 14, $noreg, debug-location !264 :: (load (s32) from %stack.7); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 56, 14, $noreg, debug-location !264 :: (load (s32) from %stack.6); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.9)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 48, 14, $noreg :: (store (s32) into %stack.8)
# Before:
bot
# After:
not available
## Instruction: TSTri renamable $r0, 8388608, 14, $noreg, implicit-def $cpsr, debug-location !267; batchtest/cosf/wcclibm.c:518:5
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.14, 1, killed $cpsr, debug-location !267; batchtest/cosf/wcclibm.c:518:5
# Before:
not available
# After:
not available
## Instruction: B %bb.12, debug-location !267; batchtest/cosf/wcclibm.c:518:5
# Before:
not available
# After:
not available
### Basic Block: 12
## Instruction: B %bb.13, debug-location !268; batchtest/cosf/wcclibm.c:519:7
# Before:
not available
# After:
not available
### Basic Block: 13
## Instruction: $r0 = LDRi12 $sp, 44, 14, $noreg, debug-location !269 :: (load (s32) from %stack.9); batchtest/cosf/wcclibm.c:519:10
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 48, 14, $noreg, debug-location !269 :: (load (s32) from %stack.8); batchtest/cosf/wcclibm.c:519:10
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVsi renamable $r1, 10, 14, $noreg, $noreg, debug-location !269; batchtest/cosf/wcclibm.c:519:10
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDri renamable $r0, 1, 14, $noreg, $noreg, debug-location !270; batchtest/cosf/wcclibm.c:518:45
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 52, 14, $noreg :: (store (s32) into %stack.7)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 56, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.11, debug-location !267; batchtest/cosf/wcclibm.c:518:5
# Before:
not available
# After:
not available
### Basic Block: 14
## Instruction: $r0 = LDRi12 $sp, 48, 14, $noreg, debug-location !274 :: (load (s32) from %stack.8); batchtest/cosf/wcclibm.c:520:7
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 60, 14, $noreg, debug-location !274 :: (load (s32) from %stack.5); batchtest/cosf/wcclibm.c:520:7
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 44, 14, $noreg, debug-location !274 :: (load (s32) from %stack.9); batchtest/cosf/wcclibm.c:520:7
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = SUBrr renamable $r1, renamable $r2, 14, $noreg, $noreg, debug-location !274; batchtest/cosf/wcclibm.c:520:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDri killed renamable $r1, 1, 14, $noreg, $noreg, debug-location !274; batchtest/cosf/wcclibm.c:520:7
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 64, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 68, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: B %bb.15, debug-location !275; batchtest/cosf/wcclibm.c:521:3
# Before:
not available
# After:
not available
### Basic Block: 15
## Instruction: $r1 = LDRi12 $sp, 64, 14, $noreg, debug-location !241 :: (load (s32) from %stack.4); batchtest/cosf/wcclibm.c:500:3
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 68, 14, $noreg, debug-location !241 :: (load (s32) from %stack.3); batchtest/cosf/wcclibm.c:500:3
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = nsw SUBri killed renamable $r1, 127, 14, $noreg, $noreg, debug-location !276; batchtest/cosf/wcclibm.c:522:5
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 32, 14, $noreg :: (store (s32) into %stack.12)
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !277; batchtest/cosf/wcclibm.c:523:13
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRri killed renamable $r0, 8388608, 14, $noreg, $noreg, debug-location !278; batchtest/cosf/wcclibm.c:523:28
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 36, 14, $noreg :: (store (s32) into %stack.11)
# Before:
bot
# After:
not available
## Instruction: TSTri renamable $r1, 1, 14, $noreg, implicit-def $cpsr, debug-location !280; batchtest/cosf/wcclibm.c:524:8
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 40, 14, $noreg :: (store (s32) into %stack.10)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.17, 0, killed $cpsr, debug-location !280; batchtest/cosf/wcclibm.c:524:8
# Before:
not available
# After:
not available
## Instruction: B %bb.16, debug-location !280; batchtest/cosf/wcclibm.c:524:8
# Before:
not available
# After:
not available
### Basic Block: 16
## Instruction: $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !281 :: (load (s32) from %stack.11); batchtest/cosf/wcclibm.c:525:8
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nuw nsw MOVsi renamable $r0, 10, 14, $noreg, $noreg, debug-location !281; batchtest/cosf/wcclibm.c:525:8
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 40, 14, $noreg :: (store (s32) into %stack.10)
# Before:
bot
# After:
not available
## Instruction: B %bb.17, debug-location !282; batchtest/cosf/wcclibm.c:525:5
# Before:
not available
# After:
not available
### Basic Block: 17
## Instruction: $r1 = LDRi12 $sp, 40, 14, $noreg, debug-location !264 :: (load (s32) from %stack.10); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 16777216, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 20, 14, $noreg :: (store (s32) into %stack.15)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 24, 14, $noreg :: (store (s32) into %stack.14)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 28, 14, $noreg :: (store (s32) into %stack.13)
# Before:
bot
# After:
not available
## Instruction: B %bb.18, debug-location !283; batchtest/cosf/wcclibm.c:534:3
# Before:
not available
# After:
not available
### Basic Block: 18
## Instruction: $r1 = LDRi12 $sp, 20, 14, $noreg, debug-location !264 :: (load (s32) from %stack.15); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 24, 14, $noreg, debug-location !264 :: (load (s32) from %stack.14); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !264 :: (load (s32) from %stack.13); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.18)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 12, 14, $noreg :: (store (s32) into %stack.17)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 16, 14, $noreg :: (store (s32) into %stack.16)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !283; batchtest/cosf/wcclibm.c:534:3
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.20, 0, killed $cpsr, debug-location !283; batchtest/cosf/wcclibm.c:534:3
# Before:
not available
# After:
not available
## Instruction: B %bb.19, debug-location !283; batchtest/cosf/wcclibm.c:534:3
# Before:
not available
# After:
not available
### Basic Block: 19
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !285 :: (load (s32) from %stack.18); batchtest/cosf/wcclibm.c:535:11
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 12, 14, $noreg, debug-location !285 :: (load (s32) from %stack.17); batchtest/cosf/wcclibm.c:535:11
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 16, 14, $noreg, debug-location !285 :: (load (s32) from %stack.16); batchtest/cosf/wcclibm.c:535:11
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ADDrr renamable $r1, renamable $r0, 14, $noreg, $noreg, debug-location !285; batchtest/cosf/wcclibm.c:535:11
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ADDrr renamable $r1, renamable $r0, 14, $noreg, $noreg, debug-location !286; batchtest/cosf/wcclibm.c:537:16
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nsw RSBrsi killed renamable $r1, renamable $r3, 10, 14, $noreg, $noreg, debug-location !287; batchtest/cosf/wcclibm.c:538:11
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r0, 11, 14, $noreg, $noreg, debug-location !288; batchtest/cosf/wcclibm.c:542:7
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 20, 14, $noreg :: (store (s32) into %stack.15)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 24, 14, $noreg :: (store (s32) into %stack.14)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 28, 14, $noreg :: (store (s32) into %stack.13)
# Before:
bot
# After:
not available
## Instruction: B %bb.18, debug-location !283; batchtest/cosf/wcclibm.c:534:3
# Before:
not available
# After:
not available
### Basic Block: 20
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg :: (load (s32) from %stack.17)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MVNi -33554432, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPri renamable $r1, 0, 14, $noreg, implicit-def $cpsr, debug-location !292; batchtest/cosf/wcclibm.c:546:8
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.19)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.27, 0, killed $cpsr, debug-location !292; batchtest/cosf/wcclibm.c:546:8
# Before:
not available
# After:
not available
## Instruction: B %bb.21, debug-location !292; batchtest/cosf/wcclibm.c:546:8
# Before:
not available
# After:
not available
### Basic Block: 21
## Instruction: renamable $r0 = MVNi -33554432, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r1, 0, 14, $noreg, implicit-def $cpsr, debug-location !293; batchtest/cosf/wcclibm.c:548:10
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.20)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.26, 1, killed $cpsr, debug-location !293; batchtest/cosf/wcclibm.c:548:10
# Before:
not available
# After:
not available
## Instruction: B %bb.22, debug-location !293; batchtest/cosf/wcclibm.c:548:10
# Before:
not available
# After:
not available
### Basic Block: 22
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !294; batchtest/cosf/wcclibm.c:550:12
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.24, 1, killed $cpsr, debug-location !294; batchtest/cosf/wcclibm.c:550:12
# Before:
not available
# After:
not available
## Instruction: B %bb.23, debug-location !294; batchtest/cosf/wcclibm.c:550:12
# Before:
not available
# After:
not available
### Basic Block: 23
## Instruction: B %bb.25, debug-location !295; batchtest/cosf/wcclibm.c:551:9
# Before:
not available
# After:
not available
### Basic Block: 24
## Instruction: B %bb.25
# Before:
not available
# After:
not available
### Basic Block: 25
## Instruction: renamable $r0 = MOVi 33554432, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.20)
# Before:
bot
# After:
not available
## Instruction: B %bb.26, debug-location !296; batchtest/cosf/wcclibm.c:554:5
# Before:
not available
# After:
not available
### Basic Block: 26
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !264 :: (load (s32) from %stack.20); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.19)
# Before:
bot
# After:
not available
## Instruction: B %bb.27, debug-location !297; batchtest/cosf/wcclibm.c:555:3
# Before:
not available
# After:
not available
### Basic Block: 27
## Instruction: $r2 = LDRi12 $sp, 32, 14, $noreg, debug-location !264 :: (load (s32) from %stack.12); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 4, 14, $noreg, debug-location !264 :: (load (s32) from %stack.19); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $r0 = MOVi 1065353216, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r0 = ORRri $r0, 3221225472, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrsi killed renamable $r0, renamable $r2, 178, 14, $noreg, $noreg, debug-location !300; batchtest/cosf/wcclibm.c:557:13
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, killed renamable $r1, 9, 14, $noreg, $noreg, debug-location !299; batchtest/cosf/wcclibm.c:556:19
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDri killed renamable $r0, 1056964608, 14, $noreg, $noreg, debug-location !301; batchtest/cosf/wcclibm.c:557:6
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMOVSR killed renamable $r0, 14, $noreg, debug-location !302; batchtest/cosf/wcclibm.c:558:3
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 18, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.28, debug-location !303; batchtest/cosf/wcclibm.c:559:3
# Before:
not available
# After:
not available
### Basic Block: 28
## Instruction: $s0 = VLDRS $sp, 18, 14, $noreg, debug-location !264 :: (load (s32) from %stack.2); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 84, 14, $noreg, $noreg, debug-location !304; batchtest/cosf/wcclibm.c:560:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $s0, debug-location !304; batchtest/cosf/wcclibm.c:560:1
# Before:
not available
# After:
not available
### Basic Block: 29
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
#### Function: basicmath___isinff
### Basic Block: 0
## Instruction: renamable $r1 = VMOVRS killed renamable $s0, 14, $noreg, debug-location !618; batchtest/cosf/wcclibm.c:714:3
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = BICri renamable $r1, -2147483648, 14, $noreg, $noreg, debug-location !619; batchtest/cosf/wcclibm.c:715:10
# Before:
not available
# After:
not available
## Instruction: $r3 = MOVi 1065353216, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r3 = ORRri $r3, 1073741824, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPrr killed renamable $r2, killed renamable $r3, 14, $noreg, implicit-def $cpsr, debug-location !621; batchtest/cosf/wcclibm.c:718:23
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVsi killed renamable $r1, 241, 0, killed $cpsr, $noreg, implicit renamable $r0, debug-location !621; batchtest/cosf/wcclibm.c:718:23
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !622; batchtest/cosf/wcclibm.c:718:3
# Before:
not available
# After:
not available
#### Function: basicmath___kernel_cosf
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 28, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s1, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: VSTRS $s0, $sp, 5, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = VMOVRS renamable $s0, 14, $noreg, debug-location !807; batchtest/cosf/wcclibm.c:578:3
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = BICri killed renamable $r0, -2147483648, 14, $noreg, $noreg, debug-location !808; batchtest/cosf/wcclibm.c:579:6
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 24, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r0, 203, 14, $noreg, $noreg, debug-location !810; batchtest/cosf/wcclibm.c:580:8
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 24, 14, $noreg, implicit-def $cpsr, debug-location !810; batchtest/cosf/wcclibm.c:580:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 8, killed $cpsr, debug-location !810; batchtest/cosf/wcclibm.c:580:8
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !810; batchtest/cosf/wcclibm.c:580:8
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $s0 = VLDRS $sp, 5, 14, $noreg, debug-location !811 :: (load (s32) from %stack.1); batchtest/cosf/wcclibm.c:581:12
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VTOSIZS renamable $s0, 14, $noreg, debug-location !811; batchtest/cosf/wcclibm.c:581:12
# Before:
not available
# After:
not available
## Instruction: $r0 = VMOVRS killed $s0, 14, $noreg, debug-location !811; batchtest/cosf/wcclibm.c:581:12
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !813; batchtest/cosf/wcclibm.c:581:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 1, killed $cpsr, debug-location !813; batchtest/cosf/wcclibm.c:581:10
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !813; batchtest/cosf/wcclibm.c:581:10
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $s0 = VLDRS %const.10, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 3, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: B %bb.10, debug-location !814; batchtest/cosf/wcclibm.c:581:30
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.4, debug-location !815; batchtest/cosf/wcclibm.c:582:3
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $sp, 24, 14, $noreg, debug-location !816 :: (load (s32) from %stack.0); batchtest/cosf/wcclibm.c:583:10
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $sp, 5, 14, $noreg, debug-location !816 :: (load (s32) from %stack.1); batchtest/cosf/wcclibm.c:583:10
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS renamable $s0, renamable $s0, 14, $noreg, debug-location !816; batchtest/cosf/wcclibm.c:583:10
# Before:
not available
# After:
not available
## Instruction: VSTRS $s0, $sp, 1, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VMLAS renamable $s2(tied-def 0), renamable $s0, killed renamable $s4, 14, $noreg, debug-location !817; batchtest/cosf/wcclibm.c:585:71
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s0, killed renamable $s2, 14, $noreg, debug-location !818; batchtest/cosf/wcclibm.c:585:50
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VMLAS renamable $s2(tied-def 0), renamable $s0, killed renamable $s4, 14, $noreg, debug-location !819; batchtest/cosf/wcclibm.c:584:69
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.4, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s0, killed renamable $s2, 14, $noreg, debug-location !820; batchtest/cosf/wcclibm.c:584:48
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.5, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VMLAS renamable $s2(tied-def 0), renamable $s0, killed renamable $s4, 14, $noreg, debug-location !821; batchtest/cosf/wcclibm.c:584:27
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMULS renamable $s0, killed renamable $s2, 14, $noreg, debug-location !822; batchtest/cosf/wcclibm.c:584:10
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 2, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.6, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !824; batchtest/cosf/wcclibm.c:586:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 8, killed $cpsr, debug-location !824; batchtest/cosf/wcclibm.c:586:8
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !824; batchtest/cosf/wcclibm.c:586:8
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $s0 = VLDRS $sp, 1, 14, $noreg, debug-location !825 :: (load (s32) from %stack.5); batchtest/cosf/wcclibm.c:587:58
# Before:
bot
# After:
not available
## Instruction: $s4 = VLDRS $sp, 5, 14, $noreg, debug-location !825 :: (load (s32) from %stack.1); batchtest/cosf/wcclibm.c:587:58
# Before:
bot
# After:
not available
## Instruction: $s6 = VLDRS $sp, 4, 14, $noreg, debug-location !825 :: (load (s32) from %stack.2); batchtest/cosf/wcclibm.c:587:58
# Before:
bot
# After:
not available
## Instruction: $s2 = VLDRS $sp, 2, 14, $noreg, debug-location !825 :: (load (s32) from %stack.4); batchtest/cosf/wcclibm.c:587:58
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VMULS renamable $s0, renamable $s2, 14, $noreg, debug-location !825; batchtest/cosf/wcclibm.c:587:58
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VMLSS renamable $s2(tied-def 0), renamable $s4, renamable $s6, 14, $noreg, debug-location !825; batchtest/cosf/wcclibm.c:587:58
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.9, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VNMLSS renamable $s2(tied-def 0), renamable $s0, killed renamable $s4, 14, $noreg, debug-location !826; batchtest/cosf/wcclibm.c:587:48
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.10, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !827; batchtest/cosf/wcclibm.c:587:26
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 3, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: B %bb.10, debug-location !828; batchtest/cosf/wcclibm.c:587:5
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $sp, 24, 14, $noreg :: (load (s32) from %stack.0)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.7, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !830; batchtest/cosf/wcclibm.c:589:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 3, killed $cpsr, debug-location !830; batchtest/cosf/wcclibm.c:589:10
# Before:
not available
# After:
not available
## Instruction: B %bb.7, debug-location !830; batchtest/cosf/wcclibm.c:589:10
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: renamable $s0 = VLDRS %const.8, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 0, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !831; batchtest/cosf/wcclibm.c:590:7
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: $r0 = LDRi12 $sp, 24, 14, $noreg, debug-location !832 :: (load (s32) from %stack.0); batchtest/cosf/wcclibm.c:592:7
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nsw ADDri renamable $r0, -16777216, 14, $noreg, $noreg, debug-location !832; batchtest/cosf/wcclibm.c:592:7
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMOVSR killed renamable $r0, 14, $noreg, debug-location !832; batchtest/cosf/wcclibm.c:592:7
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 0, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.9
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: $s6 = VLDRS $sp, 5, 14, $noreg, debug-location !833 :: (load (s32) from %stack.1); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s8 = VLDRS $sp, 4, 14, $noreg, debug-location !833 :: (load (s32) from %stack.2); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s4 = VLDRS $sp, 1, 14, $noreg, debug-location !833 :: (load (s32) from %stack.5); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s10 = VLDRS $sp, 2, 14, $noreg, debug-location !833 :: (load (s32) from %stack.4); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $s12 = VLDRS $sp, 0, 14, $noreg, debug-location !833 :: (load (s32) from %stack.6); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.9, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: $s2 = VMOVS $s12, 14, $noreg, debug-location !834; batchtest/cosf/wcclibm.c:594:28
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VNMLSS renamable $s2(tied-def 0), renamable $s4, killed renamable $s0, 14, $noreg, debug-location !834; batchtest/cosf/wcclibm.c:594:28
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.10, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VSUBS killed renamable $s0, killed renamable $s12, 14, $noreg, debug-location !835; batchtest/cosf/wcclibm.c:595:24
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VMULS renamable $s4, renamable $s10, 14, $noreg, debug-location !836; batchtest/cosf/wcclibm.c:596:31
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VMLSS renamable $s4(tied-def 0), renamable $s6, renamable $s8, 14, $noreg, debug-location !836; batchtest/cosf/wcclibm.c:596:31
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VSUBS killed renamable $s2, killed renamable $s4, 14, $noreg, debug-location !837; batchtest/cosf/wcclibm.c:596:21
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VSUBS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !838; batchtest/cosf/wcclibm.c:596:14
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 3, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: B %bb.10, debug-location !839; batchtest/cosf/wcclibm.c:596:5
# Before:
not available
# After:
not available
### Basic Block: 10
## Instruction: $s0 = VLDRS $sp, 3, 14, $noreg, debug-location !833 :: (load (s32) from %stack.3); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 28, 14, $noreg, $noreg, debug-location !840; batchtest/cosf/wcclibm.c:598:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $s0, debug-location !840; batchtest/cosf/wcclibm.c:598:1
# Before:
not available
# After:
not available
### Basic Block: 11
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 4, %const.4, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 5, %const.5, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 6, %const.6, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 7, %const.7, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 8, %const.8, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 9, %const.9, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 10, %const.10, 4
# Before:
not available
# After:
not available
#### Function: basicmath___kernel_sinf
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 28, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s1, $sp, 5, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: VSTRS $s0, $sp, 6, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = VMOVRS renamable $s0, 14, $noreg, debug-location !842; batchtest/cosf/wcclibm.c:616:3
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDri killed renamable $r0, 2113929216, 14, $noreg, $noreg, debug-location !843; batchtest/cosf/wcclibm.c:617:6
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 203, 14, $noreg, $noreg, debug-location !845; batchtest/cosf/wcclibm.c:618:8
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 24, 14, $noreg, implicit-def $cpsr, debug-location !845; batchtest/cosf/wcclibm.c:618:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 8, killed $cpsr, debug-location !845; batchtest/cosf/wcclibm.c:618:8
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !845; batchtest/cosf/wcclibm.c:618:8
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $s0 = VLDRS $sp, 6, 14, $noreg, debug-location !846 :: (load (s32) from %stack.0); batchtest/cosf/wcclibm.c:619:10
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VTOSIZS renamable $s0, 14, $noreg, debug-location !846; batchtest/cosf/wcclibm.c:619:10
# Before:
not available
# After:
not available
## Instruction: $r0 = VMOVRS killed $s0, 14, $noreg, debug-location !846; batchtest/cosf/wcclibm.c:619:10
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !846; batchtest/cosf/wcclibm.c:619:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 1, killed $cpsr, debug-location !846; batchtest/cosf/wcclibm.c:619:10
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !846; batchtest/cosf/wcclibm.c:619:10
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $s0 = VLDRS $sp, 6, 14, $noreg :: (load (s32) from %stack.0)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 3, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: B %bb.7, debug-location !848; batchtest/cosf/wcclibm.c:619:26
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.4, debug-location !849; batchtest/cosf/wcclibm.c:620:3
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !850 :: (load (s32) from %stack.2); batchtest/cosf/wcclibm.c:621:10
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $sp, 6, 14, $noreg, debug-location !850 :: (load (s32) from %stack.0); batchtest/cosf/wcclibm.c:621:10
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VMULS renamable $s0, renamable $s0, 14, $noreg, debug-location !850; batchtest/cosf/wcclibm.c:621:10
# Before:
not available
# After:
not available
## Instruction: VSTRS $s2, $sp, 0, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS renamable $s2, renamable $s0, 14, $noreg, debug-location !851; batchtest/cosf/wcclibm.c:622:10
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 1, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s2, killed renamable $s0, 14, $noreg, debug-location !852; batchtest/cosf/wcclibm.c:624:44
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMLAS renamable $s0(tied-def 0), renamable $s2, killed renamable $s4, 14, $noreg, debug-location !853; batchtest/cosf/wcclibm.c:623:63
# Before:
not available
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s2, killed renamable $s0, 14, $noreg, debug-location !854; batchtest/cosf/wcclibm.c:623:42
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.4, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMLAS renamable $s0(tied-def 0), renamable $s2, killed renamable $s4, 14, $noreg, debug-location !855; batchtest/cosf/wcclibm.c:623:21
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 2, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !857; batchtest/cosf/wcclibm.c:625:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 1, killed $cpsr, debug-location !857; batchtest/cosf/wcclibm.c:625:8
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !857; batchtest/cosf/wcclibm.c:625:8
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $s2 = VLDRS $sp, 1, 14, $noreg :: (load (s32) from %stack.5)
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $sp, 6, 14, $noreg :: (load (s32) from %stack.0)
# Before:
bot
# After:
not available
## Instruction: $s6 = VLDRS $sp, 0, 14, $noreg :: (load (s32) from %stack.6)
# Before:
bot
# After:
not available
## Instruction: $s8 = VLDRS $sp, 2, 14, $noreg :: (load (s32) from %stack.4)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VLDRS %const.7, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s4 = VMLAS renamable $s4(tied-def 0), renamable $s6, renamable $s8, 14, $noreg, debug-location !858; batchtest/cosf/wcclibm.c:625:48
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMLAS renamable $s0(tied-def 0), renamable $s2, killed renamable $s4, 14, $noreg, debug-location !859; batchtest/cosf/wcclibm.c:625:27
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 3, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: B %bb.7, debug-location !860; batchtest/cosf/wcclibm.c:625:18
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $s0 = VLDRS $sp, 6, 14, $noreg :: (load (s32) from %stack.0)
# Before:
bot
# After:
not available
## Instruction: $s4 = VLDRS $sp, 1, 14, $noreg :: (load (s32) from %stack.5)
# Before:
bot
# After:
not available
## Instruction: $s6 = VLDRS $sp, 0, 14, $noreg :: (load (s32) from %stack.6)
# Before:
bot
# After:
not available
## Instruction: $s2 = VLDRS $sp, 5, 14, $noreg :: (load (s32) from %stack.1)
# Before:
bot
# After:
not available
## Instruction: $s10 = VLDRS $sp, 2, 14, $noreg :: (load (s32) from %stack.4)
# Before:
bot
# After:
not available
## Instruction: renamable $s8 = VLDRS %const.5, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s8 = VMULS renamable $s2, killed renamable $s8, 14, $noreg, debug-location !861; batchtest/cosf/wcclibm.c:626:53
# Before:
not available
# After:
not available
## Instruction: renamable $s8 = VMLSS renamable $s8(tied-def 0), renamable $s10, renamable $s4, 14, $noreg, debug-location !861; batchtest/cosf/wcclibm.c:626:53
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VNMLSS renamable $s2(tied-def 0), renamable $s6, killed renamable $s8, 14, $noreg, debug-location !862; batchtest/cosf/wcclibm.c:626:63
# Before:
not available
# After:
not available
## Instruction: renamable $s6 = VLDRS %const.6, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VMLAS renamable $s2(tied-def 0), renamable $s4, killed renamable $s6, 14, $noreg, debug-location !863; batchtest/cosf/wcclibm.c:626:69
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VSUBS renamable $s0, killed renamable $s2, 14, $noreg, debug-location !864; batchtest/cosf/wcclibm.c:626:22
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 3, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: B %bb.7, debug-location !865; batchtest/cosf/wcclibm.c:626:13
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $s0 = VLDRS $sp, 3, 14, $noreg, debug-location !866 :: (load (s32) from %stack.3); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 28, 14, $noreg, $noreg, debug-location !867; batchtest/cosf/wcclibm.c:628:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $s0, debug-location !867; batchtest/cosf/wcclibm.c:628:1
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 4, %const.4, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 5, %const.5, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 6, %const.6, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 7, %const.7, 4
# Before:
not available
# After:
not available
#### Function: basicmath___scalbnf
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 56, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -24, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: VSTRS $s0, $r11, 261, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = VMOVRS renamable $s0, 14, $noreg, debug-location !628; batchtest/cosf/wcclibm.c:732:3
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $r11, -16, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 255, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 187, 14, $noreg, $noreg, debug-location !629; batchtest/cosf/wcclibm.c:733:27
# Before:
not available
# After:
not available
## Instruction: CMPri renamable $r1, 0, 14, $noreg, implicit-def $cpsr, debug-location !631; batchtest/cosf/wcclibm.c:734:8
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $r11, -12, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 257, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !631; batchtest/cosf/wcclibm.c:734:8
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !631; batchtest/cosf/wcclibm.c:734:8
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $r11, -16, 14, $noreg :: (load (s32) from %stack.3)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MVNi -2147483648, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: TSTrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !634; batchtest/cosf/wcclibm.c:735:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 1, killed $cpsr, debug-location !634; batchtest/cosf/wcclibm.c:735:10
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !634; batchtest/cosf/wcclibm.c:735:10
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $s0 = VLDRS $r11, 261, 14, $noreg :: (load (s32) from %stack.4)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 7, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.16, debug-location !635; batchtest/cosf/wcclibm.c:735:37
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $s0 = VLDRS $r11, 261, 14, $noreg :: (load (s32) from %stack.4)
# Before:
bot
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS renamable $s0, killed renamable $s2, 14, $noreg, debug-location !636; batchtest/cosf/wcclibm.c:736:7
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = VMOVRS renamable $s0, 14, $noreg, debug-location !637; batchtest/cosf/wcclibm.c:737:5
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 255, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 187, 14, $noreg, $noreg, debug-location !638; batchtest/cosf/wcclibm.c:738:31
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nsw SUBri killed renamable $r1, 25, 14, $noreg, $noreg, debug-location !639; batchtest/cosf/wcclibm.c:738:39
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $r11, -12, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $r11, 257, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: B %bb.4, debug-location !640; batchtest/cosf/wcclibm.c:739:3
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg :: (load (s32) from %stack.2)
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -8, 14, $noreg :: (load (s32) from %stack.1)
# Before:
bot
# After:
not available
## Instruction: $s0 = VLDRS $r11, 257, 14, $noreg :: (load (s32) from %stack.0)
# Before:
bot
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 4, 14, $noreg :: (store (s32) into %stack.9)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 20, 14, $noreg :: (store (s32) into %stack.8)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 24, 14, $noreg :: (store (s32) into %stack.7)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 255, 14, $noreg, implicit-def $cpsr, debug-location !643; batchtest/cosf/wcclibm.c:740:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 1, killed $cpsr, debug-location !643; batchtest/cosf/wcclibm.c:740:8
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !643; batchtest/cosf/wcclibm.c:740:8
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $s0 = VLDRS $sp, 4, 14, $noreg, debug-location !644 :: (load (s32) from %stack.9); batchtest/cosf/wcclibm.c:740:29
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VADDS renamable $s0, renamable $s0, 14, $noreg, debug-location !644; batchtest/cosf/wcclibm.c:740:29
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 7, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.16, debug-location !645; batchtest/cosf/wcclibm.c:740:20
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $r11, -24, 14, $noreg, debug-location !646 :: (load (s32) from %stack.5); batchtest/cosf/wcclibm.c:741:9
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !646 :: (load (s32) from %stack.7); batchtest/cosf/wcclibm.c:741:9
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = nsw ADDrr renamable $r1, renamable $r0, 14, $noreg, $noreg, debug-location !646; batchtest/cosf/wcclibm.c:741:9
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 12, 14, $noreg :: (store (s32) into %stack.10)
# Before:
bot
# After:
not available
## Instruction: $r1 = MOVi 848, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = ORRri $r1, 49152, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !648; batchtest/cosf/wcclibm.c:742:18
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 12, killed $cpsr, debug-location !648; batchtest/cosf/wcclibm.c:742:18
# Before:
not available
# After:
not available
## Instruction: B %bb.7, debug-location !648; batchtest/cosf/wcclibm.c:742:18
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !650 :: (load (s32) from %stack.10); batchtest/cosf/wcclibm.c:742:8
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 255, 14, $noreg, implicit-def $cpsr, debug-location !650; batchtest/cosf/wcclibm.c:742:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.9, 11, killed $cpsr, debug-location !650; batchtest/cosf/wcclibm.c:742:8
# Before:
not available
# After:
not available
## Instruction: B %bb.8, debug-location !650; batchtest/cosf/wcclibm.c:742:8
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: $s1 = VLDRS $sp, 4, 14, $noreg, debug-location !651 :: (load (s32) from %stack.9); batchtest/cosf/wcclibm.c:743:29
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.4, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: VSTRS $s0, $sp, 2, 14, $noreg :: (store (s32) into %stack.11)
# Before:
bot
# After:
not available
## Instruction: BL_pred @basicmath___copysignf, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $s0, implicit killed $s1, implicit-def $sp, implicit-def $s0, debug-location !651; batchtest/cosf/wcclibm.c:743:29
# Before:
not available
# After:
not available
## Instruction: $s2 = VLDRS $sp, 2, 14, $noreg, debug-location !651 :: (load (s32) from %stack.11); batchtest/cosf/wcclibm.c:743:29
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !652; batchtest/cosf/wcclibm.c:743:27
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 7, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.16, debug-location !653; batchtest/cosf/wcclibm.c:743:5
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: $r0 = LDRi12 $r11, -24, 14, $noreg :: (load (s32) from %stack.5)
# Before:
bot
# After:
not available
## Instruction: $r1 = MVNi 80, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = SUBri $r1, 49920, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !655; batchtest/cosf/wcclibm.c:745:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.11, 12, killed $cpsr, debug-location !655; batchtest/cosf/wcclibm.c:745:8
# Before:
not available
# After:
not available
## Instruction: B %bb.10, debug-location !655; batchtest/cosf/wcclibm.c:745:8
# Before:
not available
# After:
not available
### Basic Block: 10
## Instruction: $s1 = VLDRS $sp, 4, 14, $noreg, debug-location !656 :: (load (s32) from %stack.9); batchtest/cosf/wcclibm.c:746:29
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: VSTRS $s0, $sp, 1, 14, $noreg :: (store (s32) into %stack.12)
# Before:
bot
# After:
not available
## Instruction: BL_pred @basicmath___copysignf, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $s0, implicit killed $s1, implicit-def $sp, implicit-def $s0, debug-location !656; batchtest/cosf/wcclibm.c:746:29
# Before:
not available
# After:
not available
## Instruction: $s2 = VLDRS $sp, 1, 14, $noreg, debug-location !656 :: (load (s32) from %stack.12); batchtest/cosf/wcclibm.c:746:29
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !657; batchtest/cosf/wcclibm.c:746:27
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 7, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.16, debug-location !658; batchtest/cosf/wcclibm.c:746:5
# Before:
not available
# After:
not available
### Basic Block: 11
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !660 :: (load (s32) from %stack.10); batchtest/cosf/wcclibm.c:748:8
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !660; batchtest/cosf/wcclibm.c:748:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.13, 11, killed $cpsr, debug-location !660; batchtest/cosf/wcclibm.c:748:8
# Before:
not available
# After:
not available
## Instruction: B %bb.12, debug-location !660; batchtest/cosf/wcclibm.c:748:8
# Before:
not available
# After:
not available
### Basic Block: 12
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg :: (load (s32) from %stack.10)
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 20, 14, $noreg :: (load (s32) from %stack.8)
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !661; batchtest/cosf/wcclibm.c:749:5
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r1, 186, 14, $noreg, $noreg, debug-location !661; batchtest/cosf/wcclibm.c:749:5
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMOVSR killed renamable $r0, 14, $noreg, debug-location !661; batchtest/cosf/wcclibm.c:749:5
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 7, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.16, debug-location !662; batchtest/cosf/wcclibm.c:750:5
# Before:
not available
# After:
not available
### Basic Block: 13
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !664 :: (load (s32) from %stack.10); batchtest/cosf/wcclibm.c:752:8
# Before:
bot
# After:
not available
## Instruction: CMNri renamable $r0, 25, 14, $noreg, implicit-def $cpsr, debug-location !664; batchtest/cosf/wcclibm.c:752:8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.15, 12, killed $cpsr, debug-location !664; batchtest/cosf/wcclibm.c:752:8
# Before:
not available
# After:
not available
## Instruction: B %bb.14, debug-location !664; batchtest/cosf/wcclibm.c:752:8
# Before:
not available
# After:
not available
### Basic Block: 14
## Instruction: $s1 = VLDRS $sp, 4, 14, $noreg, debug-location !665 :: (load (s32) from %stack.9); batchtest/cosf/wcclibm.c:753:29
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: VSTRS $s0, $sp, 0, 14, $noreg :: (store (s32) into %stack.13)
# Before:
bot
# After:
not available
## Instruction: BL_pred @basicmath___copysignf, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $s0, implicit killed $s1, implicit-def $sp, implicit-def $s0, debug-location !665; batchtest/cosf/wcclibm.c:753:29
# Before:
not available
# After:
not available
## Instruction: $s2 = VLDRS $sp, 0, 14, $noreg, debug-location !665 :: (load (s32) from %stack.13); batchtest/cosf/wcclibm.c:753:29
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !666; batchtest/cosf/wcclibm.c:753:27
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 7, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.16, debug-location !667; batchtest/cosf/wcclibm.c:753:5
# Before:
not available
# After:
not available
### Basic Block: 15
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg :: (load (s32) from %stack.10)
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 20, 14, $noreg :: (load (s32) from %stack.8)
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !668; batchtest/cosf/wcclibm.c:756:3
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDri renamable $r1, 25, 14, $noreg, $noreg, debug-location !668; batchtest/cosf/wcclibm.c:756:3
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $r1, 186, 14, $noreg, $noreg, debug-location !668; batchtest/cosf/wcclibm.c:756:3
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VMOVSR killed renamable $r0, 14, $noreg, debug-location !668; batchtest/cosf/wcclibm.c:756:3
# Before:
not available
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $s0 = VMULS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !669; batchtest/cosf/wcclibm.c:757:12
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 7, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: B %bb.16, debug-location !670; batchtest/cosf/wcclibm.c:757:3
# Before:
not available
# After:
not available
### Basic Block: 16
## Instruction: $s0 = VLDRS $sp, 7, 14, $noreg, debug-location !641 :: (load (s32) from %stack.6); batchtest/cosf/wcclibm.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !671; batchtest/cosf/wcclibm.c:758:1
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !671; batchtest/cosf/wcclibm.c:758:1
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $s0, debug-location !671; batchtest/cosf/wcclibm.c:758:1
# Before:
not available
# After:
not available
### Basic Block: 17
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 4, %const.4, 4
# Before:
not available
# After:
not available
#### Function: compilerrt_abort_impl
### Basic Block: 0
#### Function: cosf_init
### Basic Block: 0
## Instruction: renamable $r1 = LDRi12 %const.0, 0, 14, $noreg, debug-location !131 :: (load (s32) from constant-pool); batchtest/cosf/cosf.c:43:39
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function cosf_init |->
    Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff8,
 12 |-> top,
 13 |-> 0x7fffff8,
 14 |-> top,
 15 |-> top]
{}
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, killed renamable $r1, 0, 14, $noreg, debug-location !131 :: (store (s32) into @cosf_solutions); batchtest/cosf/cosf.c:43:39
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function cosf_init |->
    Leaf:
[0 |-> 0x0,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff8,
 12 |-> top,
 13 |-> 0x7fffff8,
 14 |-> top,
 15 |-> top]
{}
  ]
]
# After:
not available
## Instruction: BX_RET 14, $noreg, debug-location !132; batchtest/cosf/cosf.c:43:47
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
#### Function: cosf_main
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function cosf_main |->
    Leaf:
[0 |-> 0x0,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff8,
 12 |-> top,
 13 |-> 0x7fffff8,
 14 |-> top,
 15 |-> top]
{0xd0000 |-> 0x0
}
  ]
]
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $s0 = VLDRS %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function cosf_main |->
    Leaf:
[0 |-> 0x0,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0xd0000 |-> 0x0
0x7fffff0 |-> 0x7fffff8
}
  ]
]
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 1, 14, $noreg :: (store (s32) into %stack.0)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function cosf_main |->
    Leaf:
[0 |-> 0x0,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0xd0000 |-> 0x0
0x7fffff0 |-> 0x7fffff8
}
  ]
]
# After:
not available
## Instruction: B %bb.1, debug-location !142; batchtest/cosf/cosf.c:64:45
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $s0 = VLDRS $sp, 1, 14, $noreg, debug-location !143 :: (load (s32) from %stack.0); batchtest/cosf/cosf.c:0
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function cosf_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function cosf_main taken 0 times |->
      Leaf:
[0 |-> 0x0,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0xd0000 |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

     Loop Iteration: Backedges {(BB3, BB1)} in function cosf_main taken at least 1 times |->
      Leaf:
[0 |-> 0xd0000, @cosf_solutions,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: VSTRS $s0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function cosf_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function cosf_main taken 0 times |->
      Leaf:
[0 |-> 0x0,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0xd0000 |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

     Loop Iteration: Backedges {(BB3, BB1)} in function cosf_main taken at least 1 times |->
      Leaf:
[0 |-> 0xd0000, @cosf_solutions,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function cosf_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function cosf_main taken 0 times |->
      Leaf:
[0 |-> 0x0,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0xd0000 |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

     Loop Iteration: Backedges {(BB3, BB1)} in function cosf_main taken at least 1 times |->
      Leaf:
[0 |-> 0xd0000, @cosf_solutions,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: VCMPS renamable $s0, killed renamable $s2, 14, $noreg, implicit-def $fpscr_nzcv, debug-location !145; batchtest/cosf/cosf.c:64:40
# Before:
not available
# After:
not available
## Instruction: FMSTAT 14, $noreg, implicit-def $cpsr, implicit killed $fpscr_nzcv, debug-location !145; batchtest/cosf/cosf.c:64:40
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 5, killed $cpsr, debug-location !145; batchtest/cosf/cosf.c:64:40
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !145; batchtest/cosf/cosf.c:64:40
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $s0 = VLDRS $sp, 0, 14, $noreg, debug-location !146 :: (load (s32) from %stack.1); batchtest/cosf/cosf.c:65:25
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function cosf_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function cosf_main taken 0 times |->
      Leaf:
[0 |-> 0x0,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0xd0000 |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

     Loop Iteration: Backedges {(BB3, BB1)} in function cosf_main taken at least 1 times |->
      Leaf:
[0 |-> 0xd0000, @cosf_solutions,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: BL_pred @basicmath___cosf, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $s0, implicit-def $sp, implicit-def $s0, debug-location !146; batchtest/cosf/cosf.c:65:25
# Before:
not available
# After:
not available
## Instruction: $s2 = VMOVS killed $s0, 14, $noreg, debug-location !146; batchtest/cosf/cosf.c:65:25
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = LDRi12 %const.2, 0, 14, $noreg, debug-location !147 :: (load (s32) from constant-pool); batchtest/cosf/cosf.c:65:22
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function cosf_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function cosf_main taken 0 times |->
      Leaf:
[0 |-> top,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}

     Loop Iteration: Backedges {(BB3, BB1)} in function cosf_main taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $s0 = VLDRS renamable $r0, 0, 14, $noreg, debug-location !147 :: (dereferenceable load (s32) from @cosf_solutions); batchtest/cosf/cosf.c:65:22
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function cosf_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function cosf_main taken 0 times |->
      Leaf:
[0 |-> 0xd0000, @cosf_solutions,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}

     Loop Iteration: Backedges {(BB3, BB1)} in function cosf_main taken at least 1 times |->
      Leaf:
[0 |-> 0xd0000, @cosf_solutions,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $s0 = VADDS killed renamable $s0, killed renamable $s2, 14, $noreg, debug-location !147; batchtest/cosf/cosf.c:65:22
# Before:
not available
# After:
not available
## Instruction: VSTRS killed renamable $s0, killed renamable $r0, 0, 14, $noreg, debug-location !147 :: (store (s32) into @cosf_solutions); batchtest/cosf/cosf.c:65:22
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function cosf_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function cosf_main taken 0 times |->
      Leaf:
[0 |-> 0xd0000, @cosf_solutions,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}

     Loop Iteration: Backedges {(BB3, BB1)} in function cosf_main taken at least 1 times |->
      Leaf:
[0 |-> 0xd0000, @cosf_solutions,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: B %bb.3, debug-location !148; batchtest/cosf/cosf.c:65:7
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $s0 = VLDRS $sp, 0, 14, $noreg :: (load (s32) from %stack.1)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function cosf_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function cosf_main taken 0 times |->
      Leaf:
[0 |-> 0xd0000, @cosf_solutions,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}

     Loop Iteration: Backedges {(BB3, BB1)} in function cosf_main taken at least 1 times |->
      Leaf:
[0 |-> 0xd0000, @cosf_solutions,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $s2 = VLDRS %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function cosf_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function cosf_main taken 0 times |->
      Leaf:
[0 |-> 0xd0000, @cosf_solutions,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}

     Loop Iteration: Backedges {(BB3, BB1)} in function cosf_main taken at least 1 times |->
      Leaf:
[0 |-> 0xd0000, @cosf_solutions,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $s0 = VADDS renamable $s0, killed renamable $s2, 14, $noreg, debug-location !149; batchtest/cosf/cosf.c:64:67
# Before:
not available
# After:
not available
## Instruction: VSTRS killed $s0, $sp, 1, 14, $noreg :: (store (s32) into %stack.0)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function cosf_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function cosf_main taken 0 times |->
      Leaf:
[0 |-> 0xd0000, @cosf_solutions,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}

     Loop Iteration: Backedges {(BB3, BB1)} in function cosf_main taken at least 1 times |->
      Leaf:
[0 |-> 0xd0000, @cosf_solutions,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: B %bb.1, debug-location !145; batchtest/cosf/cosf.c:64:40
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !153; batchtest/cosf/cosf.c:66:1
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !153; batchtest/cosf/cosf.c:66:1
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function cosf_main |->
    Leaf:
[0 |-> top,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7fffff0,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
  ]
]
# After:
not available
## Instruction: BX_RET 14, $noreg, debug-location !153; batchtest/cosf/cosf.c:66:1
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
#### Function: cosf_return
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 4, 14, $noreg, $noreg
# Before:
[
 Function call at location main_BB0_I8 |->
  [
   Call of function cosf_return |->
    Leaf:
[0 |-> top,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff8,
 12 |-> top,
 13 |-> 0x7fffff8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
  ]
]
# After:
not available
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !134 :: (load (s32) from constant-pool); batchtest/cosf/cosf.c:50:14
# Before:
[
 Function call at location main_BB0_I8 |->
  [
   Call of function cosf_return |->
    Leaf:
[0 |-> top,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff8,
 12 |-> top,
 13 |-> 0x7fffff4,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
  ]
]
# After:
not available
## Instruction: renamable $s0 = VLDRS killed renamable $r0, 0, 14, $noreg, debug-location !134 :: (dereferenceable load (s32) from @cosf_solutions); batchtest/cosf/cosf.c:50:14
# Before:
[
 Function call at location main_BB0_I8 |->
  [
   Call of function cosf_return |->
    Leaf:
[0 |-> 0xd0000, @cosf_solutions,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff8,
 12 |-> top,
 13 |-> 0x7fffff4,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
  ]
]
# After:
not available
## Instruction: renamable $s0 = VTOSIZS killed renamable $s0, 14, $noreg, debug-location !134; batchtest/cosf/cosf.c:50:14
# Before:
not available
# After:
not available
## Instruction: $r0 = VMOVRS killed $s0, 14, $noreg, debug-location !134; batchtest/cosf/cosf.c:50:14
# Before:
not available
# After:
not available
## Instruction: CMNri killed renamable $r0, 4, 14, $noreg, implicit-def $cpsr, debug-location !136; batchtest/cosf/cosf.c:52:7
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 1, killed $cpsr, debug-location !136; batchtest/cosf/cosf.c:52:7
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !136; batchtest/cosf/cosf.c:52:7
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.0)
# Before:
[
 Function call at location main_BB0_I8 |->
  [
   Call of function cosf_return |->
    Leaf:
[0 |-> 0x0,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff8,
 12 |-> top,
 13 |-> 0x7fffff4,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
  ]
]
# After:
not available
## Instruction: B %bb.3, debug-location !137; batchtest/cosf/cosf.c:53:5
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = MVNi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.0)
# Before:
[
 Function call at location main_BB0_I8 |->
  [
   Call of function cosf_return |->
    Leaf:
[0 |-> 0xffffffff,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff8,
 12 |-> top,
 13 |-> 0x7fffff4,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
  ]
]
# After:
not available
## Instruction: B %bb.3, debug-location !138; batchtest/cosf/cosf.c:55:5
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !139 :: (load (s32) from %stack.0); batchtest/cosf/cosf.c:0
# Before:
[
 Function call at location main_BB0_I8 |->
  [
   Call of function cosf_return |->
    Leaf:
[0 |-> top,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff8,
 12 |-> top,
 13 |-> 0x7fffff4,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
  ]
]
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 4, 14, $noreg, $noreg, debug-location !140; batchtest/cosf/cosf.c:56:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !140; batchtest/cosf/cosf.c:56:1
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
#### Function: main
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
[
 Call of function main |->
  Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> top,
 12 |-> top,
 13 |-> 0x8000000,
 14 |-> top,
 15 |-> top]
{}
]
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL_pred @cosf_init, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit-def $sp, debug-location !155; batchtest/cosf/cosf.c:69:3
# Before:
not available
# After:
not available
## Instruction: BL_pred @cosf_main, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit-def $sp, debug-location !156; batchtest/cosf/cosf.c:70:3
# Before:
not available
# After:
not available
## Instruction: BL_pred @cosf_return, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit-def $sp, implicit-def $r0, debug-location !157; batchtest/cosf/cosf.c:71:10
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !158; batchtest/cosf/cosf.c:71:3
# Before:
[
 Call of function main |->
  Leaf:
[0 |-> top,
 1 |-> 0xd0000, @cosf_solutions,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff8,
 12 |-> top,
 13 |-> 0x7fffff8,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
]
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !158; batchtest/cosf/cosf.c:71:3
# Before:
not available
# After:
not available
#### Function: memcpy
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 20, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 4, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 8, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 12, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: B %bb.1, debug-location !1842; ../memory.c:8:6
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r1 = LDRi12 $sp, 4, 14, $noreg, debug-location !1843 :: (load (s32) from %stack.3); ../memory.c:0
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !1843 :: (load (s32) from %stack.0); ../memory.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1845; ../memory.c:8:2
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 0, killed $cpsr, debug-location !1845; ../memory.c:8:2
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1845; ../memory.c:8:2
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1846 :: (load (s32) from %stack.1); ../memory.c:9:21
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 0, 14, $noreg, debug-location !1846 :: (load (s32) from %stack.4); ../memory.c:9:21
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !1846 :: (load (s32) from %stack.2); ../memory.c:9:21
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRBrs renamable $r0, renamable $r2, 0, 14, $noreg, debug-location !1846 :: (load (s8) from %ir.arrayidx); ../memory.c:9:21
# Before:
bot
# After:
not available
## Instruction: STRBrs killed renamable $r0, renamable $r1, renamable $r2, 0, 14, $noreg, debug-location !1848 :: (store (s8) into %ir.arrayidx1); ../memory.c:9:19
# Before:
bot
# After:
not available
## Instruction: B %bb.3, debug-location !1849; ../memory.c:10:2
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1850 :: (load (s32) from %stack.4); ../memory.c:8:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nuw ADDri renamable $r0, 1, 14, $noreg, $noreg, debug-location !1850; ../memory.c:8:26
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: B %bb.1, debug-location !1845; ../memory.c:8:2
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $sp = frame-destroy ADDri killed $sp, 20, 14, $noreg, $noreg, debug-location !1852; ../memory.c:11:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1852; ../memory.c:11:1
# Before:
not available
# After:
not available
#### Function: memset
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 20, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 4, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 8, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 12, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: B %bb.1, debug-location !1854; ../memory.c:17:6
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r1 = LDRi12 $sp, 4, 14, $noreg, debug-location !1855 :: (load (s32) from %stack.3); ../memory.c:0
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !1855 :: (load (s32) from %stack.0); ../memory.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1857; ../memory.c:17:2
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 0, killed $cpsr, debug-location !1857; ../memory.c:17:2
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1857; ../memory.c:17:2
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !1860 :: (load (s32) from %stack.2); ../memory.c:18:11
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1860 :: (load (s32) from %stack.1); ../memory.c:18:11
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 0, 14, $noreg, debug-location !1860 :: (load (s32) from %stack.4); ../memory.c:18:11
# Before:
bot
# After:
not available
## Instruction: STRBrs renamable $r0, renamable $r1, renamable $r2, 0, 14, $noreg, debug-location !1860 :: (store (s8) into %ir.arrayidx); ../memory.c:18:11
# Before:
bot
# After:
not available
## Instruction: B %bb.3, debug-location !1861; ../memory.c:19:2
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1862 :: (load (s32) from %stack.4); ../memory.c:17:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nuw ADDri renamable $r0, 1, 14, $noreg, $noreg, debug-location !1862; ../memory.c:17:26
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: B %bb.1, debug-location !1857; ../memory.c:17:2
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1864 :: (load (s32) from %stack.1); ../memory.c:20:2
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 20, 14, $noreg, $noreg, debug-location !1864; ../memory.c:20:2
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1864; ../memory.c:20:2
# Before:
not available
# After:
not available
