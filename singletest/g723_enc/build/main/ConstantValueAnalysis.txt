##########################
## Analysis Information ##
##########################
#### Function: __absvdi2
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r2 = MOVr $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORri killed renamable $r1, -2147483648, 14, $noreg, $noreg, debug-location !418; ../absvdi2.c:25:11
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !418; ../absvdi2.c:25:11
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !419; ../absvdi2.c:25:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 1, killed $cpsr, debug-location !419; ../absvdi2.c:25:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !419; ../absvdi2.c:25:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !420 :: (load (s32) from constant-pool); ../absvdi2.c:26:9
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !420 :: (load (s32) from constant-pool); ../absvdi2.c:26:9
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 26, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !420; ../absvdi2.c:26:9
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r2 = LDRi12 $sp, 0, 14, $noreg, debug-location !421 :: (load (s32) from %stack.1); ../absvdi2.c:28:20
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !421 :: (load (s32) from %stack.0); ../absvdi2.c:28:20
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r2, 249, 14, $noreg, def $cpsr, debug-location !421; ../absvdi2.c:28:20
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r2, 249, 14, $noreg, $noreg, debug-location !421; ../absvdi2.c:28:20
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrsi renamable $r2, renamable $r2, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !421; ../absvdi2.c:28:20
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = EORrsi killed renamable $r1, killed renamable $r2, 249, 14, $noreg, $noreg, debug-location !421; ../absvdi2.c:28:20
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !422; ../absvdi2.c:28:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !422; ../absvdi2.c:28:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !422; ../absvdi2.c:28:5
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: __absvsi2
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, -2147483648, 14, $noreg, implicit-def $cpsr, debug-location !427; ../absvsi2.c:25:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 1, killed $cpsr, debug-location !427; ../absvsi2.c:25:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !427; ../absvsi2.c:25:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !428 :: (load (s32) from constant-pool); ../absvsi2.c:26:9
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !428 :: (load (s32) from constant-pool); ../absvsi2.c:26:9
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 26, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !428; ../absvsi2.c:26:9
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !429 :: (load (s32) from %stack.0); ../absvsi2.c:28:20
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !429; ../absvsi2.c:28:20
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.4, 5, killed $cpsr, debug-location !429; ../absvsi2.c:28:20
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !429 :: (load (s32) from %stack.0); ../absvsi2.c:28:20
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = RSBri renamable $r0, 0, 14, $noreg, $noreg, debug-location !429; ../absvsi2.c:28:20
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !429 :: (load (s32) from %stack.1); ../absvsi2.c:28:20
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !430; ../absvsi2.c:28:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !430; ../absvsi2.c:28:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !430; ../absvsi2.c:28:5
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: __addvdi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r12 = MOVr $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r12, $sp, 0, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: $r12 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r12, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r2, 14, $noreg, def $cpsr, debug-location !432; ../addvdi3.c:24:27
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ADCrr killed renamable $r1, renamable $r3, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !432; ../addvdi3.c:24:27
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r3, 0, 14, $noreg, implicit-def $cpsr, debug-location !434; ../addvdi3.c:25:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 4, killed $cpsr, debug-location !434; ../addvdi3.c:25:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !434; ../addvdi3.c:25:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !435 :: (load (s32) from %stack.0); ../addvdi3.c:27:15
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !435 :: (load (s32) from %stack.3); ../addvdi3.c:27:15
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 8, 14, $noreg, debug-location !435 :: (load (s32) from %stack.1); ../addvdi3.c:27:15
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 4, 14, $noreg, debug-location !435 :: (load (s32) from %stack.2); ../addvdi3.c:27:15
# Before:
bot
# After:
not available
## Instruction: dead renamable $r2 = SUBrr renamable $r2, renamable $r3, 14, $noreg, def $cpsr, debug-location !435; ../addvdi3.c:27:15
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCrr renamable $r0, renamable $r1, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !435; ../addvdi3.c:27:15
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 10, killed $cpsr, debug-location !436; ../addvdi3.c:27:13
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !436; ../addvdi3.c:27:13
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !437 :: (load (s32) from constant-pool); ../addvdi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !437 :: (load (s32) from constant-pool); ../addvdi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 28, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !437; ../addvdi3.c:28:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.7, debug-location !438; ../addvdi3.c:29:5
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !439 :: (load (s32) from %stack.0); ../addvdi3.c:32:15
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !439 :: (load (s32) from %stack.3); ../addvdi3.c:32:15
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 8, 14, $noreg, debug-location !439 :: (load (s32) from %stack.1); ../addvdi3.c:32:15
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 4, 14, $noreg, debug-location !439 :: (load (s32) from %stack.2); ../addvdi3.c:32:15
# Before:
bot
# After:
not available
## Instruction: dead renamable $r2 = SUBrr renamable $r2, renamable $r3, 14, $noreg, def $cpsr, debug-location !439; ../addvdi3.c:32:15
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCrr renamable $r0, renamable $r1, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !439; ../addvdi3.c:32:15
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 11, killed $cpsr, debug-location !440; ../addvdi3.c:32:13
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !440; ../addvdi3.c:32:13
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !441 :: (load (s32) from constant-pool); ../addvdi3.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !441 :: (load (s32) from constant-pool); ../addvdi3.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 33, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !441; ../addvdi3.c:33:13
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: B %bb.7
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !442 :: (load (s32) from %stack.0); ../addvdi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !442 :: (load (s32) from %stack.1); ../addvdi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !442; ../addvdi3.c:35:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !442; ../addvdi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !442; ../addvdi3.c:35:5
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: __addvsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ADDrr renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !444; ../addvsi3.c:24:27
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r1, 0, 14, $noreg, implicit-def $cpsr, debug-location !446; ../addvsi3.c:25:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 4, killed $cpsr, debug-location !446; ../addvsi3.c:25:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !446; ../addvsi3.c:25:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !448 :: (load (s32) from %stack.0); ../addvsi3.c:27:13
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !448 :: (load (s32) from %stack.1); ../addvsi3.c:27:13
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !448; ../addvsi3.c:27:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 10, killed $cpsr, debug-location !448; ../addvsi3.c:27:13
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !448; ../addvsi3.c:27:13
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !449 :: (load (s32) from constant-pool); ../addvsi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !449 :: (load (s32) from constant-pool); ../addvsi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 28, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !449; ../addvsi3.c:28:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.7, debug-location !450; ../addvsi3.c:29:5
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !452 :: (load (s32) from %stack.0); ../addvsi3.c:32:13
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !452 :: (load (s32) from %stack.1); ../addvsi3.c:32:13
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !452; ../addvsi3.c:32:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 11, killed $cpsr, debug-location !452; ../addvsi3.c:32:13
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !452; ../addvsi3.c:32:13
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !453 :: (load (s32) from constant-pool); ../addvsi3.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !453 :: (load (s32) from constant-pool); ../addvsi3.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 33, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !453; ../addvsi3.c:33:13
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: B %bb.7
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !454 :: (load (s32) from %stack.0); ../addvsi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !454; ../addvsi3.c:35:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !454; ../addvsi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !454; ../addvsi3.c:35:5
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: __aeabi_lcmp
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL_pred @__cmpdi2, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, debug-location !606; ../cmpdi2.c:48:9
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBri killed renamable $r0, 1, 14, $noreg, $noreg, debug-location !607; ../cmpdi2.c:48:24
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !608; ../cmpdi2.c:48:2
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !608; ../cmpdi2.c:48:2
# Before:
not available
# After:
not available
#### Function: __aeabi_ulcmp
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL_pred @__ucmpdi2, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, debug-location !1329; ../ucmpdi2.c:48:9
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBri killed renamable $r0, 1, 14, $noreg, $noreg, debug-location !1330; ../ucmpdi2.c:48:25
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1331; ../ucmpdi2.c:48:2
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1331; ../ucmpdi2.c:48:2
# Before:
not available
# After:
not available
#### Function: __ashldi3
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 40, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 $r2, $sp, 12, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 16, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 20, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 36, 14, $noreg, debug-location !457 :: (store (s32) into %ir.all + 4, basealign 8); ../ashldi3.c:29:15
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 32, 14, $noreg, debug-location !457 :: (store (s32) into %ir.all, align 8); ../ashldi3.c:29:15
# Before:
bot
# After:
not available
## Instruction: TSTri renamable $r2, 32, 14, $noreg, implicit-def $cpsr, debug-location !459; ../ashldi3.c:30:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 0, killed $cpsr, debug-location !459; ../ashldi3.c:30:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !459; ../ashldi3.c:30:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg :: (load (s32) from %stack.4)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !461 :: (store (s32) into %ir.low, align 8); ../ashldi3.c:32:22
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 32, 14, $noreg, debug-location !462 :: (dereferenceable load (s32) from %ir.low2, align 8); ../ashldi3.c:33:33
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = nsw SUBri renamable $r1, 32, 14, $noreg, $noreg, debug-location !463; ../ashldi3.c:33:43
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r1, 2, 14, $noreg, $noreg, debug-location !464; ../ashldi3.c:33:37
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !467 :: (store (s32) into %ir.high); ../ashldi3.c:33:23
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !468; ../ashldi3.c:34:5
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !470 :: (load (s32) from %stack.4); ../ashldi3.c:37:13
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !470; ../ashldi3.c:37:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !470; ../ashldi3.c:37:13
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !470; ../ashldi3.c:37:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg :: (load (s32) from %stack.3)
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 20, 14, $noreg :: (load (s32) from %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !471; ../ashldi3.c:38:13
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r2 = LDRi12 $sp, 12, 14, $noreg, debug-location !472 :: (load (s32) from %stack.4); ../ashldi3.c:39:33
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 32, 14, $noreg, debug-location !472 :: (dereferenceable load (s32) from %ir.low6, align 8); ../ashldi3.c:39:33
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 2, 14, $noreg, $noreg, debug-location !473; ../ashldi3.c:39:37
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !475 :: (store (s32) into %ir.low9, align 8); ../ashldi3.c:39:23
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 32, 14, $noreg, debug-location !479 :: (dereferenceable load (s32) from %ir.low14, align 8); ../ashldi3.c:40:56
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !477 :: (dereferenceable load (s32) from %ir.high11); ../ashldi3.c:40:34
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 2, 14, $noreg, $noreg, debug-location !478; ../ashldi3.c:40:39
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = nsw RSBri renamable $r2, 32, 14, $noreg, $noreg, debug-location !480; ../ashldi3.c:40:77
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsr killed renamable $r0, killed renamable $r1, killed renamable $r2, 3, 14, $noreg, $noreg, debug-location !482; ../ashldi3.c:40:45
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !485 :: (store (s32) into %ir.high17); ../ashldi3.c:40:23
# Before:
bot
# After:
not available
## Instruction: B %bb.5
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !486 :: (dereferenceable load (s32) from %ir.all19, align 8); ../ashldi3.c:42:19
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !486 :: (dereferenceable load (s32) from %ir.all19 + 4, basealign 8); ../ashldi3.c:42:19
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !487; ../ashldi3.c:42:5
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !488 :: (load (s32) from %stack.6); ../ashldi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !488 :: (load (s32) from %stack.5); ../ashldi3.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 40, 14, $noreg, $noreg, debug-location !489; ../ashldi3.c:43:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !489; ../ashldi3.c:43:1
# Before:
not available
# After:
not available
#### Function: __ashrdi3
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 40, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 $r2, $sp, 12, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 16, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 20, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 36, 14, $noreg, debug-location !492 :: (store (s32) into %ir.all + 4, basealign 8); ../ashrdi3.c:29:15
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 32, 14, $noreg, debug-location !492 :: (store (s32) into %ir.all, align 8); ../ashrdi3.c:29:15
# Before:
bot
# After:
not available
## Instruction: TSTri renamable $r2, 32, 14, $noreg, implicit-def $cpsr, debug-location !494; ../ashrdi3.c:30:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 0, killed $cpsr, debug-location !494; ../ashrdi3.c:30:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !494; ../ashrdi3.c:30:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !496 :: (load (s32) from %stack.4); ../ashrdi3.c:33:33
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !496 :: (dereferenceable load (s32) from %ir.high); ../ashrdi3.c:33:33
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 249, 14, $noreg, $noreg, debug-location !497; ../ashrdi3.c:33:38
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !500 :: (store (s32) into %ir.high2); ../ashrdi3.c:33:23
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !502 :: (dereferenceable load (s32) from %ir.high4); ../ashrdi3.c:34:32
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = nsw SUBri renamable $r1, 32, 14, $noreg, $noreg, debug-location !503; ../ashrdi3.c:34:43
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r1, 1, 14, $noreg, $noreg, debug-location !504; ../ashrdi3.c:34:37
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !506 :: (store (s32) into %ir.low, align 8); ../ashrdi3.c:34:22
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !507; ../ashrdi3.c:35:5
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !509 :: (load (s32) from %stack.4); ../ashrdi3.c:38:13
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !509; ../ashrdi3.c:38:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !509; ../ashrdi3.c:38:13
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !509; ../ashrdi3.c:38:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg :: (load (s32) from %stack.3)
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 20, 14, $noreg :: (load (s32) from %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !510; ../ashrdi3.c:39:13
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r2 = LDRi12 $sp, 12, 14, $noreg, debug-location !512 :: (load (s32) from %stack.4); ../ashrdi3.c:40:34
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !512 :: (dereferenceable load (s32) from %ir.high9); ../ashrdi3.c:40:34
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 1, 14, $noreg, $noreg, debug-location !513; ../ashrdi3.c:40:39
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !516 :: (store (s32) into %ir.high12); ../ashrdi3.c:40:24
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 32, 14, $noreg, debug-location !521 :: (dereferenceable load (s32) from %ir.low17, align 8); ../ashrdi3.c:41:72
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !518 :: (dereferenceable load (s32) from %ir.high14); ../ashrdi3.c:41:33
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = nsw RSBri renamable $r2, 32, 14, $noreg, $noreg, debug-location !519; ../ashrdi3.c:41:55
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r3, 2, 14, $noreg, $noreg, debug-location !520; ../ashrdi3.c:41:38
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsr killed renamable $r0, killed renamable $r1, renamable $r2, 3, 14, $noreg, $noreg, debug-location !523; ../ashrdi3.c:41:61
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !525 :: (store (s32) into %ir.low20, align 8); ../ashrdi3.c:41:22
# Before:
bot
# After:
not available
## Instruction: B %bb.5
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !526 :: (dereferenceable load (s32) from %ir.all22, align 8); ../ashrdi3.c:43:19
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !526 :: (dereferenceable load (s32) from %ir.all22 + 4, basealign 8); ../ashrdi3.c:43:19
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !527; ../ashrdi3.c:43:5
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !528 :: (load (s32) from %stack.6); ../ashrdi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !528 :: (load (s32) from %stack.5); ../ashrdi3.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 40, 14, $noreg, $noreg, debug-location !529; ../ashrdi3.c:44:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !529; ../ashrdi3.c:44:1
# Before:
not available
# After:
not available
#### Function: __clzdi2
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 4, 14, $noreg, debug-location !532 :: (store (s32) into %ir.all + 4, basealign 8); ../clzdi2.c:25:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 0, 14, $noreg, debug-location !532 :: (store (s32) into %ir.all, align 8); ../clzdi2.c:25:11
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !538 :: (dereferenceable load (s32) from %ir.low, align 8); ../clzdi2.c:27:49
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !534 :: (dereferenceable load (s32) from %ir.high2); ../clzdi2.c:26:28
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r2, 0, 14, $noreg, implicit-def $cpsr, debug-location !539; ../clzdi2.c:27:42
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr $r2, 14, $noreg, $noreg, debug-location !539; ../clzdi2.c:27:42
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr killed renamable $r1, 0, killed $cpsr, $noreg, implicit renamable $r0, debug-location !539; ../clzdi2.c:27:42
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 11, 14, $noreg, $noreg, debug-location !540; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 19, 14, $noreg, $noreg, debug-location !540; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !540; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 67, 14, $noreg, $noreg, debug-location !540; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 131, 14, $noreg, $noreg, debug-location !540; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MVNr killed renamable $r0, 14, $noreg, $noreg, debug-location !540; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !540; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !540; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r3, renamable $r0, 19, 14, $noreg, $noreg, debug-location !540; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r3, 14, $noreg, $noreg, debug-location !540; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !540; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !540; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !540; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r3 = MULv5 killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !540; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r3, 195, 14, $noreg, $noreg, debug-location !540; ../clzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 32, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, killed renamable $r3, 195, 14, $noreg, $noreg, debug-location !543; ../clzdi2.c:27:59
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r2, 0, 14, $noreg, implicit-def $cpsr, debug-location !543; ../clzdi2.c:27:59
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr killed renamable $r1, 0, killed $cpsr, $noreg, implicit renamable $r0, debug-location !543; ../clzdi2.c:27:59
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 8, 14, $noreg, $noreg, debug-location !544; ../clzdi2.c:27:5
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !544; ../clzdi2.c:27:5
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
#### Function: __clzsi2
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r3 = MOVr killed $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPri renamable $r3, 65536, 14, $noreg, implicit-def $cpsr
# Before:
not available
# After:
not available
## Instruction: $r2 = MOVi 1, 3, killed $cpsr, $noreg, implicit renamable $r2
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r2, 34, 14, $noreg, $noreg, debug-location !547; ../clzsi2.c:25:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = nuw nsw SUBrsi killed renamable $r1, killed renamable $r2, 34, 14, $noreg, $noreg, debug-location !548; ../clzsi2.c:26:14
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsr renamable $r3, renamable $r12, 3, 14, $noreg, $noreg, debug-location !549; ../clzsi2.c:26:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 65280, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r3, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !550; ../clzsi2.c:29:13
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !550; ../clzsi2.c:29:13
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !550; ../clzsi2.c:29:13
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVi 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = nuw nsw SUBrsi killed renamable $r3, renamable $r1, 26, 14, $noreg, $noreg, debug-location !553; ../clzsi2.c:30:13
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVsr renamable $r2, renamable $r12, 3, 14, $noreg, $noreg, debug-location !554; ../clzsi2.c:30:7
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $r1, 26, 14, $noreg, $noreg, debug-location !555; ../clzsi2.c:31:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 240, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r2, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !556; ../clzsi2.c:33:13
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !556; ../clzsi2.c:33:13
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !556; ../clzsi2.c:33:13
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVi 4, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = nuw nsw SUBrsi killed renamable $r2, renamable $r1, 18, 14, $noreg, $noreg, debug-location !559; ../clzsi2.c:34:13
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsr renamable $r3, renamable $r12, 3, 14, $noreg, $noreg, debug-location !560; ../clzsi2.c:34:7
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $r1, 18, 14, $noreg, $noreg, debug-location !561; ../clzsi2.c:35:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 12, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r3, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !562; ../clzsi2.c:37:13
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !562; ../clzsi2.c:37:13
# Before:
not available
# After:
not available
## Instruction: renamable $lr = ADCrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !562; ../clzsi2.c:37:13
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 2, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = nuw nsw SUBrsi renamable $r1, renamable $lr, 10, 14, $noreg, $noreg, debug-location !565; ../clzsi2.c:38:13
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVsr renamable $r2, renamable $r12, 3, 14, $noreg, $noreg, debug-location !566; ../clzsi2.c:38:7
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $lr, 10, 14, $noreg, $noreg, debug-location !567; ../clzsi2.c:39:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrsr killed renamable $r1, killed renamable $r2, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !568; ../clzsi2.c:52:20
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MVNi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ORRrsi killed renamable $r2, killed renamable $r3, 11, 14, $noreg, $noreg, debug-location !569; ../clzsi2.c:52:37
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = nsw ADDri killed renamable $r2, 1, 14, $noreg, $noreg, debug-location !569; ../clzsi2.c:52:37
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !570; ../clzsi2.c:52:25
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !571; ../clzsi2.c:52:14
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !572; ../clzsi2.c:52:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !572; ../clzsi2.c:52:5
# Before:
not available
# After:
not available
#### Function: __cmpdi2
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 24, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 20, 14, $noreg, debug-location !575 :: (store (s32) into %ir.all + 4, basealign 8); ../cmpdi2.c:26:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 16, 14, $noreg, debug-location !575 :: (store (s32) into %ir.all, align 8); ../cmpdi2.c:26:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r3, $sp, 12, 14, $noreg, debug-location !577 :: (store (s32) into %ir.all1 + 4, basealign 8); ../cmpdi2.c:28:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, $sp, 8, 14, $noreg, debug-location !577 :: (store (s32) into %ir.all1, align 8); ../cmpdi2.c:28:11
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 20, 14, $noreg, debug-location !579 :: (dereferenceable load (s32) from %ir.high); ../cmpdi2.c:29:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !581 :: (dereferenceable load (s32) from %ir.high3); ../cmpdi2.c:29:24
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !583; ../cmpdi2.c:29:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 10, killed $cpsr, debug-location !583; ../cmpdi2.c:29:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !583; ../cmpdi2.c:29:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !584; ../cmpdi2.c:30:9
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = LDRi12 $sp, 20, 14, $noreg, debug-location !586 :: (dereferenceable load (s32) from %ir.high5); ../cmpdi2.c:31:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !588 :: (dereferenceable load (s32) from %ir.high7); ../cmpdi2.c:31:24
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !590; ../cmpdi2.c:31:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 13, killed $cpsr, debug-location !590; ../cmpdi2.c:31:9
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !590; ../cmpdi2.c:31:9
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: renamable $r0 = MOVi 2, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !591; ../cmpdi2.c:32:9
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !592 :: (dereferenceable load (s32) from %ir.low, align 8); ../cmpdi2.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !593 :: (dereferenceable load (s32) from %ir.low13, align 8); ../cmpdi2.c:33:23
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !595; ../cmpdi2.c:33:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 2, killed $cpsr, debug-location !595; ../cmpdi2.c:33:9
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !595; ../cmpdi2.c:33:9
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !596; ../cmpdi2.c:34:9
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: renamable $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !597 :: (dereferenceable load (s32) from %ir.low18, align 8); ../cmpdi2.c:35:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !598 :: (dereferenceable load (s32) from %ir.low20, align 8); ../cmpdi2.c:35:23
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !600; ../cmpdi2.c:35:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 9, killed $cpsr, debug-location !600; ../cmpdi2.c:35:9
# Before:
not available
# After:
not available
## Instruction: B %bb.7, debug-location !600; ../cmpdi2.c:35:9
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: renamable $r0 = MOVi 2, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !601; ../cmpdi2.c:36:9
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !602; ../cmpdi2.c:37:5
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !603 :: (load (s32) from %stack.2); ../cmpdi2.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 24, 14, $noreg, $noreg, debug-location !604; ../cmpdi2.c:38:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !604; ../cmpdi2.c:38:1
# Before:
not available
# After:
not available
#### Function: __ctzdi2
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 4, 14, $noreg, debug-location !611 :: (store (s32) into %ir.all + 4, basealign 8); ../ctzdi2.c:25:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 0, 14, $noreg, debug-location !611 :: (store (s32) into %ir.all, align 8); ../ctzdi2.c:25:11
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $sp, 0, 14, $noreg, debug-location !612 :: (dereferenceable load (s32) from %ir.low, align 8); ../ctzdi2.c:26:28
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !615 :: (dereferenceable load (s32) from %ir.high); ../ctzdi2.c:27:31
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r2, 0, 14, $noreg, implicit-def $cpsr, debug-location !616; ../ctzdi2.c:27:41
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r2, 14, $noreg, $noreg, debug-location !616; ../ctzdi2.c:27:41
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr killed renamable $r0, 0, killed $cpsr, $noreg, implicit renamable $r1, debug-location !616; ../ctzdi2.c:27:41
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !617; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = BICrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !617; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !617; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !617; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r3, renamable $r0, 19, 14, $noreg, $noreg, debug-location !617; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r3, 14, $noreg, $noreg, debug-location !617; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !617; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !617; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !617; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r3 = MULv5 killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !617; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r3, 195, 14, $noreg, $noreg, debug-location !617; ../ctzdi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 32, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, killed renamable $r3, 195, 14, $noreg, $noreg, debug-location !619; ../ctzdi2.c:27:59
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r2, 0, 14, $noreg, implicit-def $cpsr, debug-location !619; ../ctzdi2.c:27:59
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr killed renamable $r1, 0, killed $cpsr, $noreg, implicit renamable $r0, debug-location !619; ../ctzdi2.c:27:59
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 8, 14, $noreg, $noreg, debug-location !620; ../ctzdi2.c:27:5
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !620; ../ctzdi2.c:27:5
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
#### Function: __ctzsi2
### Basic Block: 0
## Instruction: $r2 = MOVr killed $r0, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: $r0 = MOVi 255, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r0 = ORRri $r0, 65280, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr renamable $r2, killed renamable $r0, 14, $noreg, $noreg, debug-location !622; ../ctzsi2.c:25:20
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = RSBri renamable $r0, 0, 14, $noreg, def $cpsr, debug-location !622; ../ctzsi2.c:25:20
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADCrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !622; ../ctzsi2.c:25:20
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 34, 14, $noreg, $noreg, debug-location !624; ../ctzsi2.c:25:40
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVsr renamable $r2, renamable $r0, 3, 14, $noreg, $noreg, debug-location !625; ../ctzsi2.c:26:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 255, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r2, renamable $r0, 3, 14, $noreg, $noreg, debug-location !626; ../ctzsi2.c:29:13
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !626; ../ctzsi2.c:29:13
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !626; ../ctzsi2.c:29:13
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVsi renamable $r1, 26, 14, $noreg, $noreg, debug-location !628; ../ctzsi2.c:29:29
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsr renamable $r3, renamable $r12, 3, 14, $noreg, $noreg, debug-location !629; ../ctzsi2.c:30:7
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $r1, 26, 14, $noreg, $noreg, debug-location !630; ../ctzsi2.c:31:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 15, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r3, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !631; ../ctzsi2.c:33:13
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !631; ../ctzsi2.c:33:13
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !631; ../ctzsi2.c:33:13
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVsi renamable $r1, 18, 14, $noreg, $noreg, debug-location !633; ../ctzsi2.c:33:27
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVsr renamable $r2, renamable $r12, 3, 14, $noreg, $noreg, debug-location !634; ../ctzsi2.c:34:7
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $r1, 18, 14, $noreg, $noreg, debug-location !635; ../ctzsi2.c:35:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 3, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r2, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !636; ../ctzsi2.c:37:13
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !636; ../ctzsi2.c:37:13
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !636; ../ctzsi2.c:37:13
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVsi renamable $r1, 10, 14, $noreg, $noreg, debug-location !638; ../ctzsi2.c:37:26
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsr renamable $r3, renamable $r12, 3, 14, $noreg, $noreg, debug-location !639; ../ctzsi2.c:38:7
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $r1, 10, 14, $noreg, $noreg, debug-location !640; ../ctzsi2.c:40:7
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, killed renamable $r2, 11, 14, $noreg, $noreg, debug-location !641; ../ctzsi2.c:56:25
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nuw nsw RSBri killed renamable $r1, 2, 14, $noreg, $noreg, debug-location !642; ../ctzsi2.c:56:20
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MVNi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ORRrsr killed renamable $r2, killed renamable $r3, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !643; ../ctzsi2.c:56:44
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = nsw ADDri killed renamable $r2, 1, 14, $noreg, $noreg, debug-location !643; ../ctzsi2.c:56:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !644; ../ctzsi2.c:56:32
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !645; ../ctzsi2.c:56:14
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !646; ../ctzsi2.c:56:5
# Before:
not available
# After:
not available
#### Function: __divdi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $lr = MOVr killed $r3, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r3 = MOVr killed $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVsi renamable $r3, 249, 14, $noreg, $noreg, debug-location !648; ../divdi3.c:23:20
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r3, 249, 14, $noreg, $noreg, debug-location !650; ../divdi3.c:25:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = EORrsi renamable $r3, renamable $r3, 249, 14, $noreg, $noreg, debug-location !650; ../divdi3.c:25:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrsi killed renamable $r0, renamable $r3, 249, 14, $noreg, def $cpsr, debug-location !651; ../divdi3.c:25:19
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SBCrsi killed renamable $r1, killed renamable $r3, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !651; ../divdi3.c:25:19
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = EORrsi killed renamable $r2, renamable $lr, 249, 14, $noreg, $noreg, debug-location !652; ../divdi3.c:26:12
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = EORrsi renamable $lr, renamable $lr, 249, 14, $noreg, $noreg, debug-location !652; ../divdi3.c:26:12
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = SUBrsi killed renamable $r2, renamable $lr, 249, 14, $noreg, def $cpsr, debug-location !653; ../divdi3.c:26:19
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = SBCrsi killed renamable $r3, renamable $lr, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !653; ../divdi3.c:26:19
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = EORrsi killed renamable $r12, killed renamable $lr, 249, 14, $noreg, $noreg, debug-location !654; ../divdi3.c:27:9
# Before:
not available
# After:
not available
## Instruction: STRi12 $r12, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: $lr = MOVr $sp, 14, $noreg, $noreg, debug-location !655; ../divdi3.c:28:13
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r12, killed renamable $lr, 0, 14, $noreg, debug-location !655 :: (store (s32) into stack); ../divdi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: BL_pred @__udivmoddi4, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !655; ../divdi3.c:28:13
# Before:
not available
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !655 :: (load (s32) from %stack.0); ../divdi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORrr killed renamable $r1, renamable $r2, 14, $noreg, $noreg, debug-location !656; ../divdi3.c:28:44
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrr killed renamable $r0, renamable $r2, 14, $noreg, $noreg, debug-location !656; ../divdi3.c:28:44
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, renamable $r2, 14, $noreg, def $cpsr, debug-location !657; ../divdi3.c:28:51
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SBCrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !657; ../divdi3.c:28:51
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !658; ../divdi3.c:28:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !658; ../divdi3.c:28:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !658; ../divdi3.c:28:5
# Before:
not available
# After:
not available
#### Function: __divmoddi4
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r4, killed $r5, killed $r6, killed $r7, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup ADDri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r3, $sp, 12, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: $r5 = MOVr killed $r2, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, 8, 14, $noreg :: (load (s32) from %fixed-stack.0)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r2, $sp, 8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r5, 14, $noreg, $noreg, debug-location !1023; ../divmoddi4.c:22:14
# Before:
not available
# After:
not available
## Instruction: BL_pred @__divdi3, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !1023; ../divmoddi4.c:22:14
# Before:
not available
# After:
not available
## Instruction: $r12 = LDRi12 $sp, 0, 14, $noreg, debug-location !1023 :: (load (s32) from %stack.3); ../divmoddi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !1023 :: (load (s32) from %stack.2); ../divmoddi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 8, 14, $noreg, debug-location !1023 :: (load (s32) from %stack.1); ../divmoddi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: $lr = LDRi12 $sp, 12, 14, $noreg, debug-location !1023 :: (load (s32) from %stack.0); ../divmoddi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r4, early-clobber renamable $r7 = UMULLv5 renamable $r0, renamable $r5, 14, $noreg, $noreg, debug-location !1024; ../divmoddi4.c:23:16
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r6 = MLAv5 renamable $r0, killed renamable $lr, killed renamable $r7, 14, $noreg, $noreg, debug-location !1024; ../divmoddi4.c:23:16
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $lr = MLAv5 renamable $r1, killed renamable $r5, killed renamable $r6, 14, $noreg, $noreg, debug-location !1024; ../divmoddi4.c:23:16
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = SUBrr killed renamable $r12, killed renamable $r4, 14, $noreg, def $cpsr, debug-location !1025; ../divmoddi4.c:23:12
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = SBCrr killed renamable $r2, killed renamable $lr, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1025; ../divmoddi4.c:23:12
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r12, renamable $r3, 0, 14, $noreg, debug-location !1026 :: (store (s32) into %ir.rem, align 8); ../divmoddi4.c:23:8
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, killed renamable $r3, 4, 14, $noreg, debug-location !1026 :: (store (s32) into %ir.rem + 4, basealign 8); ../divmoddi4.c:23:8
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy SUBri killed $r11, 16, 14, $noreg, $noreg, debug-location !1027; ../divmoddi4.c:24:3
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r4, def $r5, def $r6, def $r7, def $r11, def $lr, debug-location !1027; ../divmoddi4.c:24:3
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1027; ../divmoddi4.c:24:3
# Before:
not available
# After:
not available
#### Function: __divmodsi4
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r2, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: BL_pred @__divsi3, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1029; ../divmodsi4.c:22:14
# Before:
not available
# After:
not available
## Instruction: $r12 = LDRi12 $sp, 4, 14, $noreg, debug-location !1029 :: (load (s32) from %stack.2); ../divmodsi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1029 :: (load (s32) from %stack.1); ../divmodsi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $r11, -4, 14, $noreg, debug-location !1029 :: (load (s32) from %stack.0); ../divmodsi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r3 = nsw MULv5 renamable $r0, killed renamable $r12, 14, $noreg, $noreg, debug-location !1030; ../divmodsi4.c:23:16
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nsw SUBrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, debug-location !1031; ../divmodsi4.c:23:12
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, killed renamable $r2, 0, 14, $noreg, debug-location !1032 :: (store (s32) into %ir.rem); ../divmodsi4.c:23:8
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1033; ../divmodsi4.c:24:3
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1033; ../divmodsi4.c:24:3
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1033; ../divmodsi4.c:24:3
# Before:
not available
# After:
not available
#### Function: __divsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r3 = MOVr killed $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr killed $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsi renamable $r1, 249, 14, $noreg, $noreg, debug-location !1035; ../divsi3.c:25:20
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi renamable $r1, renamable $r1, 249, 14, $noreg, $noreg, debug-location !1037; ../divsi3.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBrsi killed renamable $r0, killed renamable $r1, 249, 14, $noreg, $noreg, debug-location !1038; ../divsi3.c:27:19
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = EORrsi renamable $r3, renamable $r3, 249, 14, $noreg, $noreg, debug-location !1039; ../divsi3.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nsw SUBrsi killed renamable $r1, renamable $r3, 249, 14, $noreg, $noreg, debug-location !1040; ../divsi3.c:28:19
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = EORrsi killed renamable $r2, killed renamable $r3, 249, 14, $noreg, $noreg, debug-location !1041; ../divsi3.c:29:9
# Before:
not available
# After:
not available
## Instruction: STRi12 $r2, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: BL &__udivsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1042; ../divsi3.c:36:22
# Before:
not available
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 4, 14, $noreg, debug-location !1042 :: (load (s32) from %stack.0); ../divsi3.c:36:22
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORrr killed renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1043; ../divsi3.c:36:33
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1044; ../divsi3.c:36:40
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1045; ../divsi3.c:36:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1045; ../divsi3.c:36:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1045; ../divsi3.c:36:5
# Before:
not available
# After:
not available
#### Function: __ffsdi2
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 12, 14, $noreg, debug-location !1048 :: (store (s32) into %ir.all + 4, basealign 8); ../ffsdi2.c:25:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 8, 14, $noreg, debug-location !1048 :: (store (s32) into %ir.all, align 8); ../ffsdi2.c:25:11
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !1049 :: (dereferenceable load (s32) from %ir.low, align 8); ../ffsdi2.c:26:13
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1051; ../ffsdi2.c:26:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !1051; ../ffsdi2.c:26:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1051; ../ffsdi2.c:26:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1053 :: (dereferenceable load (s32) from %ir.high); ../ffsdi2.c:28:17
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1055; ../ffsdi2.c:28:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 1, killed $cpsr, debug-location !1055; ../ffsdi2.c:28:13
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1055; ../ffsdi2.c:28:13
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !1056; ../ffsdi2.c:29:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1058 :: (dereferenceable load (s32) from %ir.high5); ../ffsdi2.c:30:34
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !1059; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = BICrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1059; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1059; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1059; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r2, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1059; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1059; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1059; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1059; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1059; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1059; ../ffsdi2.c:30:16
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 33, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, killed renamable $r1, 195, 14, $noreg, $noreg, debug-location !1060; ../ffsdi2.c:30:40
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !1061; ../ffsdi2.c:30:9
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1062 :: (dereferenceable load (s32) from %ir.low8, align 8); ../ffsdi2.c:32:30
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !1063; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = BICrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1063; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1063; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1063; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r2, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1063; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1063; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1063; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1063; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1063; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1063; ../ffsdi2.c:32:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, killed renamable $r1, 195, 14, $noreg, $noreg, debug-location !1064; ../ffsdi2.c:32:35
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !1065; ../ffsdi2.c:32:5
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1066 :: (load (s32) from %stack.1); ../ffsdi2.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 16, 14, $noreg, $noreg, debug-location !1067; ../ffsdi2.c:33:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1067; ../ffsdi2.c:33:1
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
#### Function: __ffssi2
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1070; ../ffssi2.c:24:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 1, killed $cpsr, debug-location !1070; ../ffssi2.c:24:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1070; ../ffssi2.c:24:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: B %bb.3, debug-location !1071; ../ffssi2.c:26:9
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r1 = LDRi12 $sp, 4, 14, $noreg, debug-location !1072 :: (load (s32) from %stack.0); ../ffssi2.c:28:12
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !1072; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = BICrr killed renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1072; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1072; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1072; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r2, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1072; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1072; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1072; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1072; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1072; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1072; ../ffssi2.c:28:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, killed renamable $r1, 195, 14, $noreg, $noreg, debug-location !1073; ../ffssi2.c:28:29
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: B %bb.3, debug-location !1074; ../ffssi2.c:28:5
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1075 :: (load (s32) from %stack.1); ../ffssi2.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 8, 14, $noreg, $noreg, debug-location !1076; ../ffssi2.c:29:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1076; ../ffssi2.c:29:1
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
#### Function: __lshrdi3
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 40, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 $r2, $sp, 12, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 16, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 20, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 36, 14, $noreg, debug-location !1079 :: (store (s32) into %ir.all + 4, basealign 8); ../lshrdi3.c:29:15
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 32, 14, $noreg, debug-location !1079 :: (store (s32) into %ir.all, align 8); ../lshrdi3.c:29:15
# Before:
bot
# After:
not available
## Instruction: TSTri renamable $r2, 32, 14, $noreg, implicit-def $cpsr, debug-location !1081; ../lshrdi3.c:30:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 0, killed $cpsr, debug-location !1081; ../lshrdi3.c:30:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1081; ../lshrdi3.c:30:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg :: (load (s32) from %stack.4)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !1084 :: (store (s32) into %ir.high); ../lshrdi3.c:32:23
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !1086 :: (dereferenceable load (s32) from %ir.high2); ../lshrdi3.c:33:32
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = nsw SUBri renamable $r1, 32, 14, $noreg, $noreg, debug-location !1087; ../lshrdi3.c:33:43
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r1, 3, 14, $noreg, $noreg, debug-location !1088; ../lshrdi3.c:33:37
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !1090 :: (store (s32) into %ir.low, align 8); ../lshrdi3.c:33:22
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !1091; ../lshrdi3.c:34:5
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1093 :: (load (s32) from %stack.4); ../lshrdi3.c:37:13
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1093; ../lshrdi3.c:37:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !1093; ../lshrdi3.c:37:13
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !1093; ../lshrdi3.c:37:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg :: (load (s32) from %stack.3)
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 20, 14, $noreg :: (load (s32) from %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !1094; ../lshrdi3.c:38:13
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r2 = LDRi12 $sp, 12, 14, $noreg, debug-location !1096 :: (load (s32) from %stack.4); ../lshrdi3.c:39:34
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !1096 :: (dereferenceable load (s32) from %ir.high6); ../lshrdi3.c:39:34
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 3, 14, $noreg, $noreg, debug-location !1097; ../lshrdi3.c:39:39
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !1100 :: (store (s32) into %ir.high9); ../lshrdi3.c:39:24
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 32, 14, $noreg, debug-location !1105 :: (dereferenceable load (s32) from %ir.low14, align 8); ../lshrdi3.c:40:72
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !1102 :: (dereferenceable load (s32) from %ir.high11); ../lshrdi3.c:40:33
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = nsw RSBri renamable $r2, 32, 14, $noreg, $noreg, debug-location !1103; ../lshrdi3.c:40:55
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r3, 2, 14, $noreg, $noreg, debug-location !1104; ../lshrdi3.c:40:38
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsr killed renamable $r0, killed renamable $r1, renamable $r2, 3, 14, $noreg, $noreg, debug-location !1107; ../lshrdi3.c:40:61
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !1109 :: (store (s32) into %ir.low17, align 8); ../lshrdi3.c:40:22
# Before:
bot
# After:
not available
## Instruction: B %bb.5
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !1110 :: (dereferenceable load (s32) from %ir.all19, align 8); ../lshrdi3.c:42:19
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !1110 :: (dereferenceable load (s32) from %ir.all19 + 4, basealign 8); ../lshrdi3.c:42:19
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !1111; ../lshrdi3.c:42:5
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1112 :: (load (s32) from %stack.6); ../lshrdi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1112 :: (load (s32) from %stack.5); ../lshrdi3.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 40, 14, $noreg, $noreg, debug-location !1113; ../lshrdi3.c:43:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1113; ../lshrdi3.c:43:1
# Before:
not available
# After:
not available
#### Function: __moddi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r12 = MOVr killed $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r12, $sp, 4, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r2, renamable $r3, 249, 14, $noreg, def $cpsr, debug-location !1115; ../moddi3.c:24:17
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = EORrsi killed renamable $r1, renamable $r3, 249, 14, $noreg, $noreg, debug-location !1115; ../moddi3.c:24:17
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrsi renamable $r3, renamable $r3, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1115; ../moddi3.c:24:17
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = EORrsi killed renamable $r1, killed renamable $r3, 249, 14, $noreg, $noreg, debug-location !1115; ../moddi3.c:24:17
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r12, 249, 14, $noreg, $noreg, debug-location !1117; ../moddi3.c:26:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = EORrsi renamable $r12, renamable $r12, 249, 14, $noreg, $noreg, debug-location !1117; ../moddi3.c:26:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrsi killed renamable $r0, renamable $r12, 249, 14, $noreg, def $cpsr, debug-location !1118; ../moddi3.c:26:17
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SBCrsi killed renamable $r1, renamable $r12, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1118; ../moddi3.c:26:17
# Before:
not available
# After:
not available
## Instruction: $lr = MOVr $sp, 14, $noreg, $noreg, debug-location !1119; ../moddi3.c:28:5
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ADDri $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r12, killed renamable $lr, 0, 14, $noreg, debug-location !1119 :: (store (s32) into stack); ../moddi3.c:28:5
# Before:
bot
# After:
not available
## Instruction: BL_pred @__udivmoddi4, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !1119; ../moddi3.c:28:5
# Before:
not available
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !1119 :: (load (s32) from %stack.1); ../moddi3.c:28:5
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !1120 :: (dereferenceable load (s32) from %ir.r, align 8); ../moddi3.c:29:21
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1120 :: (dereferenceable load (s32) from %ir.r + 4, basealign 8); ../moddi3.c:29:21
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORrsi killed renamable $r1, renamable $r2, 249, 14, $noreg, $noreg, debug-location !1121; ../moddi3.c:29:23
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r2, 249, 14, $noreg, $noreg, debug-location !1121; ../moddi3.c:29:23
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrsi killed renamable $r0, renamable $r2, 249, 14, $noreg, def $cpsr, debug-location !1122; ../moddi3.c:29:28
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SBCrsi killed renamable $r1, killed renamable $r2, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1122; ../moddi3.c:29:28
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1123; ../moddi3.c:29:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1123; ../moddi3.c:29:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1123; ../moddi3.c:29:5
# Before:
not available
# After:
not available
#### Function: __modsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: BL_pred @__divsi3, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1125; ../modsi3.c:22:16
# Before:
not available
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 0, 14, $noreg, debug-location !1125 :: (load (s32) from %stack.1); ../modsi3.c:22:16
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg, debug-location !1125; ../modsi3.c:22:16
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1126 :: (load (s32) from %stack.0); ../modsi3.c:22:31
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r1 = nsw MULv5 killed renamable $r2, killed renamable $r3, 14, $noreg, $noreg, debug-location !1126; ../modsi3.c:22:31
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1127; ../modsi3.c:22:14
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1128; ../modsi3.c:22:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1128; ../modsi3.c:22:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1128; ../modsi3.c:22:5
# Before:
not available
# After:
not available
#### Function: __mulvdi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r4, killed $r10, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup ADDri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 48, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $r11, -24, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r2, $r11, -20, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $r11, -16, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $r11, -12, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORri killed renamable $r1, -2147483648, 14, $noreg, $noreg, debug-location !1130; ../mulvdi3.c:27:11
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1130; ../mulvdi3.c:27:11
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1131; ../mulvdi3.c:27:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.5, 1, killed $cpsr, debug-location !1131; ../mulvdi3.c:27:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1131; ../mulvdi3.c:27:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $r11, -20, 14, $noreg, debug-location !1132 :: (load (s32) from %stack.2); ../mulvdi3.c:29:15
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -24, 14, $noreg, debug-location !1132 :: (load (s32) from %stack.3); ../mulvdi3.c:29:15
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ORRrr renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1132; ../mulvdi3.c:29:15
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1133; ../mulvdi3.c:29:20
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 0, killed $cpsr, debug-location !1133; ../mulvdi3.c:29:20
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1133; ../mulvdi3.c:29:20
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r1 = LDRi12 $r11, -24, 14, $noreg, debug-location !1134 :: (load (s32) from %stack.3); ../mulvdi3.c:29:25
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -20, 14, $noreg, debug-location !1134 :: (load (s32) from %stack.2); ../mulvdi3.c:29:25
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORri renamable $r0, 1, 14, $noreg, $noreg, debug-location !1134; ../mulvdi3.c:29:25
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1134; ../mulvdi3.c:29:25
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1135; ../mulvdi3.c:29:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !1135; ../mulvdi3.c:29:13
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !1135; ../mulvdi3.c:29:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.21, debug-location !1136; ../mulvdi3.c:30:13
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1137 :: (load (s32) from constant-pool); ../mulvdi3.c:31:9
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1137 :: (load (s32) from constant-pool); ../mulvdi3.c:31:9
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 31, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1137; ../mulvdi3.c:31:9
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $r0 = LDRi12 $r11, -20, 14, $noreg, debug-location !1138 :: (load (s32) from %stack.2); ../mulvdi3.c:33:11
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -24, 14, $noreg, debug-location !1138 :: (load (s32) from %stack.3); ../mulvdi3.c:33:11
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORri renamable $r1, -2147483648, 14, $noreg, $noreg, debug-location !1138; ../mulvdi3.c:33:11
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1138; ../mulvdi3.c:33:11
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1139; ../mulvdi3.c:33:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.10, 1, killed $cpsr, debug-location !1139; ../mulvdi3.c:33:9
# Before:
not available
# After:
not available
## Instruction: B %bb.6, debug-location !1139; ../mulvdi3.c:33:9
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !1140 :: (load (s32) from %stack.0); ../mulvdi3.c:35:15
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !1140 :: (load (s32) from %stack.1); ../mulvdi3.c:35:15
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ORRrr renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1140; ../mulvdi3.c:35:15
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1141; ../mulvdi3.c:35:20
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 0, killed $cpsr, debug-location !1141; ../mulvdi3.c:35:20
# Before:
not available
# After:
not available
## Instruction: B %bb.7, debug-location !1141; ../mulvdi3.c:35:20
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !1142 :: (load (s32) from %stack.1); ../mulvdi3.c:35:25
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !1142 :: (load (s32) from %stack.0); ../mulvdi3.c:35:25
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORri renamable $r0, 1, 14, $noreg, $noreg, debug-location !1142; ../mulvdi3.c:35:25
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1142; ../mulvdi3.c:35:25
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1143; ../mulvdi3.c:35:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.9, 1, killed $cpsr, debug-location !1143; ../mulvdi3.c:35:13
# Before:
not available
# After:
not available
## Instruction: B %bb.8, debug-location !1143; ../mulvdi3.c:35:13
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: B %bb.21, debug-location !1144; ../mulvdi3.c:36:13
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1145 :: (load (s32) from constant-pool); ../mulvdi3.c:37:9
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1145 :: (load (s32) from constant-pool); ../mulvdi3.c:37:9
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 37, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1145; ../mulvdi3.c:37:9
# Before:
not available
# After:
not available
### Basic Block: 10
## Instruction: $r3 = LDRi12 $r11, -24, 14, $noreg, debug-location !1146 :: (load (s32) from %stack.3); ../mulvdi3.c:39:19
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $r11, -20, 14, $noreg, debug-location !1146 :: (load (s32) from %stack.2); ../mulvdi3.c:39:19
# Before:
bot
# After:
not available
## Instruction: $r12 = LDRi12 $r11, -16, 14, $noreg, debug-location !1146 :: (load (s32) from %stack.1); ../mulvdi3.c:39:19
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !1146 :: (load (s32) from %stack.0); ../mulvdi3.c:39:19
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVsi renamable $r12, 249, 14, $noreg, $noreg, debug-location !1146; ../mulvdi3.c:39:19
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 0, 14, $noreg :: (store (s32) into %stack.11)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.10)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORrsi renamable $r0, renamable $r12, 249, 14, $noreg, $noreg, debug-location !1147; ../mulvdi3.c:40:23
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi renamable $r12, renamable $r12, 249, 14, $noreg, $noreg, debug-location !1147; ../mulvdi3.c:40:23
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrsi killed renamable $r1, renamable $r12, 249, 14, $noreg, def $cpsr, debug-location !1148; ../mulvdi3.c:40:29
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 8, 14, $noreg :: (store (s32) into %stack.9)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SBCrsi killed renamable $r0, renamable $r12, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1148; ../mulvdi3.c:40:29
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 12, 14, $noreg :: (store (s32) into %stack.8)
# Before:
bot
# After:
not available
## Instruction: renamable $r12 = MOVsi renamable $r3, 249, 14, $noreg, $noreg, debug-location !1149; ../mulvdi3.c:41:19
# Before:
not available
# After:
not available
## Instruction: STRi12 $r12, $sp, 16, 14, $noreg :: (store (s32) into %stack.7)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r12, $sp, 20, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: renamable $r12 = EORrsi renamable $r2, renamable $r3, 249, 14, $noreg, $noreg, debug-location !1150; ../mulvdi3.c:42:23
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = EORrsi renamable $r3, renamable $r3, 249, 14, $noreg, $noreg, debug-location !1150; ../mulvdi3.c:42:23
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = SUBrsi killed renamable $r12, renamable $r3, 249, 14, $noreg, def $cpsr, debug-location !1151; ../mulvdi3.c:42:29
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r12, $sp, 24, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = SBCrsi killed renamable $r2, renamable $r3, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1151; ../mulvdi3.c:42:29
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 28, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: dead renamable $r1 = SUBri renamable $r1, 2, 14, $noreg, def $cpsr, debug-location !1152; ../mulvdi3.c:43:15
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCri renamable $r0, 0, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !1152; ../mulvdi3.c:43:15
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.12, 11, killed $cpsr, debug-location !1153; ../mulvdi3.c:43:19
# Before:
not available
# After:
not available
## Instruction: B %bb.11, debug-location !1153; ../mulvdi3.c:43:19
# Before:
not available
# After:
not available
### Basic Block: 11
## Instruction: $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !1154 :: (load (s32) from %stack.4); ../mulvdi3.c:43:28
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !1154 :: (load (s32) from %stack.5); ../mulvdi3.c:43:28
# Before:
bot
# After:
not available
## Instruction: dead renamable $r1 = RSBri renamable $r1, 1, 14, $noreg, def $cpsr, debug-location !1154; ../mulvdi3.c:43:28
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = RSCri renamable $r0, 0, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !1154; ../mulvdi3.c:43:28
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.13, 11, killed $cpsr, debug-location !1155; ../mulvdi3.c:43:9
# Before:
not available
# After:
not available
## Instruction: B %bb.12, debug-location !1155; ../mulvdi3.c:43:9
# Before:
not available
# After:
not available
### Basic Block: 12
## Instruction: B %bb.21, debug-location !1156; ../mulvdi3.c:44:9
# Before:
not available
# After:
not available
### Basic Block: 13
## Instruction: $r1 = LDRi12 $sp, 4, 14, $noreg, debug-location !1157 :: (load (s32) from %stack.10); ../mulvdi3.c:45:12
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 20, 14, $noreg, debug-location !1157 :: (load (s32) from %stack.6); ../mulvdi3.c:45:12
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1157 :: (load (s32) from %stack.11); ../mulvdi3.c:45:12
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 16, 14, $noreg, debug-location !1157 :: (load (s32) from %stack.7); ../mulvdi3.c:45:12
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORrr renamable $r0, renamable $r3, 14, $noreg, $noreg, debug-location !1157; ../mulvdi3.c:45:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = EORrr renamable $r1, renamable $r2, 14, $noreg, $noreg, debug-location !1157; ../mulvdi3.c:45:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1157; ../mulvdi3.c:45:12
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1158; ../mulvdi3.c:45:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.17, 1, killed $cpsr, debug-location !1158; ../mulvdi3.c:45:9
# Before:
not available
# After:
not available
## Instruction: B %bb.14, debug-location !1158; ../mulvdi3.c:45:9
# Before:
not available
# After:
not available
### Basic Block: 14
## Instruction: $r3 = LDRi12 $sp, 28, 14, $noreg, debug-location !1159 :: (load (s32) from %stack.4); ../mulvdi3.c:47:25
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 24, 14, $noreg, debug-location !1159 :: (load (s32) from %stack.5); ../mulvdi3.c:47:25
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MVNi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MVNi -2147483648, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL &__divdi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !1159; ../mulvdi3.c:47:25
# Before:
not available
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 8, 14, $noreg, debug-location !1159 :: (load (s32) from %stack.9); ../mulvdi3.c:47:25
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg, debug-location !1159; ../mulvdi3.c:47:25
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1159 :: (load (s32) from %stack.8); ../mulvdi3.c:47:25
# Before:
bot
# After:
not available
## Instruction: dead renamable $r2 = SUBrr killed renamable $r2, renamable $r3, 14, $noreg, def $cpsr, debug-location !1160; ../mulvdi3.c:47:19
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCrr killed renamable $r1, renamable $r0, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !1160; ../mulvdi3.c:47:19
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.16, 10, killed $cpsr, debug-location !1161; ../mulvdi3.c:47:13
# Before:
not available
# After:
not available
## Instruction: B %bb.15, debug-location !1161; ../mulvdi3.c:47:13
# Before:
not available
# After:
not available
### Basic Block: 15
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1162 :: (load (s32) from constant-pool); ../mulvdi3.c:48:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1162 :: (load (s32) from constant-pool); ../mulvdi3.c:48:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 48, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1162; ../mulvdi3.c:48:13
# Before:
not available
# After:
not available
### Basic Block: 16
## Instruction: B %bb.20, debug-location !1163; ../mulvdi3.c:49:5
# Before:
not available
# After:
not available
### Basic Block: 17
## Instruction: $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !1164 :: (load (s32) from %stack.4); ../mulvdi3.c:52:27
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !1164 :: (load (s32) from %stack.5); ../mulvdi3.c:52:27
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !1164; ../mulvdi3.c:52:27
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = RSCri renamable $r0, 0, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1164; ../mulvdi3.c:52:27
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi -2147483648, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL &__divdi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !1165; ../mulvdi3.c:52:25
# Before:
not available
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 8, 14, $noreg, debug-location !1165 :: (load (s32) from %stack.9); ../mulvdi3.c:52:25
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg, debug-location !1165; ../mulvdi3.c:52:25
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1165 :: (load (s32) from %stack.8); ../mulvdi3.c:52:25
# Before:
bot
# After:
not available
## Instruction: dead renamable $r2 = SUBrr killed renamable $r2, renamable $r3, 14, $noreg, def $cpsr, debug-location !1166; ../mulvdi3.c:52:19
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCrr killed renamable $r1, renamable $r0, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !1166; ../mulvdi3.c:52:19
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.19, 10, killed $cpsr, debug-location !1167; ../mulvdi3.c:52:13
# Before:
not available
# After:
not available
## Instruction: B %bb.18, debug-location !1167; ../mulvdi3.c:52:13
# Before:
not available
# After:
not available
### Basic Block: 18
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1168 :: (load (s32) from constant-pool); ../mulvdi3.c:53:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1168 :: (load (s32) from constant-pool); ../mulvdi3.c:53:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 53, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1168; ../mulvdi3.c:53:13
# Before:
not available
# After:
not available
### Basic Block: 19
## Instruction: B %bb.20
# Before:
not available
# After:
not available
### Basic Block: 20
## Instruction: B %bb.21, debug-location !1169; ../mulvdi3.c:55:5
# Before:
not available
# After:
not available
### Basic Block: 21
## Instruction: $r2 = LDRi12 $r11, -16, 14, $noreg, debug-location !1170 :: (load (s32) from %stack.1); ../mulvdi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $r11, -20, 14, $noreg, debug-location !1170 :: (load (s32) from %stack.2); ../mulvdi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -12, 14, $noreg, debug-location !1170 :: (load (s32) from %stack.0); ../mulvdi3.c:0
# Before:
bot
# After:
not available
## Instruction: $lr = LDRi12 $r11, -24, 14, $noreg, debug-location !1170 :: (load (s32) from %stack.3); ../mulvdi3.c:0
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r0, early-clobber renamable $r4 = UMULLv5 renamable $r1, renamable $r3, 14, $noreg, $noreg, debug-location !1170; ../mulvdi3.c:0
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r12 = MLAv5 killed renamable $r1, killed renamable $lr, killed renamable $r4, 14, $noreg, $noreg, debug-location !1170; ../mulvdi3.c:0
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r1 = MLAv5 killed renamable $r2, killed renamable $r3, killed renamable $r12, 14, $noreg, $noreg, debug-location !1170; ../mulvdi3.c:0
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy SUBri killed $r11, 8, 14, $noreg, $noreg, debug-location !1171; ../mulvdi3.c:56:1
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r4, def $r10, def $r11, def $lr, debug-location !1171; ../mulvdi3.c:56:1
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1171; ../mulvdi3.c:56:1
# Before:
not available
# After:
not available
### Basic Block: 22
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: __mulvsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 24, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $r11, -8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, -2147483648, 14, $noreg, implicit-def $cpsr, debug-location !1174; ../mulvsi3.c:27:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.5, 1, killed $cpsr, debug-location !1174; ../mulvsi3.c:27:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1174; ../mulvsi3.c:27:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1176 :: (load (s32) from %stack.1); ../mulvsi3.c:29:20
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1176; ../mulvsi3.c:29:20
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 0, killed $cpsr, debug-location !1176; ../mulvsi3.c:29:20
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1176; ../mulvsi3.c:29:20
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1178 :: (load (s32) from %stack.1); ../mulvsi3.c:29:13
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !1178; ../mulvsi3.c:29:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !1178; ../mulvsi3.c:29:13
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !1178; ../mulvsi3.c:29:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.21, debug-location !1179; ../mulvsi3.c:30:13
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1180 :: (load (s32) from constant-pool); ../mulvsi3.c:31:9
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1180 :: (load (s32) from constant-pool); ../mulvsi3.c:31:9
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 31, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1180; ../mulvsi3.c:31:9
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1182 :: (load (s32) from %stack.1); ../mulvsi3.c:33:9
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, -2147483648, 14, $noreg, implicit-def $cpsr, debug-location !1182; ../mulvsi3.c:33:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.10, 1, killed $cpsr, debug-location !1182; ../mulvsi3.c:33:9
# Before:
not available
# After:
not available
## Instruction: B %bb.6, debug-location !1182; ../mulvsi3.c:33:9
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1184 :: (load (s32) from %stack.0); ../mulvsi3.c:35:20
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1184; ../mulvsi3.c:35:20
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 0, killed $cpsr, debug-location !1184; ../mulvsi3.c:35:20
# Before:
not available
# After:
not available
## Instruction: B %bb.7, debug-location !1184; ../mulvsi3.c:35:20
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1186 :: (load (s32) from %stack.0); ../mulvsi3.c:35:13
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !1186; ../mulvsi3.c:35:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.9, 1, killed $cpsr, debug-location !1186; ../mulvsi3.c:35:13
# Before:
not available
# After:
not available
## Instruction: B %bb.8, debug-location !1186; ../mulvsi3.c:35:13
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: B %bb.21, debug-location !1187; ../mulvsi3.c:36:13
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1188 :: (load (s32) from constant-pool); ../mulvsi3.c:37:9
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1188 :: (load (s32) from constant-pool); ../mulvsi3.c:37:9
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 37, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1188; ../mulvsi3.c:37:9
# Before:
not available
# After:
not available
### Basic Block: 10
## Instruction: $r2 = LDRi12 $r11, -8, 14, $noreg, debug-location !1189 :: (load (s32) from %stack.1); ../mulvsi3.c:39:19
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !1189 :: (load (s32) from %stack.0); ../mulvsi3.c:39:19
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r1, 249, 14, $noreg, $noreg, debug-location !1189; ../mulvsi3.c:39:19
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORrsi renamable $r1, renamable $r1, 249, 14, $noreg, $noreg, debug-location !1190; ../mulvsi3.c:40:23
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBrsi killed renamable $r0, renamable $r1, 249, 14, $noreg, $noreg, debug-location !1191; ../mulvsi3.c:40:29
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVsi renamable $r2, 249, 14, $noreg, $noreg, debug-location !1192; ../mulvsi3.c:41:19
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 8, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORrsi renamable $r2, renamable $r2, 249, 14, $noreg, $noreg, debug-location !1193; ../mulvsi3.c:42:23
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nsw SUBrsi killed renamable $r1, renamable $r2, 249, 14, $noreg, $noreg, debug-location !1194; ../mulvsi3.c:42:29
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 12, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 2, 14, $noreg, implicit-def $cpsr, debug-location !1196; ../mulvsi3.c:43:19
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.12, 11, killed $cpsr, debug-location !1196; ../mulvsi3.c:43:19
# Before:
not available
# After:
not available
## Instruction: B %bb.11, debug-location !1196; ../mulvsi3.c:43:19
# Before:
not available
# After:
not available
### Basic Block: 11
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1198 :: (load (s32) from %stack.2); ../mulvsi3.c:43:9
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !1198; ../mulvsi3.c:43:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.13, 12, killed $cpsr, debug-location !1198; ../mulvsi3.c:43:9
# Before:
not available
# After:
not available
## Instruction: B %bb.12, debug-location !1198; ../mulvsi3.c:43:9
# Before:
not available
# After:
not available
### Basic Block: 12
## Instruction: B %bb.21, debug-location !1199; ../mulvsi3.c:44:9
# Before:
not available
# After:
not available
### Basic Block: 13
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1201 :: (load (s32) from %stack.5); ../mulvsi3.c:45:9
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1201 :: (load (s32) from %stack.3); ../mulvsi3.c:45:9
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1201; ../mulvsi3.c:45:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.17, 1, killed $cpsr, debug-location !1201; ../mulvsi3.c:45:9
# Before:
not available
# After:
not available
## Instruction: B %bb.14, debug-location !1201; ../mulvsi3.c:45:9
# Before:
not available
# After:
not available
### Basic Block: 14
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1202 :: (load (s32) from %stack.2); ../mulvsi3.c:47:25
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MVNi -2147483648, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL &__divsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1202; ../mulvsi3.c:47:25
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg, debug-location !1202; ../mulvsi3.c:47:25
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1204 :: (load (s32) from %stack.4); ../mulvsi3.c:47:13
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1204; ../mulvsi3.c:47:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.16, 13, killed $cpsr, debug-location !1204; ../mulvsi3.c:47:13
# Before:
not available
# After:
not available
## Instruction: B %bb.15, debug-location !1204; ../mulvsi3.c:47:13
# Before:
not available
# After:
not available
### Basic Block: 15
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1205 :: (load (s32) from constant-pool); ../mulvsi3.c:48:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1205 :: (load (s32) from constant-pool); ../mulvsi3.c:48:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 48, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1205; ../mulvsi3.c:48:13
# Before:
not available
# After:
not available
### Basic Block: 16
## Instruction: B %bb.20, debug-location !1206; ../mulvsi3.c:49:5
# Before:
not available
# After:
not available
### Basic Block: 17
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1207 :: (load (s32) from %stack.2); ../mulvsi3.c:52:27
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = nsw RSBri renamable $r0, 0, 14, $noreg, $noreg, debug-location !1207; ../mulvsi3.c:52:27
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi -2147483648, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL &__divsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1208; ../mulvsi3.c:52:25
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg, debug-location !1208; ../mulvsi3.c:52:25
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1210 :: (load (s32) from %stack.4); ../mulvsi3.c:52:13
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1210; ../mulvsi3.c:52:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.19, 13, killed $cpsr, debug-location !1210; ../mulvsi3.c:52:13
# Before:
not available
# After:
not available
## Instruction: B %bb.18, debug-location !1210; ../mulvsi3.c:52:13
# Before:
not available
# After:
not available
### Basic Block: 18
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1211 :: (load (s32) from constant-pool); ../mulvsi3.c:53:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1211 :: (load (s32) from constant-pool); ../mulvsi3.c:53:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 53, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1211; ../mulvsi3.c:53:13
# Before:
not available
# After:
not available
### Basic Block: 19
## Instruction: B %bb.20
# Before:
not available
# After:
not available
### Basic Block: 20
## Instruction: B %bb.21, debug-location !1212; ../mulvsi3.c:55:5
# Before:
not available
# After:
not available
### Basic Block: 21
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !1213 :: (load (s32) from %stack.0); ../mulvsi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $r11, -8, 14, $noreg, debug-location !1213 :: (load (s32) from %stack.1); ../mulvsi3.c:0
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r0 = nsw MULv5 killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !1213; ../mulvsi3.c:0
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1214; ../mulvsi3.c:56:1
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1214; ../mulvsi3.c:56:1
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1214; ../mulvsi3.c:56:1
# Before:
not available
# After:
not available
### Basic Block: 22
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: __paritydi2
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 4, 14, $noreg, debug-location !1217 :: (store (s32) into %ir.all + 4, basealign 8); ../paritydi2.c:23:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 0, 14, $noreg, debug-location !1217 :: (store (s32) into %ir.all, align 8); ../paritydi2.c:23:11
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !1220 :: (dereferenceable load (s32) from %ir.low, align 8); ../paritydi2.c:24:39
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1219 :: (dereferenceable load (s32) from %ir.high); ../paritydi2.c:24:28
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1221; ../paritydi2.c:24:33
# Before:
not available
# After:
not available
## Instruction: BL_pred @__paritysi2, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit-def $sp, implicit-def $r0, debug-location !1222; ../paritydi2.c:24:12
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1223; ../paritydi2.c:24:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1223; ../paritydi2.c:24:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1223; ../paritydi2.c:24:5
# Before:
not available
# After:
not available
#### Function: __paritysi2
### Basic Block: 0
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r0, 131, 14, $noreg, $noreg, debug-location !1226; ../paritysi2.c:23:7
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r0, 67, 14, $noreg, $noreg, debug-location !1228; ../paritysi2.c:24:7
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1230; ../paritysi2.c:25:7
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ANDri killed renamable $r0, 15, 14, $noreg, $noreg, debug-location !1231; ../paritysi2.c:26:26
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVi 150, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = ORRri $r1, 26880, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrsr killed renamable $r0, killed renamable $r1, killed renamable $r2, 3, 14, $noreg, $noreg, debug-location !1233; ../paritysi2.c:26:34
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1234; ../paritysi2.c:26:5
# Before:
not available
# After:
not available
#### Function: __popcountdi2
### Basic Block: 0
## Instruction: $r2 = MOVr killed $r0, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: $r0 = MOVsi renamable $r1, 11, 14, $noreg, def $cpsr, debug-location !1236; ../popcountdi2.c:23:20
# Before:
not available
# After:
not available
## Instruction: $r3 = MOVsi renamable $r2, 5, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1236; ../popcountdi2.c:23:20
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, renamable $r12, 14, $noreg, $noreg, debug-location !1237; ../popcountdi2.c:23:26
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = ANDrr killed renamable $r3, killed renamable $r12, 14, $noreg, $noreg, debug-location !1237; ../popcountdi2.c:23:26
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = SUBrr killed renamable $r2, killed renamable $r3, 14, $noreg, def $cpsr, debug-location !1238; ../popcountdi2.c:23:13
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = SBCrr killed renamable $r1, killed renamable $r0, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1238; ../popcountdi2.c:23:13
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r12, renamable $r3, 19, 14, $noreg, $noreg, debug-location !1240; ../popcountdi2.c:25:21
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrsi renamable $r12, renamable $r2, 19, 14, $noreg, $noreg, debug-location !1240; ../popcountdi2.c:25:21
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = ANDrr killed renamable $r3, renamable $r12, 14, $noreg, $noreg, debug-location !1241; ../popcountdi2.c:25:52
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ANDrr killed renamable $r2, killed renamable $r12, 14, $noreg, $noreg, debug-location !1241; ../popcountdi2.c:25:52
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, debug-location !1242; ../popcountdi2.c:25:46
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1242; ../popcountdi2.c:25:46
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, renamable $r1, 35, 14, $noreg, $noreg, debug-location !1244; ../popcountdi2.c:27:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1244; ../popcountdi2.c:27:14
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, renamable $r2, 14, $noreg, $noreg, debug-location !1245; ../popcountdi2.c:27:27
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1245; ../popcountdi2.c:27:27
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1247; ../popcountdi2.c:29:28
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, renamable $r0, 131, 14, $noreg, $noreg, debug-location !1250; ../popcountdi2.c:32:11
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, renamable $r0, 67, 14, $noreg, $noreg, debug-location !1252; ../popcountdi2.c:35:15
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDri killed renamable $r0, 255, 14, $noreg, $noreg, debug-location !1253; ../popcountdi2.c:35:27
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1254; ../popcountdi2.c:35:5
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
#### Function: __popcountsi2
### Basic Block: 0
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1257; ../popcountsi2.c:23:23
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1258; ../popcountsi2.c:23:11
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrsi renamable $r2, renamable $r1, 19, 14, $noreg, $noreg, debug-location !1260; ../popcountsi2.c:25:19
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !1261; ../popcountsi2.c:25:38
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1262; ../popcountsi2.c:25:33
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1264; ../popcountsi2.c:27:12
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1265; ../popcountsi2.c:27:24
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, renamable $r0, 131, 14, $noreg, $noreg, debug-location !1267; ../popcountsi2.c:29:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, renamable $r0, 67, 14, $noreg, $noreg, debug-location !1269; ../popcountsi2.c:32:15
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDri killed renamable $r0, 255, 14, $noreg, $noreg, debug-location !1270; ../popcountsi2.c:32:27
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1271; ../popcountsi2.c:32:5
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
#### Function: __subvdi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r12 = MOVr $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r12, $sp, 0, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: $r12 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r12, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r2, 14, $noreg, def $cpsr, debug-location !1273; ../subvdi3.c:24:27
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SBCrr killed renamable $r1, renamable $r3, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1273; ../subvdi3.c:24:27
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r3, 0, 14, $noreg, implicit-def $cpsr, debug-location !1275; ../subvdi3.c:25:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 4, killed $cpsr, debug-location !1275; ../subvdi3.c:25:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1275; ../subvdi3.c:25:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1276 :: (load (s32) from %stack.3); ../subvdi3.c:27:15
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !1276 :: (load (s32) from %stack.0); ../subvdi3.c:27:15
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !1276 :: (load (s32) from %stack.2); ../subvdi3.c:27:15
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 8, 14, $noreg, debug-location !1276 :: (load (s32) from %stack.1); ../subvdi3.c:27:15
# Before:
bot
# After:
not available
## Instruction: dead renamable $r2 = SUBrr renamable $r2, renamable $r3, 14, $noreg, def $cpsr, debug-location !1276; ../subvdi3.c:27:15
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCrr renamable $r0, renamable $r1, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !1276; ../subvdi3.c:27:15
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 10, killed $cpsr, debug-location !1277; ../subvdi3.c:27:13
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1277; ../subvdi3.c:27:13
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1278 :: (load (s32) from constant-pool); ../subvdi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1278 :: (load (s32) from constant-pool); ../subvdi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 28, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1278; ../subvdi3.c:28:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.7, debug-location !1279; ../subvdi3.c:29:5
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1280 :: (load (s32) from %stack.3); ../subvdi3.c:32:15
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !1280 :: (load (s32) from %stack.0); ../subvdi3.c:32:15
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !1280 :: (load (s32) from %stack.2); ../subvdi3.c:32:15
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 8, 14, $noreg, debug-location !1280 :: (load (s32) from %stack.1); ../subvdi3.c:32:15
# Before:
bot
# After:
not available
## Instruction: dead renamable $r2 = SUBrr renamable $r2, renamable $r3, 14, $noreg, def $cpsr, debug-location !1280; ../subvdi3.c:32:15
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCrr renamable $r0, renamable $r1, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !1280; ../subvdi3.c:32:15
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 11, killed $cpsr, debug-location !1281; ../subvdi3.c:32:13
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !1281; ../subvdi3.c:32:13
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1282 :: (load (s32) from constant-pool); ../subvdi3.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1282 :: (load (s32) from constant-pool); ../subvdi3.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 33, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1282; ../subvdi3.c:33:13
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: B %bb.7
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !1283 :: (load (s32) from %stack.0); ../subvdi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !1283 :: (load (s32) from %stack.1); ../subvdi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1283; ../subvdi3.c:35:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1283; ../subvdi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1283; ../subvdi3.c:35:5
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: __subvsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SUBrr renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1285; ../subvsi3.c:24:27
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r1, 0, 14, $noreg, implicit-def $cpsr, debug-location !1287; ../subvsi3.c:25:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 4, killed $cpsr, debug-location !1287; ../subvsi3.c:25:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1287; ../subvsi3.c:25:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1289 :: (load (s32) from %stack.0); ../subvsi3.c:27:13
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !1289 :: (load (s32) from %stack.1); ../subvsi3.c:27:13
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1289; ../subvsi3.c:27:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 13, killed $cpsr, debug-location !1289; ../subvsi3.c:27:13
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1289; ../subvsi3.c:27:13
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1290 :: (load (s32) from constant-pool); ../subvsi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1290 :: (load (s32) from constant-pool); ../subvsi3.c:28:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 28, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1290; ../subvsi3.c:28:13
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.7, debug-location !1291; ../subvsi3.c:29:5
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1293 :: (load (s32) from %stack.0); ../subvsi3.c:32:13
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !1293 :: (load (s32) from %stack.1); ../subvsi3.c:32:13
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1293; ../subvsi3.c:32:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 12, killed $cpsr, debug-location !1293; ../subvsi3.c:32:13
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !1293; ../subvsi3.c:32:13
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1294 :: (load (s32) from constant-pool); ../subvsi3.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1294 :: (load (s32) from constant-pool); ../subvsi3.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 33, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1294; ../subvsi3.c:33:13
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: B %bb.7
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1295 :: (load (s32) from %stack.0); ../subvsi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1295; ../subvsi3.c:35:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1295; ../subvsi3.c:35:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1295; ../subvsi3.c:35:5
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: __ucmpdi2
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 24, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 20, 14, $noreg, debug-location !1298 :: (store (s32) into %ir.all + 4, basealign 8); ../ucmpdi2.c:26:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 16, 14, $noreg, debug-location !1298 :: (store (s32) into %ir.all, align 8); ../ucmpdi2.c:26:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r3, $sp, 12, 14, $noreg, debug-location !1300 :: (store (s32) into %ir.all1 + 4, basealign 8); ../ucmpdi2.c:28:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, $sp, 8, 14, $noreg, debug-location !1300 :: (store (s32) into %ir.all1, align 8); ../ucmpdi2.c:28:11
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 20, 14, $noreg, debug-location !1302 :: (dereferenceable load (s32) from %ir.high); ../ucmpdi2.c:29:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1304 :: (dereferenceable load (s32) from %ir.high3); ../ucmpdi2.c:29:24
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1306; ../ucmpdi2.c:29:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 2, killed $cpsr, debug-location !1306; ../ucmpdi2.c:29:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1306; ../ucmpdi2.c:29:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1307; ../ucmpdi2.c:30:9
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = LDRi12 $sp, 20, 14, $noreg, debug-location !1309 :: (dereferenceable load (s32) from %ir.high5); ../ucmpdi2.c:31:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1311 :: (dereferenceable load (s32) from %ir.high7); ../ucmpdi2.c:31:24
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1313; ../ucmpdi2.c:31:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 9, killed $cpsr, debug-location !1313; ../ucmpdi2.c:31:9
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !1313; ../ucmpdi2.c:31:9
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: renamable $r0 = MOVi 2, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1314; ../ucmpdi2.c:32:9
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !1315 :: (dereferenceable load (s32) from %ir.low, align 8); ../ucmpdi2.c:33:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1316 :: (dereferenceable load (s32) from %ir.low13, align 8); ../ucmpdi2.c:33:23
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1318; ../ucmpdi2.c:33:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 2, killed $cpsr, debug-location !1318; ../ucmpdi2.c:33:9
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !1318; ../ucmpdi2.c:33:9
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1319; ../ucmpdi2.c:34:9
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: renamable $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !1320 :: (dereferenceable load (s32) from %ir.low18, align 8); ../ucmpdi2.c:35:13
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1321 :: (dereferenceable load (s32) from %ir.low20, align 8); ../ucmpdi2.c:35:23
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1323; ../ucmpdi2.c:35:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 9, killed $cpsr, debug-location !1323; ../ucmpdi2.c:35:9
# Before:
not available
# After:
not available
## Instruction: B %bb.7, debug-location !1323; ../ucmpdi2.c:35:9
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: renamable $r0 = MOVi 2, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1324; ../ucmpdi2.c:36:9
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1325; ../ucmpdi2.c:37:5
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1326 :: (load (s32) from %stack.2); ../ucmpdi2.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 24, 14, $noreg, $noreg, debug-location !1327; ../ucmpdi2.c:38:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1327; ../ucmpdi2.c:38:1
# Before:
not available
# After:
not available
#### Function: __udivdi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $lr = MOVr $sp, 14, $noreg, $noreg, debug-location !1333; ../udivdi3.c:22:12
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r12, killed renamable $lr, 0, 14, $noreg, debug-location !1333 :: (store (s32) into stack); ../udivdi3.c:22:12
# Before:
bot
# After:
not available
## Instruction: BL_pred @__udivmoddi4, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !1333; ../udivdi3.c:22:12
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1334; ../udivdi3.c:22:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1334; ../udivdi3.c:22:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1334; ../udivdi3.c:22:5
# Before:
not available
# After:
not available
#### Function: __udivmoddi4
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 88, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = LDRi12 $r11, 8, 14, $noreg :: (load (s32) from %fixed-stack.0)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r12, $r11, -36, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -4, 14, $noreg, debug-location !661 :: (store (s32) into %ir.all + 4, basealign 8); ../udivmoddi4.c:29:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -8, 14, $noreg, debug-location !661 :: (store (s32) into %ir.all, align 8); ../udivmoddi4.c:29:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r3, $r11, -12, 14, $noreg, debug-location !663 :: (store (s32) into %ir.all1 + 4, basealign 8); ../udivmoddi4.c:31:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, $r11, -16, 14, $noreg, debug-location !663 :: (store (s32) into %ir.all1, align 8); ../udivmoddi4.c:31:11
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !665 :: (dereferenceable load (s32) from %ir.high); ../udivmoddi4.c:36:13
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !667; ../udivmoddi4.c:36:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 1, killed $cpsr, debug-location !667; ../udivmoddi4.c:36:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !667; ../udivmoddi4.c:36:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !669 :: (dereferenceable load (s32) from %ir.high3); ../udivmoddi4.c:38:17
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !671; ../udivmoddi4.c:38:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.5, 1, killed $cpsr, debug-location !671; ../udivmoddi4.c:38:13
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !671; ../udivmoddi4.c:38:13
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !672 :: (load (s32) from %stack.4); ../udivmoddi4.c:44:17
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !672; ../udivmoddi4.c:44:17
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 0, killed $cpsr, debug-location !672; ../udivmoddi4.c:44:17
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !672; ../udivmoddi4.c:44:17
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !673 :: (dereferenceable load (s32) from %ir.low, align 8); ../udivmoddi4.c:45:28
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !674 :: (dereferenceable load (s32) from %ir.low9, align 8); ../udivmoddi4.c:45:38
# Before:
bot
# After:
not available
## Instruction: BL &__umodsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !675; ../udivmoddi4.c:45:32
# Before:
not available
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !675 :: (load (s32) from %stack.4); ../udivmoddi4.c:45:32
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !677 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:45:22
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !677 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:45:22
# Before:
bot
# After:
not available
## Instruction: B %bb.4, debug-location !678; ../udivmoddi4.c:45:17
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !679 :: (dereferenceable load (s32) from %ir.low12, align 8); ../udivmoddi4.c:46:24
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !680 :: (dereferenceable load (s32) from %ir.low14, align 8); ../udivmoddi4.c:46:34
# Before:
bot
# After:
not available
## Instruction: BL &__udivsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !681; ../udivmoddi4.c:46:28
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr killed $r0, 14, $noreg, $noreg, debug-location !681; ../udivmoddi4.c:46:28
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !683; ../udivmoddi4.c:46:13
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !684 :: (load (s32) from %stack.4); ../udivmoddi4.c:52:13
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !684; ../udivmoddi4.c:52:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.7, 0, killed $cpsr, debug-location !684; ../udivmoddi4.c:52:13
# Before:
not available
# After:
not available
## Instruction: B %bb.6, debug-location !684; ../udivmoddi4.c:52:13
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !685 :: (load (s32) from %stack.4); ../udivmoddi4.c:53:24
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !685 :: (dereferenceable load (s32) from %ir.low20, align 8); ../udivmoddi4.c:53:24
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !687 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:53:18
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !687 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:53:18
# Before:
bot
# After:
not available
## Instruction: B %bb.7, debug-location !688; ../udivmoddi4.c:53:13
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !689; ../udivmoddi4.c:54:9
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: renamable $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !690 :: (dereferenceable load (s32) from %ir.low25, align 8); ../udivmoddi4.c:57:13
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !692; ../udivmoddi4.c:57:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.26, 1, killed $cpsr, debug-location !692; ../udivmoddi4.c:57:9
# Before:
not available
# After:
not available
## Instruction: B %bb.9, debug-location !692; ../udivmoddi4.c:57:9
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: renamable $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !694 :: (dereferenceable load (s32) from %ir.high30); ../udivmoddi4.c:59:17
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !696; ../udivmoddi4.c:59:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.13, 1, killed $cpsr, debug-location !696; ../udivmoddi4.c:59:13
# Before:
not available
# After:
not available
## Instruction: B %bb.10, debug-location !696; ../udivmoddi4.c:59:13
# Before:
not available
# After:
not available
### Basic Block: 10
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !697 :: (load (s32) from %stack.4); ../udivmoddi4.c:65:17
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !697; ../udivmoddi4.c:65:17
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.12, 0, killed $cpsr, debug-location !697; ../udivmoddi4.c:65:17
# Before:
not available
# After:
not available
## Instruction: B %bb.11, debug-location !697; ../udivmoddi4.c:65:17
# Before:
not available
# After:
not available
### Basic Block: 11
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !699 :: (dereferenceable load (s32) from %ir.high37); ../udivmoddi4.c:66:28
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !700 :: (dereferenceable load (s32) from %ir.low39, align 8); ../udivmoddi4.c:66:39
# Before:
bot
# After:
not available
## Instruction: BL &__umodsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !701; ../udivmoddi4.c:66:33
# Before:
not available
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !701 :: (load (s32) from %stack.4); ../udivmoddi4.c:66:33
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !703 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:66:22
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !703 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:66:22
# Before:
bot
# After:
not available
## Instruction: B %bb.12, debug-location !704; ../udivmoddi4.c:66:17
# Before:
not available
# After:
not available
### Basic Block: 12
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !706 :: (dereferenceable load (s32) from %ir.high44); ../udivmoddi4.c:67:24
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !707 :: (dereferenceable load (s32) from %ir.low46, align 8); ../udivmoddi4.c:67:35
# Before:
bot
# After:
not available
## Instruction: BL &__udivsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !708; ../udivmoddi4.c:67:29
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr killed $r0, 14, $noreg, $noreg, debug-location !708; ../udivmoddi4.c:67:29
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !710; ../udivmoddi4.c:67:13
# Before:
not available
# After:
not available
### Basic Block: 13
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !711 :: (dereferenceable load (s32) from %ir.low51, align 8); ../udivmoddi4.c:70:17
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !713; ../udivmoddi4.c:70:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.17, 1, killed $cpsr, debug-location !713; ../udivmoddi4.c:70:13
# Before:
not available
# After:
not available
## Instruction: B %bb.14, debug-location !713; ../udivmoddi4.c:70:13
# Before:
not available
# After:
not available
### Basic Block: 14
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !714 :: (load (s32) from %stack.4); ../udivmoddi4.c:76:17
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !714; ../udivmoddi4.c:76:17
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.16, 0, killed $cpsr, debug-location !714; ../udivmoddi4.c:76:17
# Before:
not available
# After:
not available
## Instruction: B %bb.15, debug-location !714; ../udivmoddi4.c:76:17
# Before:
not available
# After:
not available
### Basic Block: 15
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !716 :: (dereferenceable load (s32) from %ir.high58); ../udivmoddi4.c:78:32
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -12, 14, $noreg, debug-location !718 :: (dereferenceable load (s32) from %ir.high60); ../udivmoddi4.c:78:43
# Before:
bot
# After:
not available
## Instruction: BL &__umodsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !719; ../udivmoddi4.c:78:37
# Before:
not available
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !719 :: (load (s32) from %stack.4); ../udivmoddi4.c:78:37
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -28, 14, $noreg, debug-location !722 :: (store (s32) into %ir.high63); ../udivmoddi4.c:78:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -32, 14, $noreg, debug-location !724 :: (store (s32) into %ir.low65, align 8); ../udivmoddi4.c:79:25
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -32, 14, $noreg, debug-location !725 :: (dereferenceable load (s32) from %ir.all66, align 8); ../udivmoddi4.c:80:26
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -28, 14, $noreg, debug-location !725 :: (dereferenceable load (s32) from %ir.all66 + 4, basealign 8); ../udivmoddi4.c:80:26
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !726 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:80:22
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !726 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:80:22
# Before:
bot
# After:
not available
## Instruction: B %bb.16, debug-location !727; ../udivmoddi4.c:81:13
# Before:
not available
# After:
not available
### Basic Block: 16
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !729 :: (dereferenceable load (s32) from %ir.high69); ../udivmoddi4.c:82:24
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -12, 14, $noreg, debug-location !731 :: (dereferenceable load (s32) from %ir.high71); ../udivmoddi4.c:82:35
# Before:
bot
# After:
not available
## Instruction: BL &__udivsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !732; ../udivmoddi4.c:82:29
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr killed $r0, 14, $noreg, $noreg, debug-location !732; ../udivmoddi4.c:82:29
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !734; ../udivmoddi4.c:82:13
# Before:
not available
# After:
not available
### Basic Block: 17
## Instruction: renamable $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !736 :: (dereferenceable load (s32) from %ir.high78); ../udivmoddi4.c:88:18
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = SUBri renamable $r0, 1, 14, $noreg, $noreg, debug-location !739; ../udivmoddi4.c:88:35
# Before:
not available
# After:
not available
## Instruction: TSTrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !742; ../udivmoddi4.c:88:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.21, 1, killed $cpsr, debug-location !742; ../udivmoddi4.c:88:13
# Before:
not available
# After:
not available
## Instruction: B %bb.18, debug-location !742; ../udivmoddi4.c:88:13
# Before:
not available
# After:
not available
### Basic Block: 18
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !743 :: (load (s32) from %stack.4); ../udivmoddi4.c:90:17
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !743; ../udivmoddi4.c:90:17
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.20, 0, killed $cpsr, debug-location !743; ../udivmoddi4.c:90:17
# Before:
not available
# After:
not available
## Instruction: B %bb.19, debug-location !743; ../udivmoddi4.c:90:17
# Before:
not available
# After:
not available
### Basic Block: 19
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !744 :: (load (s32) from %stack.4); ../udivmoddi4.c:92:31
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !744 :: (dereferenceable load (s32) from %ir.low85, align 8); ../udivmoddi4.c:92:31
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -32, 14, $noreg, debug-location !746 :: (store (s32) into %ir.low87, align 8); ../udivmoddi4.c:92:25
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !748 :: (dereferenceable load (s32) from %ir.high89); ../udivmoddi4.c:93:32
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -12, 14, $noreg, debug-location !750 :: (dereferenceable load (s32) from %ir.high91); ../udivmoddi4.c:93:44
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = SUBri killed renamable $r2, 1, 14, $noreg, $noreg, debug-location !751; ../udivmoddi4.c:93:49
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !752; ../udivmoddi4.c:93:37
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -28, 14, $noreg, debug-location !755 :: (store (s32) into %ir.high95); ../udivmoddi4.c:93:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -32, 14, $noreg, debug-location !756 :: (dereferenceable load (s32) from %ir.all96, align 8); ../udivmoddi4.c:94:26
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -28, 14, $noreg, debug-location !756 :: (dereferenceable load (s32) from %ir.all96 + 4, basealign 8); ../udivmoddi4.c:94:26
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !757 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:94:22
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !757 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:94:22
# Before:
bot
# After:
not available
## Instruction: B %bb.20, debug-location !758; ../udivmoddi4.c:95:13
# Before:
not available
# After:
not available
### Basic Block: 20
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !760 :: (dereferenceable load (s32) from %ir.high99); ../udivmoddi4.c:96:24
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -12, 14, $noreg, debug-location !762 :: (dereferenceable load (s32) from %ir.high101); ../udivmoddi4.c:96:50
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = SUBri renamable $r2, 1, 14, $noreg, $noreg, debug-location !763; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = BICrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !763; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = ANDrsi killed renamable $r2, renamable $r1, 11, 14, $noreg, $noreg, debug-location !763; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !763; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = ANDrsi renamable $r3, renamable $r1, 19, 14, $noreg, $noreg, debug-location !763; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, debug-location !763; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !763; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, renamable $r1, 35, 14, $noreg, $noreg, debug-location !763; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = ANDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !763; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r2, killed renamable $r3, 14, $noreg, $noreg, debug-location !763; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVsi killed renamable $r1, 195, 14, $noreg, $noreg, debug-location !763; ../udivmoddi4.c:96:32
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVsr killed renamable $r0, killed renamable $r1, 3, 14, $noreg, $noreg, debug-location !764; ../udivmoddi4.c:96:29
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !766; ../udivmoddi4.c:96:13
# Before:
not available
# After:
not available
### Basic Block: 21
## Instruction: renamable $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !768 :: (dereferenceable load (s32) from %ir.high105); ../udivmoddi4.c:102:32
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 11, 14, $noreg, $noreg, debug-location !769; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 19, 14, $noreg, $noreg, debug-location !769; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !769; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 67, 14, $noreg, $noreg, debug-location !769; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 131, 14, $noreg, $noreg, debug-location !769; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MVNr killed renamable $r0, 14, $noreg, $noreg, debug-location !769; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r12, renamable $r0, 11, 14, $noreg, $noreg, debug-location !769; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !769; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $lr = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $lr, renamable $r0, 19, 14, $noreg, $noreg, debug-location !769; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, renamable $lr, 14, $noreg, $noreg, debug-location !769; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !769; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !769; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r0, renamable $r2, 14, $noreg, $noreg, debug-location !769; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r0 = MULv5 killed renamable $r1, renamable $r3, 14, $noreg, $noreg, debug-location !769; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 195, 14, $noreg, $noreg, debug-location !769; ../udivmoddi4.c:102:14
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !771 :: (dereferenceable load (s32) from %ir.high107); ../udivmoddi4.c:102:58
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 11, 14, $noreg, $noreg, debug-location !772; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 19, 14, $noreg, $noreg, debug-location !772; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 35, 14, $noreg, $noreg, debug-location !772; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 67, 14, $noreg, $noreg, debug-location !772; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 131, 14, $noreg, $noreg, debug-location !772; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MVNr killed renamable $r1, 14, $noreg, $noreg, debug-location !772; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ANDrsi killed renamable $r12, renamable $r1, 11, 14, $noreg, $noreg, debug-location !772; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrr killed renamable $r1, killed renamable $r12, 14, $noreg, $noreg, debug-location !772; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ANDrsi renamable $lr, renamable $r1, 19, 14, $noreg, $noreg, debug-location !772; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, killed renamable $lr, 14, $noreg, $noreg, debug-location !772; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrr killed renamable $r1, killed renamable $r12, 14, $noreg, $noreg, debug-location !772; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, renamable $r1, 35, 14, $noreg, $noreg, debug-location !772; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ANDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !772; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r2, killed renamable $r3, 14, $noreg, $noreg, debug-location !772; ../udivmoddi4.c:102:40
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBrsi killed renamable $r0, killed renamable $r1, 195, 14, $noreg, $noreg, debug-location !773; ../udivmoddi4.c:102:38
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 40, 14, $noreg :: (store (s32) into %stack.7)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 31, 14, $noreg, implicit-def $cpsr, debug-location !775; ../udivmoddi4.c:104:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.25, 3, killed $cpsr, debug-location !775; ../udivmoddi4.c:104:13
# Before:
not available
# After:
not available
## Instruction: B %bb.22, debug-location !775; ../udivmoddi4.c:104:13
# Before:
not available
# After:
not available
### Basic Block: 22
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !776 :: (load (s32) from %stack.4); ../udivmoddi4.c:106:16
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !776; ../udivmoddi4.c:106:16
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.24, 0, killed $cpsr, debug-location !776; ../udivmoddi4.c:106:16
# Before:
not available
# After:
not available
## Instruction: B %bb.23, debug-location !776; ../udivmoddi4.c:106:16
# Before:
not available
# After:
not available
### Basic Block: 23
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !777 :: (load (s32) from %stack.4); ../udivmoddi4.c:107:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !777 :: (dereferenceable load (s32) from %ir.all114, align 8); ../udivmoddi4.c:107:26
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -4, 14, $noreg, debug-location !777 :: (dereferenceable load (s32) from %ir.all114 + 4, basealign 8); ../udivmoddi4.c:107:26
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !778 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:107:22
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !778 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:107:22
# Before:
bot
# After:
not available
## Instruction: B %bb.24, debug-location !779; ../udivmoddi4.c:107:17
# Before:
not available
# After:
not available
### Basic Block: 24
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !780; ../udivmoddi4.c:108:13
# Before:
not available
# After:
not available
### Basic Block: 25
## Instruction: $r2 = LDRi12 $sp, 40, 14, $noreg, debug-location !781 :: (load (s32) from %stack.7); ../udivmoddi4.c:110:9
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nsw ADDri renamable $r2, 1, 14, $noreg, $noreg, debug-location !781; ../udivmoddi4.c:110:9
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -24, 14, $noreg, debug-location !783 :: (store (s32) into %ir.low118, align 8); ../udivmoddi4.c:113:17
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -8, 14, $noreg, debug-location !784 :: (dereferenceable load (s32) from %ir.low120, align 8); ../udivmoddi4.c:114:24
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = nsw RSBri renamable $r2, 31, 14, $noreg, $noreg, debug-location !785; ../udivmoddi4.c:114:45
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVsr killed renamable $r1, renamable $r3, 2, 14, $noreg, $noreg, debug-location !786; ../udivmoddi4.c:114:28
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -20, 14, $noreg, debug-location !789 :: (store (s32) into %ir.high123); ../udivmoddi4.c:114:18
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !791 :: (dereferenceable load (s32) from %ir.high125); ../udivmoddi4.c:116:24
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVsr killed renamable $r1, renamable $r0, 3, 14, $noreg, $noreg, debug-location !792; ../udivmoddi4.c:116:29
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -28, 14, $noreg, debug-location !795 :: (store (s32) into %ir.high128); ../udivmoddi4.c:116:18
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -8, 14, $noreg, debug-location !800 :: (dereferenceable load (s32) from %ir.low134, align 8); ../udivmoddi4.c:117:60
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !797 :: (dereferenceable load (s32) from %ir.high130); ../udivmoddi4.c:117:24
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVsr killed renamable $r1, killed renamable $r3, 2, 14, $noreg, $noreg, debug-location !799; ../udivmoddi4.c:117:29
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsr killed renamable $r1, killed renamable $r2, renamable $r0, 3, 14, $noreg, $noreg, debug-location !802; ../udivmoddi4.c:117:53
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -32, 14, $noreg, debug-location !804 :: (store (s32) into %ir.low137, align 8); ../udivmoddi4.c:117:17
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 36, 14, $noreg :: (store (s32) into %stack.8)
# Before:
bot
# After:
not available
## Instruction: B %bb.49, debug-location !805; ../udivmoddi4.c:118:5
# Before:
not available
# After:
not available
### Basic Block: 26
## Instruction: renamable $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !807 :: (dereferenceable load (s32) from %ir.high139); ../udivmoddi4.c:121:17
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !809; ../udivmoddi4.c:121:13
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.40, 1, killed $cpsr, debug-location !809; ../udivmoddi4.c:121:13
# Before:
not available
# After:
not available
## Instruction: B %bb.27, debug-location !809; ../udivmoddi4.c:121:13
# Before:
not available
# After:
not available
### Basic Block: 27
## Instruction: renamable $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !810 :: (dereferenceable load (s32) from %ir.low144, align 8); ../udivmoddi4.c:127:22
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = SUBri renamable $r0, 1, 14, $noreg, $noreg, debug-location !812; ../udivmoddi4.c:127:17
# Before:
not available
# After:
not available
## Instruction: TSTrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !812; ../udivmoddi4.c:127:17
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.33, 1, killed $cpsr, debug-location !812; ../udivmoddi4.c:127:17
# Before:
not available
# After:
not available
## Instruction: B %bb.28, debug-location !812; ../udivmoddi4.c:127:17
# Before:
not available
# After:
not available
### Basic Block: 28
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !813 :: (load (s32) from %stack.4); ../udivmoddi4.c:129:21
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !813; ../udivmoddi4.c:129:21
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.30, 0, killed $cpsr, debug-location !813; ../udivmoddi4.c:129:21
# Before:
not available
# After:
not available
## Instruction: B %bb.29, debug-location !813; ../udivmoddi4.c:129:21
# Before:
not available
# After:
not available
### Basic Block: 29
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !814 :: (load (s32) from %stack.4); ../udivmoddi4.c:130:32
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !814 :: (dereferenceable load (s32) from %ir.low155, align 8); ../udivmoddi4.c:130:32
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -16, 14, $noreg, debug-location !815 :: (dereferenceable load (s32) from %ir.low157, align 8); ../udivmoddi4.c:130:43
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = SUBri killed renamable $r2, 1, 14, $noreg, $noreg, debug-location !816; ../udivmoddi4.c:130:47
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !817; ../udivmoddi4.c:130:36
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !819 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:130:26
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !819 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:130:26
# Before:
bot
# After:
not available
## Instruction: B %bb.30, debug-location !820; ../udivmoddi4.c:130:21
# Before:
not available
# After:
not available
### Basic Block: 30
## Instruction: renamable $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !821 :: (dereferenceable load (s32) from %ir.low163, align 8); ../udivmoddi4.c:131:25
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !823; ../udivmoddi4.c:131:21
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.32, 1, killed $cpsr, debug-location !823; ../udivmoddi4.c:131:21
# Before:
not available
# After:
not available
## Instruction: B %bb.31, debug-location !823; ../udivmoddi4.c:131:21
# Before:
not available
# After:
not available
### Basic Block: 31
## Instruction: renamable $r1 = LDRi12 $r11, -8, 14, $noreg, debug-location !824 :: (dereferenceable load (s32) from %ir.all167, align 8); ../udivmoddi4.c:132:30
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !824 :: (dereferenceable load (s32) from %ir.all167 + 4, basealign 8); ../udivmoddi4.c:132:30
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !825; ../udivmoddi4.c:132:21
# Before:
not available
# After:
not available
### Basic Block: 32
## Instruction: renamable $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !826 :: (dereferenceable load (s32) from %ir.low170, align 8); ../udivmoddi4.c:133:40
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !827; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = BICrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !827; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !827; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !827; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r2, renamable $r0, 19, 14, $noreg, $noreg, debug-location !827; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !827; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !827; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !827; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !827; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r12 = MULv5 killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !827; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsi renamable $r12, 195, 14, $noreg, $noreg, debug-location !827; ../udivmoddi4.c:133:22
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !829 :: (dereferenceable load (s32) from %ir.high172); ../udivmoddi4.c:134:32
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 3, 14, $noreg, $noreg, debug-location !830; ../udivmoddi4.c:134:37
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -20, 14, $noreg, debug-location !833 :: (store (s32) into %ir.high175); ../udivmoddi4.c:134:26
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -8, 14, $noreg, debug-location !838 :: (dereferenceable load (s32) from %ir.low181, align 8); ../udivmoddi4.c:135:68
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !835 :: (dereferenceable load (s32) from %ir.high177); ../udivmoddi4.c:135:32
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = MOVi 32, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = nuw nsw SUBrsi killed renamable $r3, killed renamable $r12, 195, 14, $noreg, $noreg, debug-location !836; ../udivmoddi4.c:135:54
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r3, 2, 14, $noreg, $noreg, debug-location !837; ../udivmoddi4.c:135:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsr killed renamable $r0, killed renamable $r1, killed renamable $r2, 3, 14, $noreg, $noreg, debug-location !840; ../udivmoddi4.c:135:61
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -24, 14, $noreg, debug-location !842 :: (store (s32) into %ir.low185, align 8); ../udivmoddi4.c:135:25
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -24, 14, $noreg, debug-location !843 :: (dereferenceable load (s32) from %ir.all186, align 8); ../udivmoddi4.c:136:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -20, 14, $noreg, debug-location !843 :: (dereferenceable load (s32) from %ir.all186 + 4, basealign 8); ../udivmoddi4.c:136:26
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !844; ../udivmoddi4.c:136:17
# Before:
not available
# After:
not available
### Basic Block: 33
## Instruction: renamable $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !845 :: (dereferenceable load (s32) from %ir.low189, align 8); ../udivmoddi4.c:142:55
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 11, 14, $noreg, $noreg, debug-location !846; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 19, 14, $noreg, $noreg, debug-location !846; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !846; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 67, 14, $noreg, $noreg, debug-location !846; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 131, 14, $noreg, $noreg, debug-location !846; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MVNr killed renamable $r0, 14, $noreg, $noreg, debug-location !846; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r12, renamable $r0, 11, 14, $noreg, $noreg, debug-location !846; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !846; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $lr = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $lr, renamable $r0, 19, 14, $noreg, $noreg, debug-location !846; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, renamable $lr, 14, $noreg, $noreg, debug-location !846; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !846; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !846; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r0, renamable $r2, 14, $noreg, $noreg, debug-location !846; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r0 = MULv5 killed renamable $r1, renamable $r3, 14, $noreg, $noreg, debug-location !846; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 195, 14, $noreg, $noreg, debug-location !846; ../udivmoddi4.c:142:37
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !849 :: (dereferenceable load (s32) from %ir.high191); ../udivmoddi4.c:142:80
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 11, 14, $noreg, $noreg, debug-location !850; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 19, 14, $noreg, $noreg, debug-location !850; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 35, 14, $noreg, $noreg, debug-location !850; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 67, 14, $noreg, $noreg, debug-location !850; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 131, 14, $noreg, $noreg, debug-location !850; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MVNr killed renamable $r1, 14, $noreg, $noreg, debug-location !850; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ANDrsi killed renamable $r12, renamable $r1, 11, 14, $noreg, $noreg, debug-location !850; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrr killed renamable $r1, killed renamable $r12, 14, $noreg, $noreg, debug-location !850; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ANDrsi renamable $lr, renamable $r1, 19, 14, $noreg, $noreg, debug-location !850; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, killed renamable $lr, 14, $noreg, $noreg, debug-location !850; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrr killed renamable $r1, killed renamable $r12, 14, $noreg, $noreg, debug-location !850; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, renamable $r1, 35, 14, $noreg, $noreg, debug-location !850; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ANDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !850; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r2, killed renamable $r3, 14, $noreg, $noreg, debug-location !850; ../udivmoddi4.c:142:62
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrsi killed renamable $r0, killed renamable $r1, 195, 14, $noreg, $noreg, debug-location !851; ../udivmoddi4.c:142:60
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDri killed renamable $r0, 33, 14, $noreg, $noreg, debug-location !851; ../udivmoddi4.c:142:60
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 32, 14, $noreg :: (store (s32) into %stack.9)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 32, 14, $noreg, implicit-def $cpsr, debug-location !853; ../udivmoddi4.c:147:17
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.35, 1, killed $cpsr, debug-location !853; ../udivmoddi4.c:147:17
# Before:
not available
# After:
not available
## Instruction: B %bb.34, debug-location !853; ../udivmoddi4.c:147:17
# Before:
not available
# After:
not available
### Basic Block: 34
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 renamable $r0, $r11, -24, 14, $noreg, debug-location !855 :: (store (s32) into %ir.low197, align 8); ../udivmoddi4.c:149:25
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -8, 14, $noreg, debug-location !856 :: (dereferenceable load (s32) from %ir.low199, align 8); ../udivmoddi4.c:150:32
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -20, 14, $noreg, debug-location !859 :: (store (s32) into %ir.high201); ../udivmoddi4.c:150:26
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -28, 14, $noreg, debug-location !862 :: (store (s32) into %ir.high203); ../udivmoddi4.c:151:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !864 :: (dereferenceable load (s32) from %ir.high205); ../udivmoddi4.c:152:31
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -32, 14, $noreg, debug-location !866 :: (store (s32) into %ir.low207, align 8); ../udivmoddi4.c:152:25
# Before:
bot
# After:
not available
## Instruction: B %bb.39, debug-location !867; ../udivmoddi4.c:153:13
# Before:
not available
# After:
not available
### Basic Block: 35
## Instruction: $r0 = LDRi12 $sp, 32, 14, $noreg, debug-location !869 :: (load (s32) from %stack.9); ../udivmoddi4.c:154:22
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 31, 14, $noreg, implicit-def $cpsr, debug-location !869; ../udivmoddi4.c:154:22
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.37, 8, killed $cpsr, debug-location !869; ../udivmoddi4.c:154:22
# Before:
not available
# After:
not available
## Instruction: B %bb.36, debug-location !869; ../udivmoddi4.c:154:22
# Before:
not available
# After:
not available
### Basic Block: 36
## Instruction: $r2 = LDRi12 $sp, 32, 14, $noreg :: (load (s32) from %stack.9)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -24, 14, $noreg, debug-location !871 :: (store (s32) into %ir.low213, align 8); ../udivmoddi4.c:156:25
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !872 :: (dereferenceable load (s32) from %ir.low215, align 8); ../udivmoddi4.c:157:32
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = nsw RSBri renamable $r2, 32, 14, $noreg, $noreg, debug-location !873; ../udivmoddi4.c:157:53
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r3, 2, 14, $noreg, $noreg, debug-location !874; ../udivmoddi4.c:157:36
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -20, 14, $noreg, debug-location !877 :: (store (s32) into %ir.high219); ../udivmoddi4.c:157:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !879 :: (dereferenceable load (s32) from %ir.high221); ../udivmoddi4.c:158:32
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 3, 14, $noreg, $noreg, debug-location !880; ../udivmoddi4.c:158:37
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -28, 14, $noreg, debug-location !883 :: (store (s32) into %ir.high224); ../udivmoddi4.c:158:26
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -8, 14, $noreg, debug-location !888 :: (dereferenceable load (s32) from %ir.low230, align 8); ../udivmoddi4.c:159:68
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !885 :: (dereferenceable load (s32) from %ir.high226); ../udivmoddi4.c:159:32
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r3, 2, 14, $noreg, $noreg, debug-location !887; ../udivmoddi4.c:159:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsr killed renamable $r0, killed renamable $r1, renamable $r2, 3, 14, $noreg, $noreg, debug-location !890; ../udivmoddi4.c:159:61
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -32, 14, $noreg, debug-location !892 :: (store (s32) into %ir.low234, align 8); ../udivmoddi4.c:159:25
# Before:
bot
# After:
not available
## Instruction: B %bb.38, debug-location !893; ../udivmoddi4.c:160:13
# Before:
not available
# After:
not available
### Basic Block: 37
## Instruction: $r1 = LDRi12 $sp, 32, 14, $noreg, debug-location !894 :: (load (s32) from %stack.9); ../udivmoddi4.c:163:31
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !894 :: (dereferenceable load (s32) from %ir.low237, align 8); ../udivmoddi4.c:163:31
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = nsw RSBri renamable $r1, 64, 14, $noreg, $noreg, debug-location !895; ../udivmoddi4.c:163:53
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r3, 2, 14, $noreg, $noreg, debug-location !896; ../udivmoddi4.c:163:35
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -24, 14, $noreg, debug-location !898 :: (store (s32) into %ir.low241, align 8); ../udivmoddi4.c:163:25
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -8, 14, $noreg, debug-location !903 :: (dereferenceable load (s32) from %ir.low247, align 8); ../udivmoddi4.c:165:33
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !900 :: (dereferenceable load (s32) from %ir.high243); ../udivmoddi4.c:164:33
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r3, 2, 14, $noreg, $noreg, debug-location !902; ../udivmoddi4.c:164:38
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nsw SUBri renamable $r1, 32, 14, $noreg, $noreg, debug-location !904; ../udivmoddi4.c:165:44
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsr killed renamable $r0, killed renamable $r2, renamable $r1, 3, 14, $noreg, $noreg, debug-location !906; ../udivmoddi4.c:164:63
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -20, 14, $noreg, debug-location !909 :: (store (s32) into %ir.high252); ../udivmoddi4.c:164:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -28, 14, $noreg, debug-location !912 :: (store (s32) into %ir.high254); ../udivmoddi4.c:166:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !914 :: (dereferenceable load (s32) from %ir.high256); ../udivmoddi4.c:167:31
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r1, 3, 14, $noreg, $noreg, debug-location !916; ../udivmoddi4.c:167:36
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -32, 14, $noreg, debug-location !918 :: (store (s32) into %ir.low260, align 8); ../udivmoddi4.c:167:25
# Before:
bot
# After:
not available
## Instruction: B %bb.38
# Before:
not available
# After:
not available
### Basic Block: 38
## Instruction: B %bb.39
# Before:
not available
# After:
not available
### Basic Block: 39
## Instruction: $r0 = LDRi12 $sp, 32, 14, $noreg :: (load (s32) from %stack.9)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 28, 14, $noreg :: (store (s32) into %stack.10)
# Before:
bot
# After:
not available
## Instruction: B %bb.48, debug-location !919; ../udivmoddi4.c:169:9
# Before:
not available
# After:
not available
### Basic Block: 40
## Instruction: renamable $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !921 :: (dereferenceable load (s32) from %ir.high265); ../udivmoddi4.c:176:36
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 11, 14, $noreg, $noreg, debug-location !922; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 19, 14, $noreg, $noreg, debug-location !922; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !922; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 67, 14, $noreg, $noreg, debug-location !922; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 131, 14, $noreg, $noreg, debug-location !922; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MVNr killed renamable $r0, 14, $noreg, $noreg, debug-location !922; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r12, renamable $r0, 11, 14, $noreg, $noreg, debug-location !922; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !922; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $lr = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $lr, renamable $r0, 19, 14, $noreg, $noreg, debug-location !922; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, renamable $lr, 14, $noreg, $noreg, debug-location !922; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !922; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !922; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r0, renamable $r2, 14, $noreg, $noreg, debug-location !922; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r0 = MULv5 killed renamable $r1, renamable $r3, 14, $noreg, $noreg, debug-location !922; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 195, 14, $noreg, $noreg, debug-location !922; ../udivmoddi4.c:176:18
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !924 :: (dereferenceable load (s32) from %ir.high267); ../udivmoddi4.c:176:62
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 11, 14, $noreg, $noreg, debug-location !925; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 19, 14, $noreg, $noreg, debug-location !925; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 35, 14, $noreg, $noreg, debug-location !925; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 67, 14, $noreg, $noreg, debug-location !925; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r1, 131, 14, $noreg, $noreg, debug-location !925; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MVNr killed renamable $r1, 14, $noreg, $noreg, debug-location !925; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ANDrsi killed renamable $r12, renamable $r1, 11, 14, $noreg, $noreg, debug-location !925; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrr killed renamable $r1, killed renamable $r12, 14, $noreg, $noreg, debug-location !925; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ANDrsi renamable $lr, renamable $r1, 19, 14, $noreg, $noreg, debug-location !925; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, killed renamable $lr, 14, $noreg, $noreg, debug-location !925; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrr killed renamable $r1, killed renamable $r12, 14, $noreg, $noreg, debug-location !925; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, renamable $r1, 35, 14, $noreg, $noreg, debug-location !925; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ANDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !925; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r2, killed renamable $r3, 14, $noreg, $noreg, debug-location !925; ../udivmoddi4.c:176:44
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBrsi killed renamable $r0, killed renamable $r1, 195, 14, $noreg, $noreg, debug-location !926; ../udivmoddi4.c:176:42
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 24, 14, $noreg :: (store (s32) into %stack.11)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 32, 14, $noreg, implicit-def $cpsr, debug-location !928; ../udivmoddi4.c:178:17
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.44, 3, killed $cpsr, debug-location !928; ../udivmoddi4.c:178:17
# Before:
not available
# After:
not available
## Instruction: B %bb.41, debug-location !928; ../udivmoddi4.c:178:17
# Before:
not available
# After:
not available
### Basic Block: 41
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !929 :: (load (s32) from %stack.4); ../udivmoddi4.c:180:21
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !929; ../udivmoddi4.c:180:21
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.43, 0, killed $cpsr, debug-location !929; ../udivmoddi4.c:180:21
# Before:
not available
# After:
not available
## Instruction: B %bb.42, debug-location !929; ../udivmoddi4.c:180:21
# Before:
not available
# After:
not available
### Basic Block: 42
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !930 :: (load (s32) from %stack.4); ../udivmoddi4.c:181:30
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !930 :: (dereferenceable load (s32) from %ir.all274, align 8); ../udivmoddi4.c:181:30
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -4, 14, $noreg, debug-location !930 :: (dereferenceable load (s32) from %ir.all274 + 4, basealign 8); ../udivmoddi4.c:181:30
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !931 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:181:26
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !931 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:181:26
# Before:
bot
# After:
not available
## Instruction: B %bb.43, debug-location !932; ../udivmoddi4.c:181:21
# Before:
not available
# After:
not available
### Basic Block: 43
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !933; ../udivmoddi4.c:182:17
# Before:
not available
# After:
not available
### Basic Block: 44
## Instruction: $r0 = LDRi12 $sp, 24, 14, $noreg, debug-location !934 :: (load (s32) from %stack.11); ../udivmoddi4.c:184:13
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nsw ADDri renamable $r0, 1, 14, $noreg, $noreg, debug-location !934; ../udivmoddi4.c:184:13
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 20, 14, $noreg :: (store (s32) into %stack.12)
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -24, 14, $noreg, debug-location !936 :: (store (s32) into %ir.low279, align 8); ../udivmoddi4.c:187:21
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 32, 14, $noreg, implicit-def $cpsr, debug-location !938; ../udivmoddi4.c:188:17
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.46, 1, killed $cpsr, debug-location !938; ../udivmoddi4.c:188:17
# Before:
not available
# After:
not available
## Instruction: B %bb.45, debug-location !938; ../udivmoddi4.c:188:17
# Before:
not available
# After:
not available
### Basic Block: 45
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !939 :: (dereferenceable load (s32) from %ir.low284, align 8); ../udivmoddi4.c:190:32
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -20, 14, $noreg, debug-location !942 :: (store (s32) into %ir.high286); ../udivmoddi4.c:190:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -28, 14, $noreg, debug-location !945 :: (store (s32) into %ir.high288); ../udivmoddi4.c:191:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !947 :: (dereferenceable load (s32) from %ir.high290); ../udivmoddi4.c:192:31
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -32, 14, $noreg, debug-location !949 :: (store (s32) into %ir.low292, align 8); ../udivmoddi4.c:192:25
# Before:
bot
# After:
not available
## Instruction: B %bb.47, debug-location !950; ../udivmoddi4.c:193:13
# Before:
not available
# After:
not available
### Basic Block: 46
## Instruction: $r2 = LDRi12 $sp, 20, 14, $noreg, debug-location !951 :: (load (s32) from %stack.12); ../udivmoddi4.c:196:32
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !951 :: (load (s32) from %stack.11); ../udivmoddi4.c:196:32
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !951 :: (dereferenceable load (s32) from %ir.low295, align 8); ../udivmoddi4.c:196:32
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = nsw RSBri renamable $r1, 31, 14, $noreg, $noreg, debug-location !952; ../udivmoddi4.c:196:53
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r3, 2, 14, $noreg, $noreg, debug-location !953; ../udivmoddi4.c:196:36
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -20, 14, $noreg, debug-location !956 :: (store (s32) into %ir.high299); ../udivmoddi4.c:196:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !958 :: (dereferenceable load (s32) from %ir.high301); ../udivmoddi4.c:197:32
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 3, 14, $noreg, $noreg, debug-location !959; ../udivmoddi4.c:197:37
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -28, 14, $noreg, debug-location !962 :: (store (s32) into %ir.high304); ../udivmoddi4.c:197:26
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -8, 14, $noreg, debug-location !967 :: (dereferenceable load (s32) from %ir.low310, align 8); ../udivmoddi4.c:198:68
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !964 :: (dereferenceable load (s32) from %ir.high306); ../udivmoddi4.c:198:32
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r3, 2, 14, $noreg, $noreg, debug-location !966; ../udivmoddi4.c:198:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsr killed renamable $r0, killed renamable $r1, renamable $r2, 3, 14, $noreg, $noreg, debug-location !969; ../udivmoddi4.c:198:61
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -32, 14, $noreg, debug-location !971 :: (store (s32) into %ir.low314, align 8); ../udivmoddi4.c:198:25
# Before:
bot
# After:
not available
## Instruction: B %bb.47
# Before:
not available
# After:
not available
### Basic Block: 47
## Instruction: $r0 = LDRi12 $sp, 20, 14, $noreg :: (load (s32) from %stack.12)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 28, 14, $noreg :: (store (s32) into %stack.10)
# Before:
bot
# After:
not available
## Instruction: B %bb.48
# Before:
not available
# After:
not available
### Basic Block: 48
## Instruction: $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !972 :: (load (s32) from %stack.10); ../udivmoddi4.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 36, 14, $noreg :: (store (s32) into %stack.8)
# Before:
bot
# After:
not available
## Instruction: B %bb.49
# Before:
not available
# After:
not available
### Basic Block: 49
## Instruction: $r1 = LDRi12 $sp, 36, 14, $noreg, debug-location !972 :: (load (s32) from %stack.8); ../udivmoddi4.c:0
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 12, 14, $noreg :: (store (s32) into %stack.14)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.13)
# Before:
bot
# After:
not available
## Instruction: B %bb.50, debug-location !973; ../udivmoddi4.c:209:5
# Before:
not available
# After:
not available
### Basic Block: 50
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !972 :: (load (s32) from %stack.14); ../udivmoddi4.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 16, 14, $noreg, debug-location !972 :: (load (s32) from %stack.13); ../udivmoddi4.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.16)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.15)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !973; ../udivmoddi4.c:209:5
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.53, 0, killed $cpsr, debug-location !973; ../udivmoddi4.c:209:5
# Before:
not available
# After:
not available
## Instruction: B %bb.51, debug-location !973; ../udivmoddi4.c:209:5
# Before:
not available
# After:
not available
### Basic Block: 51
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !977 :: (load (s32) from %stack.16); ../udivmoddi4.c:212:43
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -32, 14, $noreg, debug-location !977 :: (dereferenceable load (s32) from %ir.low324, align 8); ../udivmoddi4.c:212:43
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -28, 14, $noreg, debug-location !976 :: (dereferenceable load (s32) from %ir.high321); ../udivmoddi4.c:212:25
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = MOVsi killed renamable $r2, 10, 14, $noreg, $noreg, debug-location !978; ../udivmoddi4.c:212:36
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ORRrsi killed renamable $r2, renamable $r1, 251, 14, $noreg, $noreg, debug-location !978; ../udivmoddi4.c:212:36
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r2, $r11, -28, 14, $noreg, debug-location !981 :: (store (s32) into %ir.high328); ../udivmoddi4.c:212:18
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -20, 14, $noreg, debug-location !983 :: (dereferenceable load (s32) from %ir.high333); ../udivmoddi4.c:213:43
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVsi killed renamable $r1, 10, 14, $noreg, $noreg, debug-location !984; ../udivmoddi4.c:213:36
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, killed renamable $r2, 251, 14, $noreg, $noreg, debug-location !984; ../udivmoddi4.c:213:36
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -32, 14, $noreg, debug-location !986 :: (store (s32) into %ir.low337, align 8); ../udivmoddi4.c:213:18
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -24, 14, $noreg, debug-location !989 :: (dereferenceable load (s32) from %ir.low342, align 8); ../udivmoddi4.c:214:43
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -20, 14, $noreg, debug-location !988 :: (dereferenceable load (s32) from %ir.high339); ../udivmoddi4.c:214:25
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = MOVsi killed renamable $r2, 10, 14, $noreg, $noreg, debug-location !990; ../udivmoddi4.c:214:36
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ORRrsi killed renamable $r2, renamable $r1, 251, 14, $noreg, $noreg, debug-location !990; ../udivmoddi4.c:214:36
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r2, $r11, -20, 14, $noreg, debug-location !993 :: (store (s32) into %ir.high346); ../udivmoddi4.c:214:18
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ORRrsi renamable $r0, killed renamable $r1, 10, 14, $noreg, $noreg, debug-location !995; ../udivmoddi4.c:215:36
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -24, 14, $noreg, debug-location !997 :: (store (s32) into %ir.low352, align 8); ../udivmoddi4.c:215:18
# Before:
bot
# After:
not available
## Instruction: renamable $r12 = LDRi12 $r11, -16, 14, $noreg, debug-location !998 :: (dereferenceable load (s32) from %ir.all354, align 8); ../udivmoddi4.c:223:37
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -12, 14, $noreg, debug-location !998 :: (dereferenceable load (s32) from %ir.all354 + 4, basealign 8); ../udivmoddi4.c:223:37
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -32, 14, $noreg, debug-location !999 :: (dereferenceable load (s32) from %ir.all355, align 8); ../udivmoddi4.c:223:45
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -28, 14, $noreg, debug-location !999 :: (dereferenceable load (s32) from %ir.all355 + 4, basealign 8); ../udivmoddi4.c:223:45
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = MVNr renamable $r1, 14, $noreg, $noreg, debug-location !1000; ../udivmoddi4.c:223:49
# Before:
not available
# After:
not available
## Instruction: renamable $lr = MVNr renamable $r0, 14, $noreg, $noreg, debug-location !1000; ../udivmoddi4.c:223:49
# Before:
not available
# After:
not available
## Instruction: dead renamable $lr = ADDrr renamable $r12, killed renamable $lr, 14, $noreg, def $cpsr, debug-location !1000; ../udivmoddi4.c:223:49
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = ADCrr renamable $r2, killed renamable $r3, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1000; ../udivmoddi4.c:223:49
# Before:
not available
# After:
not available
## Instruction: STRi12 $r3, $sp, 0, 14, $noreg :: (store (s32) into %stack.17)
# Before:
bot
# After:
not available
## Instruction: renamable $r12 = SUBrr renamable $r0, killed renamable $r12, 14, $noreg, def $cpsr, debug-location !1003; ../udivmoddi4.c:225:15
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = SBCrr renamable $r1, killed renamable $r2, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1003; ../udivmoddi4.c:225:15
# Before:
not available
# After:
not available
## Instruction: CMPri renamable $r3, 0, 14, $noreg, implicit-def $cpsr, debug-location !1003; ../udivmoddi4.c:225:15
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr killed renamable $r12, 4, killed $cpsr, $noreg, implicit renamable $r0, debug-location !1003; ../udivmoddi4.c:225:15
# Before:
not available
# After:
not available
## Instruction: CMPri renamable $r3, 0, 14, $noreg, implicit-def $cpsr, debug-location !1003; ../udivmoddi4.c:225:15
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr killed renamable $r2, 4, killed $cpsr, $noreg, implicit renamable $r1, debug-location !1003; ../udivmoddi4.c:225:15
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -28, 14, $noreg, debug-location !1003 :: (store (s32) into %ir.all363 + 4, basealign 8); ../udivmoddi4.c:225:15
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $r11, -32, 14, $noreg, debug-location !1003 :: (store (s32) into %ir.all363, align 8); ../udivmoddi4.c:225:15
# Before:
bot
# After:
not available
## Instruction: B %bb.52, debug-location !1004; ../udivmoddi4.c:226:5
# Before:
not available
# After:
not available
### Basic Block: 52
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1005 :: (load (s32) from %stack.15); ../udivmoddi4.c:224:19
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1005 :: (load (s32) from %stack.17); ../udivmoddi4.c:224:19
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r0, 251, 14, $noreg, $noreg, debug-location !1005; ../udivmoddi4.c:224:19
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !1007; ../udivmoddi4.c:209:20
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 12, 14, $noreg :: (store (s32) into %stack.14)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.13)
# Before:
bot
# After:
not available
## Instruction: B %bb.50, debug-location !973; ../udivmoddi4.c:209:5
# Before:
not available
# After:
not available
### Basic Block: 53
## Instruction: $r0 = LDRi12 $r11, -36, 14, $noreg, debug-location !1009 :: (load (s32) from %stack.4); ../udivmoddi4.c:227:16
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !1009 :: (load (s32) from %stack.16); ../udivmoddi4.c:227:16
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = LDRi12 $r11, -24, 14, $noreg, debug-location !1009 :: (dereferenceable load (s32) from %ir.all365, align 8); ../udivmoddi4.c:227:16
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $r11, -20, 14, $noreg, debug-location !1009 :: (dereferenceable load (s32) from %ir.all365 + 4, basealign 8); ../udivmoddi4.c:227:16
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVsi killed renamable $r1, 10, 14, $noreg, $noreg, debug-location !1010; ../udivmoddi4.c:227:20
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r3, 251, 14, $noreg, $noreg, debug-location !1010; ../udivmoddi4.c:227:20
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ORRrsi renamable $r2, killed renamable $r3, 10, 14, $noreg, $noreg, debug-location !1012; ../udivmoddi4.c:227:26
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r2, $r11, -24, 14, $noreg, debug-location !1014 :: (store (s32) into %ir.all369, align 8); ../udivmoddi4.c:227:11
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $r11, -20, 14, $noreg, debug-location !1014 :: (store (s32) into %ir.all369 + 4, basealign 8); ../udivmoddi4.c:227:11
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1015; ../udivmoddi4.c:228:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.55, 0, killed $cpsr, debug-location !1015; ../udivmoddi4.c:228:9
# Before:
not available
# After:
not available
## Instruction: B %bb.54, debug-location !1015; ../udivmoddi4.c:228:9
# Before:
not available
# After:
not available
### Basic Block: 54
## Instruction: $r1 = LDRi12 $r11, -36, 14, $noreg, debug-location !1016 :: (load (s32) from %stack.4); ../udivmoddi4.c:229:18
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -32, 14, $noreg, debug-location !1016 :: (dereferenceable load (s32) from %ir.all372, align 8); ../udivmoddi4.c:229:18
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, -28, 14, $noreg, debug-location !1016 :: (dereferenceable load (s32) from %ir.all372 + 4, basealign 8); ../udivmoddi4.c:229:18
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r1, 4, 14, $noreg, debug-location !1017 :: (store (s32) into %ir.rem + 4, basealign 8); ../udivmoddi4.c:229:14
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !1017 :: (store (s32) into %ir.rem, align 8); ../udivmoddi4.c:229:14
# Before:
bot
# After:
not available
## Instruction: B %bb.55, debug-location !1018; ../udivmoddi4.c:229:9
# Before:
not available
# After:
not available
### Basic Block: 55
## Instruction: renamable $r1 = LDRi12 $r11, -24, 14, $noreg, debug-location !1019 :: (dereferenceable load (s32) from %ir.all374, align 8); ../udivmoddi4.c:230:14
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $r11, -20, 14, $noreg, debug-location !1019 :: (dereferenceable load (s32) from %ir.all374 + 4, basealign 8); ../udivmoddi4.c:230:14
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 44, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -40, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.56, debug-location !1020; ../udivmoddi4.c:230:5
# Before:
not available
# After:
not available
### Basic Block: 56
## Instruction: $r0 = LDRi12 $sp, 44, 14, $noreg, debug-location !972 :: (load (s32) from %stack.6); ../udivmoddi4.c:0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -40, 14, $noreg, debug-location !972 :: (load (s32) from %stack.5); ../udivmoddi4.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1021; ../udivmoddi4.c:231:1
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1021; ../udivmoddi4.c:231:1
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1021; ../udivmoddi4.c:231:1
# Before:
not available
# After:
not available
### Basic Block: 57
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
#### Function: __udivmodsi4
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r2, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: BL_pred @__udivsi3, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1336; ../udivmodsi4.c:22:14
# Before:
not available
# After:
not available
## Instruction: $r12 = LDRi12 $sp, 4, 14, $noreg, debug-location !1336 :: (load (s32) from %stack.2); ../udivmodsi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1336 :: (load (s32) from %stack.1); ../udivmodsi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $r11, -4, 14, $noreg, debug-location !1336 :: (load (s32) from %stack.0); ../udivmodsi4.c:22:14
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r3 = MULv5 renamable $r0, killed renamable $r12, 14, $noreg, $noreg, debug-location !1337; ../udivmodsi4.c:23:16
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, debug-location !1338; ../udivmodsi4.c:23:12
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, killed renamable $r2, 0, 14, $noreg, debug-location !1339 :: (store (s32) into %ir.rem); ../udivmodsi4.c:23:8
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1340; ../udivmodsi4.c:24:3
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1340; ../udivmodsi4.c:24:3
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1340; ../udivmodsi4.c:24:3
# Before:
not available
# After:
not available
#### Function: __udivsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 64, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $r11, -8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r1, 0, 14, $noreg, implicit-def $cpsr, debug-location !1343; ../udivsi3.c:32:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 1, killed $cpsr, debug-location !1343; ../udivsi3.c:32:9
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1343; ../udivsi3.c:32:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -12, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.13, debug-location !1344; ../udivsi3.c:33:9
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1346 :: (load (s32) from %stack.0); ../udivsi3.c:34:9
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1346; ../udivsi3.c:34:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !1346; ../udivsi3.c:34:9
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !1346; ../udivsi3.c:34:9
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -12, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.13, debug-location !1347; ../udivsi3.c:35:9
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !1348 :: (load (s32) from %stack.1); ../udivsi3.c:36:10
# Before:
bot
# After:
not available
## Instruction: BL &__clzsi2, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit-def $sp, implicit-def $r0, debug-location !1348; ../udivsi3.c:36:10
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg, debug-location !1348; ../udivsi3.c:36:10
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg :: (load (s32) from %stack.0)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r1, $r11, -20, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: BL &__clzsi2, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit-def $sp, implicit-def $r0, debug-location !1349; ../udivsi3.c:36:29
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg, debug-location !1349; ../udivsi3.c:36:29
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -20, 14, $noreg, debug-location !1350 :: (load (s32) from %stack.4); ../udivsi3.c:36:27
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nsw SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1350; ../udivsi3.c:36:27
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $r11, -16, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 32, 14, $noreg, implicit-def $cpsr, debug-location !1352; ../udivsi3.c:38:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 3, killed $cpsr, debug-location !1352; ../udivsi3.c:38:9
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !1352; ../udivsi3.c:38:9
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -12, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.13, debug-location !1353; ../udivsi3.c:39:9
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !1355 :: (load (s32) from %stack.3); ../udivsi3.c:40:9
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 31, 14, $noreg, implicit-def $cpsr, debug-location !1355; ../udivsi3.c:40:9
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 1, killed $cpsr, debug-location !1355; ../udivsi3.c:40:9
# Before:
not available
# After:
not available
## Instruction: B %bb.7, debug-location !1355; ../udivsi3.c:40:9
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg :: (load (s32) from %stack.0)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -12, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.13, debug-location !1356; ../udivsi3.c:41:9
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1357 :: (load (s32) from %stack.0); ../udivsi3.c:42:5
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $r11, -16, 14, $noreg, debug-location !1357 :: (load (s32) from %stack.3); ../udivsi3.c:42:5
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = nsw ADDri renamable $r2, 1, 14, $noreg, $noreg, debug-location !1357; ../udivsi3.c:42:5
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = nsw RSBri renamable $r2, 31, 14, $noreg, $noreg, debug-location !1358; ../udivsi3.c:45:28
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVsr renamable $r0, killed renamable $r2, 2, 14, $noreg, $noreg, debug-location !1359; ../udivsi3.c:45:11
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsr renamable $r0, renamable $r1, 3, 14, $noreg, $noreg, debug-location !1360; ../udivsi3.c:46:11
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 28, 14, $noreg :: (store (s32) into %stack.8)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 32, 14, $noreg :: (store (s32) into %stack.7)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $r11, -28, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -24, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1361; ../udivsi3.c:48:5
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: $r1 = LDRi12 $sp, 28, 14, $noreg, debug-location !1362 :: (load (s32) from %stack.8); ../udivsi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 32, 14, $noreg, debug-location !1362 :: (load (s32) from %stack.7); ../udivsi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -28, 14, $noreg, debug-location !1362 :: (load (s32) from %stack.6); ../udivsi3.c:0
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $r11, -24, 14, $noreg, debug-location !1362 :: (load (s32) from %stack.5); ../udivsi3.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 12, 14, $noreg :: (store (s32) into %stack.12)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.11)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 20, 14, $noreg :: (store (s32) into %stack.10)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 24, 14, $noreg :: (store (s32) into %stack.9)
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1361; ../udivsi3.c:48:5
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.12, 0, killed $cpsr, debug-location !1361; ../udivsi3.c:48:5
# Before:
not available
# After:
not available
## Instruction: B %bb.10, debug-location !1361; ../udivsi3.c:48:5
# Before:
not available
# After:
not available
### Basic Block: 10
## Instruction: $r1 = LDRi12 $r11, -8, 14, $noreg, debug-location !1364 :: (load (s32) from %stack.1); ../udivsi3.c:51:22
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 24, 14, $noreg, debug-location !1364 :: (load (s32) from %stack.9); ../udivsi3.c:51:22
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 20, 14, $noreg, debug-location !1364 :: (load (s32) from %stack.10); ../udivsi3.c:51:22
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r0, 10, 14, $noreg, $noreg, debug-location !1364; ../udivsi3.c:51:22
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r2, 251, 14, $noreg, $noreg, debug-location !1364; ../udivsi3.c:51:22
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.14)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MVNr renamable $r0, 14, $noreg, $noreg, debug-location !1365; ../udivsi3.c:60:41
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1365; ../udivsi3.c:60:41
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.13)
# Before:
bot
# After:
not available
## Instruction: B %bb.11, debug-location !1366; ../udivsi3.c:63:5
# Before:
not available
# After:
not available
### Basic Block: 11
## Instruction: $r1 = LDRi12 $sp, 16, 14, $noreg, debug-location !1368 :: (load (s32) from %stack.11); ../udivsi3.c:62:11
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 12, 14, $noreg, debug-location !1368 :: (load (s32) from %stack.12); ../udivsi3.c:62:11
# Before:
bot
# After:
not available
## Instruction: $r12 = LDRi12 $sp, 24, 14, $noreg, debug-location !1368 :: (load (s32) from %stack.9); ../udivsi3.c:62:11
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !1368 :: (load (s32) from %stack.13); ../udivsi3.c:62:11
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !1368 :: (load (s32) from %stack.14); ../udivsi3.c:62:11
# Before:
bot
# After:
not available
## Instruction: $lr = LDRi12 $r11, -8, 14, $noreg, debug-location !1368 :: (load (s32) from %stack.1); ../udivsi3.c:62:11
# Before:
bot
# After:
not available
## Instruction: renamable $lr = SUBrr renamable $r2, renamable $lr, 14, $noreg, $noreg, debug-location !1368; ../udivsi3.c:62:11
# Before:
not available
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1368; ../udivsi3.c:62:11
# Before:
not available
# After:
not available
## Instruction: $r2 = MOVr killed renamable $lr, 4, killed $cpsr, $noreg, implicit renamable $r2, debug-location !1368; ../udivsi3.c:62:11
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r0, 251, 14, $noreg, $noreg, debug-location !1369; ../udivsi3.c:61:19
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = ORRrsi renamable $r3, renamable $r12, 10, 14, $noreg, $noreg, debug-location !1371; ../udivsi3.c:52:22
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !1372; ../udivsi3.c:48:20
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 28, 14, $noreg :: (store (s32) into %stack.8)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 32, 14, $noreg :: (store (s32) into %stack.7)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $r11, -28, 14, $noreg :: (store (s32) into %stack.6)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -24, 14, $noreg :: (store (s32) into %stack.5)
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1361; ../udivsi3.c:48:5
# Before:
not available
# After:
not available
### Basic Block: 12
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1375 :: (load (s32) from %stack.12); ../udivsi3.c:64:18
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !1375 :: (load (s32) from %stack.9); ../udivsi3.c:64:18
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ORRrsi renamable $r0, renamable $r1, 10, 14, $noreg, $noreg, debug-location !1375; ../udivsi3.c:64:18
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -12, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: B %bb.13, debug-location !1376; ../udivsi3.c:65:5
# Before:
not available
# After:
not available
### Basic Block: 13
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !1362 :: (load (s32) from %stack.2); ../udivsi3.c:0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1377; ../udivsi3.c:66:1
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1377; ../udivsi3.c:66:1
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1377; ../udivsi3.c:66:1
# Before:
not available
# After:
not available
#### Function: __umoddi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $lr = MOVr $sp, 14, $noreg, $noreg, debug-location !1379; ../umoddi3.c:23:5
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ADDri $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r12, killed renamable $lr, 0, 14, $noreg, debug-location !1379 :: (store (s32) into stack); ../umoddi3.c:23:5
# Before:
bot
# After:
not available
## Instruction: BL_pred @__udivmoddi4, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !1379; ../umoddi3.c:23:5
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !1380 :: (dereferenceable load (s32) from %ir.r, align 8); ../umoddi3.c:24:12
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1380 :: (dereferenceable load (s32) from %ir.r + 4, basealign 8); ../umoddi3.c:24:12
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1381; ../umoddi3.c:24:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1381; ../umoddi3.c:24:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1381; ../umoddi3.c:24:5
# Before:
not available
# After:
not available
#### Function: __umodsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: BL_pred @__udivsi3, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1383; ../umodsi3.c:22:16
# Before:
not available
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 0, 14, $noreg, debug-location !1383 :: (load (s32) from %stack.1); ../umodsi3.c:22:16
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg, debug-location !1383; ../umodsi3.c:22:16
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1384 :: (load (s32) from %stack.0); ../umodsi3.c:22:32
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r2, killed renamable $r3, 14, $noreg, $noreg, debug-location !1384; ../umodsi3.c:22:32
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1385; ../umodsi3.c:22:14
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1386; ../umodsi3.c:22:5
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1386; ../umodsi3.c:22:5
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1386; ../umodsi3.c:22:5
# Before:
not available
# After:
not available
#### Function: compilerrt_abort_impl
### Basic Block: 0
#### Function: g723_enc_abs
### Basic Block: 0
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !149; batchtest/g723_enc/g723_enc.c:223:3
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I43 |->
      [
       Function call at location g723_enc_quantize_BB0_I10 |->
        [
         Call of function g723_enc_abs |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd041e, @g723_enc_qtab_723_24,
 3 |-> 0x3,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
#### Function: g723_enc_alaw2linear
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I13 |->
      [
       Call of function g723_enc_alaw2linear |->
        Leaf:
[0 |-> top,
 1 |-> 0x2,
 2 |-> 0xd0890, @g723_enc_state,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r1 = MOVr killed $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r1, 194, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 193, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = EORri killed renamable $r1, 85, 14, $noreg, $noreg, debug-location !272; batchtest/g723_enc/g723_enc.c:496:9
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 264, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r3, 34, 14, $noreg, $noreg, debug-location !273; batchtest/g723_enc/g723_enc.c:498:30
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVi 7, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ANDrsi killed renamable $r2, killed renamable $r3, 35, 14, $noreg, $noreg, debug-location !274; batchtest/g723_enc/g723_enc.c:499:42
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDri killed renamable $r1, 504, 14, $noreg, $noreg, debug-location !275; batchtest/g723_enc/g723_enc.c:500:5
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = nsw SUBri killed renamable $r2, 1, 14, $noreg, $noreg, debug-location !276; batchtest/g723_enc/g723_enc.c:501:13
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVsr killed renamable $r1, killed renamable $r2, 2, 14, $noreg, $noreg, debug-location !277; batchtest/g723_enc/g723_enc.c:501:5
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I13 |->
      [
       Call of function g723_enc_alaw2linear |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff98,
 14 |-> top,
 15 |-> top]
{0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: CMNri killed renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !279; batchtest/g723_enc/g723_enc.c:503:12
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 12, killed $cpsr, debug-location !279; batchtest/g723_enc/g723_enc.c:503:12
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !279; batchtest/g723_enc/g723_enc.c:503:12
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg :: (load (s32) from %stack.0)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I13 |->
      [
       Call of function g723_enc_alaw2linear |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff98,
 14 |-> top,
 15 |-> top]
{0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I13 |->
      [
       Call of function g723_enc_alaw2linear |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff98,
 14 |-> top,
 15 |-> top]
{0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: B %bb.3, debug-location !279; batchtest/g723_enc/g723_enc.c:503:12
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !280 :: (load (s32) from %stack.0); batchtest/g723_enc/g723_enc.c:503:39
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I13 |->
      [
       Call of function g723_enc_alaw2linear |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff98,
 14 |-> top,
 15 |-> top]
{0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = nsw RSBri renamable $r0, 0, 14, $noreg, $noreg, debug-location !280; batchtest/g723_enc/g723_enc.c:503:39
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I13 |->
      [
       Call of function g723_enc_alaw2linear |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff98,
 14 |-> top,
 15 |-> top]
{0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: B %bb.3, debug-location !279; batchtest/g723_enc/g723_enc.c:503:12
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !279 :: (load (s32) from %stack.1); batchtest/g723_enc/g723_enc.c:503:12
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I13 |->
      [
       Call of function g723_enc_alaw2linear |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff98,
 14 |-> top,
 15 |-> top]
{0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 8, 14, $noreg, $noreg, debug-location !281; batchtest/g723_enc/g723_enc.c:503:3
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !281; batchtest/g723_enc/g723_enc.c:503:3
# Before:
not available
# After:
not available
#### Function: g723_enc_fmult
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Function call at location g723_enc_predictor_zero_BB0_I12 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]

       Function call at location g723_enc_predictor_zero_BB2_I6 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]

     Function call at location g723_enc_g723_24_encoder_BB0_I22 |->
      [
       Function call at location g723_enc_predictor_pole_BB0_I12 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff90,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]

       Function call at location g723_enc_predictor_pole_BB0_I18 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff90,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Function call at location g723_enc_predictor_zero_BB0_I12 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff78,
 12 |-> top,
 13 |-> 0x7ffff70,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]

       Function call at location g723_enc_predictor_zero_BB2_I6 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff78,
 12 |-> top,
 13 |-> 0x7ffff70,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]

     Function call at location g723_enc_g723_24_encoder_BB0_I22 |->
      [
       Function call at location g723_enc_predictor_pole_BB0_I12 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff88,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]

       Function call at location g723_enc_predictor_pole_BB0_I18 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff88,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r1 = LDRi12 %const.0, 0, 14, $noreg, debug-location !129 :: (load (s32) from constant-pool); batchtest/g723_enc/g723_enc.c:209:11
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Function call at location g723_enc_predictor_zero_BB0_I12 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff78,
 12 |-> top,
 13 |-> 0x7ffff70,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]

       Function call at location g723_enc_predictor_zero_BB2_I6 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff78,
 12 |-> top,
 13 |-> 0x7ffff70,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]

     Function call at location g723_enc_g723_24_encoder_BB0_I22 |->
      [
       Function call at location g723_enc_predictor_pole_BB0_I12 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff88,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]

       Function call at location g723_enc_predictor_pole_BB0_I18 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff88,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r0 = MOVi 255, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r0 = ORRri $r0, 7936, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVi 3, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL_pred @g723_enc_quan, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, implicit-def $r0, debug-location !129; batchtest/g723_enc/g723_enc.c:209:11
# Before:
not available
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 4, 14, $noreg, debug-location !129 :: (load (s32) from %stack.0); batchtest/g723_enc/g723_enc.c:209:11
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Function call at location g723_enc_predictor_zero_BB0_I12 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> 0x0,
 1 |-> 0xd0400, @g723_enc_power2,
 2 |-> 0x3,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff78,
 12 |-> top,
 13 |-> 0x7ffff70,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]

       Function call at location g723_enc_predictor_zero_BB2_I6 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> 0x0,
 1 |-> 0xd0400, @g723_enc_power2,
 2 |-> 0x3,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff78,
 12 |-> top,
 13 |-> 0x7ffff70,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]

     Function call at location g723_enc_g723_24_encoder_BB0_I22 |->
      [
       Function call at location g723_enc_predictor_pole_BB0_I12 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> 0x0,
 1 |-> 0xd0400, @g723_enc_power2,
 2 |-> 0x3,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff88,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]

       Function call at location g723_enc_predictor_pole_BB0_I18 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> 0x0,
 1 |-> 0xd0400, @g723_enc_power2,
 2 |-> 0x3,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff88,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r2 = SUBri killed renamable $r0, 6, 14, $noreg, $noreg, debug-location !129; batchtest/g723_enc/g723_enc.c:209:11
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r2, 130, 14, $noreg, $noreg, debug-location !130; batchtest/g723_enc/g723_enc.c:210:22
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = nsw SUBrsi renamable $r1, killed renamable $r0, 129, 14, $noreg, $noreg, debug-location !131; batchtest/g723_enc/g723_enc.c:210:21
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 15, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrsi killed renamable $r0, renamable $r3, 51, 14, $noreg, $noreg, debug-location !132; batchtest/g723_enc/g723_enc.c:211:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !132; batchtest/g723_enc/g723_enc.c:211:12
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = SUBri killed renamable $r0, 13, 14, $noreg, $noreg, debug-location !132; batchtest/g723_enc/g723_enc.c:211:12
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVi 16711680, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r0 = ORRri $r0, 520093696, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r12, 2, 14, $noreg, $noreg, debug-location !133; batchtest/g723_enc/g723_enc.c:213:15
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = exact MOVsi killed renamable $r0, 129, 14, $noreg, $noreg, debug-location !133; batchtest/g723_enc/g723_enc.c:213:15
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ANDri killed renamable $r3, 63, 14, $noreg, $noreg, debug-location !134; batchtest/g723_enc/g723_enc.c:213:30
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r3 = nsw MULv5 killed renamable $r0, killed renamable $r12, 14, $noreg, $noreg, debug-location !135; batchtest/g723_enc/g723_enc.c:213:22
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 196608, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, killed renamable $r3, 98, 14, $noreg, $noreg, debug-location !136; batchtest/g723_enc/g723_enc.c:214:14
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 129, 14, $noreg, $noreg, debug-location !136; batchtest/g723_enc/g723_enc.c:214:14
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsi killed renamable $r2, 130, 14, $noreg, $noreg, debug-location !137; batchtest/g723_enc/g723_enc.c:214:26
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nsw SUBrsi killed renamable $r1, killed renamable $r2, 129, 14, $noreg, $noreg, debug-location !138; batchtest/g723_enc/g723_enc.c:214:25
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r1, 1, 14, $noreg, $noreg, debug-location !139; batchtest/g723_enc/g723_enc.c:214:22
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !140; batchtest/g723_enc/g723_enc.c:216:3
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !140; batchtest/g723_enc/g723_enc.c:216:3
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Function call at location g723_enc_predictor_zero_BB0_I12 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff78,
 12 |-> top,
 13 |-> 0x7ffff78,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]

       Function call at location g723_enc_predictor_zero_BB2_I6 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff78,
 12 |-> top,
 13 |-> 0x7ffff78,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]

     Function call at location g723_enc_g723_24_encoder_BB0_I22 |->
      [
       Function call at location g723_enc_predictor_pole_BB0_I12 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff88,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]

       Function call at location g723_enc_predictor_pole_BB0_I18 |->
        [
         Call of function g723_enc_fmult |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff88,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !140; batchtest/g723_enc/g723_enc.c:216:3
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
#### Function: g723_enc_g723_24_encoder
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r4, killed $r5, killed $r6, killed $r10, killed $r11, killed $lr
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> 0x2,
 2 |-> 0xd0890, @g723_enc_state,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{}
    ]
  ]
]
# After:
not available
## Instruction: $r11 = frame-setup ADDri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 48, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r6 = MOVr killed $r2, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDri killed renamable $r0, 255, 14, $noreg, $noreg, debug-location !295; batchtest/g723_enc/g723_enc.c:556:8
# Before:
not available
# After:
not available
## Instruction: BL_pred @g723_enc_alaw2linear, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit-def $sp, implicit-def $r0, debug-location !295; batchtest/g723_enc/g723_enc.c:556:8
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 19, 14, $noreg, $noreg, debug-location !296; batchtest/g723_enc/g723_enc.c:556:35
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 20, 14, $noreg :: (store (s32) into %stack.6)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: $r0 = MOVr $r6, 14, $noreg, $noreg, debug-location !297; batchtest/g723_enc/g723_enc.c:559:10
# Before:
not available
# After:
not available
## Instruction: BL_pred @g723_enc_predictor_zero, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit-def $sp, implicit-def $r0, debug-location !297; batchtest/g723_enc/g723_enc.c:559:10
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.7)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r0, 130, 14, $noreg, $noreg, debug-location !298; batchtest/g723_enc/g723_enc.c:560:9
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 28, 14, $noreg :: (store (s32) into %stack.4)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: $r0 = MOVr $r6, 14, $noreg, $noreg, debug-location !300; batchtest/g723_enc/g723_enc.c:561:16
# Before:
not available
# After:
not available
## Instruction: BL_pred @g723_enc_predictor_pole, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit-def $sp, implicit-def $r0, debug-location !300; batchtest/g723_enc/g723_enc.c:561:16
# Before:
not available
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 16, 14, $noreg, debug-location !300 :: (load (s32) from %stack.7); batchtest/g723_enc/g723_enc.c:561:16
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg, debug-location !300; batchtest/g723_enc/g723_enc.c:561:16
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 20, 14, $noreg, debug-location !301 :: (load (s32) from %stack.6); batchtest/g723_enc/g723_enc.c:561:14
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r1 = ADDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !301; batchtest/g723_enc/g723_enc.c:561:14
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVsi killed renamable $r1, 130, 14, $noreg, $noreg, debug-location !302; batchtest/g723_enc/g723_enc.c:562:8
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 32, 14, $noreg :: (store (s32) into %stack.3)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = nsw SUBrsi killed renamable $r0, renamable $r1, 137, 14, $noreg, $noreg, debug-location !304; batchtest/g723_enc/g723_enc.c:564:10
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 24, 14, $noreg :: (store (s32) into %stack.5)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: $r0 = MOVr $r6, 14, $noreg, $noreg, debug-location !305; batchtest/g723_enc/g723_enc.c:567:7
# Before:
not available
# After:
not available
## Instruction: BL_pred @g723_enc_step_size, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit-def $sp, implicit-def $r0, debug-location !305; batchtest/g723_enc/g723_enc.c:567:7
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg, debug-location !305; batchtest/g723_enc/g723_enc.c:567:7
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 24, 14, $noreg, debug-location !306 :: (load (s32) from %stack.5); batchtest/g723_enc/g723_enc.c:568:26
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 130, 14, $noreg, $noreg, debug-location !306; batchtest/g723_enc/g723_enc.c:568:26
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 129, 14, $noreg, $noreg, debug-location !306; batchtest/g723_enc/g723_enc.c:568:26
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVsi killed renamable $r1, 130, 14, $noreg, $noreg, debug-location !307; batchtest/g723_enc/g723_enc.c:568:29
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVsi killed renamable $r1, 129, 14, $noreg, $noreg, debug-location !307; batchtest/g723_enc/g723_enc.c:568:29
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $r11, -28, 14, $noreg :: (store (s32) into %stack.2)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.0, 0, 14, $noreg, debug-location !308 :: (load (s32) from constant-pool); batchtest/g723_enc/g723_enc.c:568:7
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r3 = MOVi 3, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r3, $r11, -24, 14, $noreg :: (store (s32) into %stack.1)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd041e, @g723_enc_qtab_723_24,
 3 |-> 0x3,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: BL_pred @g723_enc_quantize, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, debug-location !308; batchtest/g723_enc/g723_enc.c:568:7
# Before:
not available
# After:
not available
## Instruction: $r2 = LDRi12 $r11, -28, 14, $noreg, debug-location !308 :: (load (s32) from %stack.2); batchtest/g723_enc/g723_enc.c:568:7
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> 0x0,
 1 |-> 0xd041e, @g723_enc_qtab_723_24,
 2 |-> 0x3,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: $r1 = MOVr killed $r0, 14, $noreg, $noreg, debug-location !308; batchtest/g723_enc/g723_enc.c:568:7
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDri renamable $r1, 4, 14, $noreg, $noreg, debug-location !309; batchtest/g723_enc/g723_enc.c:569:32
# Before:
not available
# After:
not available
## Instruction: renamable $r5 = MOVsi killed renamable $r1, 130, 14, $noreg, $noreg, debug-location !310; batchtest/g723_enc/g723_enc.c:569:37
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVsi renamable $r5, 129, 14, $noreg, $noreg, debug-location !310; batchtest/g723_enc/g723_enc.c:569:37
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $r11, -20, 14, $noreg :: (store (s32) into %stack.0)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r1 = LDRi12 %const.1, 0, 14, $noreg, debug-location !310 :: (load (s32) from constant-pool); batchtest/g723_enc/g723_enc.c:569:37
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, renamable $r5, 121, 14, $noreg, $noreg, debug-location !310; batchtest/g723_enc/g723_enc.c:569:37
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRSH killed renamable $r1, $noreg, 0, 14, $noreg, debug-location !310 :: (load (s16) from %ir.arrayidx); batchtest/g723_enc/g723_enc.c:569:37
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: BL_pred @g723_enc_reconstruct, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, implicit-def $r0, debug-location !312; batchtest/g723_enc/g723_enc.c:569:8
# Before:
not available
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 28, 14, $noreg, debug-location !312 :: (load (s32) from %stack.4); batchtest/g723_enc/g723_enc.c:569:8
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 32, 14, $noreg, debug-location !312 :: (load (s32) from %stack.3); batchtest/g723_enc/g723_enc.c:569:8
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -28, 14, $noreg, debug-location !312 :: (load (s32) from %stack.2); batchtest/g723_enc/g723_enc.c:569:8
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: $r4 = MOVr $r0, 14, $noreg, $noreg, debug-location !312; batchtest/g723_enc/g723_enc.c:569:8
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -24, 14, $noreg, debug-location !313 :: (load (s32) from %stack.1); batchtest/g723_enc/g723_enc.c:572:12
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $lr = ADDrsi renamable $r4, renamable $r3, 137, 14, $noreg, $noreg, debug-location !313; batchtest/g723_enc/g723_enc.c:572:12
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ADDrsi renamable $lr, killed renamable $r2, 137, 14, $noreg, $noreg, debug-location !314; batchtest/g723_enc/g723_enc.c:574:14
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = SUBrsi killed renamable $r2, killed renamable $r3, 137, 14, $noreg, $noreg, debug-location !315; batchtest/g723_enc/g723_enc.c:574:20
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.2, 0, 14, $noreg, debug-location !317 :: (load (s32) from constant-pool); batchtest/g723_enc/g723_enc.c:576:26
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> 0x3,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r2 = ADDrsi killed renamable $r2, renamable $r5, 121, 14, $noreg, $noreg, debug-location !317; batchtest/g723_enc/g723_enc.c:576:26
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRSH killed renamable $r2, $noreg, 0, 14, $noreg, debug-location !317 :: (load (s16) from %ir.arrayidx37); batchtest/g723_enc/g723_enc.c:576:26
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> 0x3,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r3 = LDRi12 %const.3, 0, 14, $noreg, debug-location !318 :: (load (s32) from constant-pool); batchtest/g723_enc/g723_enc.c:576:47
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> 0x3,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r3 = ADDrsi killed renamable $r3, killed renamable $r5, 121, 14, $noreg, $noreg, debug-location !318; batchtest/g723_enc/g723_enc.c:576:47
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRSH killed renamable $r3, $noreg, 0, 14, $noreg, debug-location !318 :: (load (s16) from %ir.arrayidx40); batchtest/g723_enc/g723_enc.c:576:47
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> 0x3,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r4 = MOVsi killed renamable $r4, 130, 14, $noreg, $noreg, debug-location !319; batchtest/g723_enc/g723_enc.c:576:68
# Before:
not available
# After:
not available
## Instruction: renamable $r4 = MOVsi killed renamable $r4, 129, 14, $noreg, $noreg, debug-location !319; batchtest/g723_enc/g723_enc.c:576:68
# Before:
not available
# After:
not available
## Instruction: renamable $lr = MOVsi killed renamable $lr, 130, 14, $noreg, $noreg, debug-location !320; batchtest/g723_enc/g723_enc.c:576:72
# Before:
not available
# After:
not available
## Instruction: renamable $r5 = MOVsi killed renamable $lr, 129, 14, $noreg, $noreg, debug-location !320; batchtest/g723_enc/g723_enc.c:576:72
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVsi killed renamable $r12, 130, 14, $noreg, $noreg, debug-location !321; batchtest/g723_enc/g723_enc.c:576:76
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVsi killed renamable $r12, 129, 14, $noreg, $noreg, debug-location !321; batchtest/g723_enc/g723_enc.c:576:76
# Before:
not available
# After:
not available
## Instruction: $lr = MOVr $sp, 14, $noreg, $noreg, debug-location !322; batchtest/g723_enc/g723_enc.c:576:3
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r6, renamable $lr, 12, 14, $noreg, debug-location !322 :: (store (s32) into stack + 12); batchtest/g723_enc/g723_enc.c:576:3
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> 0x3,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> 0x7ffffa0,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: STRi12 killed renamable $r5, renamable $lr, 4, 14, $noreg, debug-location !322 :: (store (s32) into stack + 4); batchtest/g723_enc/g723_enc.c:576:3
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> 0x3,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> 0x7ffffa0,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: STRi12 killed renamable $r4, renamable $lr, 0, 14, $noreg, debug-location !322 :: (store (s32) into stack); batchtest/g723_enc/g723_enc.c:576:3
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> 0x3,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> 0x7ffffa0,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: STRi12 killed renamable $r12, killed renamable $lr, 8, 14, $noreg, debug-location !322 :: (store (s32) into stack + 8); batchtest/g723_enc/g723_enc.c:576:3
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> 0x3,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> 0x7ffffa0,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: BL_pred @g723_enc_update, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, debug-location !322; batchtest/g723_enc/g723_enc.c:576:3
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -20, 14, $noreg, debug-location !322 :: (load (s32) from %stack.0); batchtest/g723_enc/g723_enc.c:576:3
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> 0x100,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
    ]
  ]
]
# After:
not available
## Instruction: $sp = frame-destroy SUBri killed $r11, 16, 14, $noreg, $noreg, debug-location !324; batchtest/g723_enc/g723_enc.c:579:3
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r4, def $r5, def $r6, def $r10, def $r11, def $lr, debug-location !324; batchtest/g723_enc/g723_enc.c:579:3
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Call of function g723_enc_g723_24_encoder |->
      Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffd0,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
    ]
  ]
]
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !324; batchtest/g723_enc/g723_enc.c:579:3
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
#### Function: g723_enc_init
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function g723_enc_init |->
    Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff8,
 12 |-> top,
 13 |-> 0x7fffff8,
 14 |-> top,
 15 |-> top]
{}
  ]
]
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function g723_enc_init |->
    Leaf:
[0 |-> 0x0,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7fffff0 |-> 0x7fffff8
}
  ]
]
# After:
not available
## Instruction: STRi12 renamable $r0, $r11, -4, 14, $noreg, debug-location !380 :: (volatile store (s32) into %ir.x); batchtest/g723_enc/g723_enc.c:652:16
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function g723_enc_init |->
    Leaf:
[0 |-> 0x0,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffe4 |-> 0x0
0x7fffff0 |-> 0x7fffff8
}
  ]
]
# After:
not available
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !381 :: (load (s32) from constant-pool); batchtest/g723_enc/g723_enc.c:653:3
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function g723_enc_init |->
    Leaf:
[0 |-> 0x0,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}
  ]
]
# After:
not available
## Instruction: BL_pred @g723_enc_init_state, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit-def $sp, debug-location !381; batchtest/g723_enc/g723_enc.c:653:3
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !381 :: (load (s32) from %stack.2); batchtest/g723_enc/g723_enc.c:653:3
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function g723_enc_init |->
    Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
  ]
]
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function g723_enc_init |->
    Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
  ]
]
# After:
not available
## Instruction: B %bb.1, debug-location !382; batchtest/g723_enc/g723_enc.c:656:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !383 :: (load (s32) from %stack.1); batchtest/g723_enc/g723_enc.c:0
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function g723_enc_init |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init taken 0 times |->
      Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
0x7ffffe8 |-> 0x0
}

     Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> 0xd0000, @g723_enc_INPUT,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
    ]
  ]
]
# After:
not available
## Instruction: STRi12 $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.3)
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function g723_enc_init |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init taken 0 times |->
      Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
0x7ffffe8 |-> 0x0
}

     Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> 0xd0000, @g723_enc_INPUT,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
    ]
  ]
]
# After:
not available
## Instruction: CMPri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !385; batchtest/g723_enc/g723_enc.c:656:3
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 0, killed $cpsr, debug-location !385; batchtest/g723_enc/g723_enc.c:656:3
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !385; batchtest/g723_enc/g723_enc.c:656:3
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r2 = LDRi12 $sp, 0, 14, $noreg, debug-location !386 :: (load (s32) from %stack.3); batchtest/g723_enc/g723_enc.c:657:28
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function g723_enc_init |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init taken 0 times |->
      Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe0 |-> 0x0
0x7ffffe4 |-> 0x0
0x7ffffe8 |-> 0x0
}

     Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> 0xd0000, @g723_enc_INPUT,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r3 = LDRi12 $r11, -4, 14, $noreg, debug-location !386 :: (volatile dereferenceable load (s32) from %ir.x); batchtest/g723_enc/g723_enc.c:657:28
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function g723_enc_init |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init taken 0 times |->
      Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> 0x0,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe0 |-> 0x0
0x7ffffe4 |-> 0x0
0x7ffffe8 |-> 0x0
}

     Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> 0xd0000, @g723_enc_INPUT,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r1 = LDRi12 %const.1, 0, 14, $noreg, debug-location !387 :: (load (s32) from constant-pool); batchtest/g723_enc/g723_enc.c:657:5
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function g723_enc_init |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init taken 0 times |->
      Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> 0x0,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe0 |-> 0x0
0x7ffffe4 |-> 0x0
0x7ffffe8 |-> 0x0
}

     Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> 0xd0000, @g723_enc_INPUT,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = LDRrs renamable $r1, renamable $r2, 16386, 14, $noreg, debug-location !388 :: (load (s32) from %ir.arrayidx); batchtest/g723_enc/g723_enc.c:657:25
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function g723_enc_init |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init taken 0 times |->
      Leaf:
[0 |-> 0x0,
 1 |-> 0xd0000, @g723_enc_INPUT,
 2 |-> 0x0,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe0 |-> 0x0
0x7ffffe4 |-> 0x0
0x7ffffe8 |-> 0x0
}

     Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> 0xd0000, @g723_enc_INPUT,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r3, 14, $noreg, $noreg, debug-location !388; batchtest/g723_enc/g723_enc.c:657:25
# Before:
not available
# After:
not available
## Instruction: STRrs killed renamable $r0, killed renamable $r1, renamable $r2, 16386, 14, $noreg, debug-location !388 :: (store (s32) into %ir.arrayidx); batchtest/g723_enc/g723_enc.c:657:25
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function g723_enc_init |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init taken 0 times |->
      Leaf:
[0 |-> top,
 1 |-> 0xd0000, @g723_enc_INPUT,
 2 |-> 0x0,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe0 |-> 0x0
0x7ffffe4 |-> 0x0
0x7ffffe8 |-> 0x0
}

     Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> 0xd0000, @g723_enc_INPUT,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
    ]
  ]
]
# After:
not available
## Instruction: B %bb.3, debug-location !387; batchtest/g723_enc/g723_enc.c:657:5
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !389 :: (load (s32) from %stack.3); batchtest/g723_enc/g723_enc.c:656:24
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function g723_enc_init |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init taken 0 times |->
      Leaf:
[0 |-> top,
 1 |-> 0xd0000, @g723_enc_INPUT,
 2 |-> 0x0,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe0 |-> 0x0
0x7ffffe4 |-> 0x0
0x7ffffe8 |-> 0x0
}

     Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> 0xd0000, @g723_enc_INPUT,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDri renamable $r0, 1, 14, $noreg, $noreg, debug-location !389; batchtest/g723_enc/g723_enc.c:656:24
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function g723_enc_init |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init taken 0 times |->
      Leaf:
[0 |-> 0x1,
 1 |-> 0xd0000, @g723_enc_INPUT,
 2 |-> 0x0,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe0 |-> 0x0
0x7ffffe4 |-> 0x0
0x7ffffe8 |-> 0x0
}

     Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> 0xd0000, @g723_enc_INPUT,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
    ]
  ]
]
# After:
not available
## Instruction: B %bb.1, debug-location !385; batchtest/g723_enc/g723_enc.c:656:3
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !391; batchtest/g723_enc/g723_enc.c:658:1
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !391; batchtest/g723_enc/g723_enc.c:658:1
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Call of function g723_enc_init |->
    Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7fffff0,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
  ]
]
# After:
not available
## Instruction: BX_RET 14, $noreg, debug-location !391; batchtest/g723_enc/g723_enc.c:658:1
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: g723_enc_init_state
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 20, 14, $noreg, $noreg
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: $r1 = MOVr killed $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 12, 14, $noreg :: (store (s32) into %stack.1)
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVi 34816, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !344 :: (store (s32) into %ir.yl); batchtest/g723_enc/g723_enc.c:628:17
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      Leaf:
[0 |-> 0x8800,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVi 544, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRH killed renamable $r0, renamable $r1, $noreg, 4, 14, $noreg, debug-location !346 :: (store (s16) into %ir.yu, align 4); batchtest/g723_enc/g723_enc.c:629:17
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      Leaf:
[0 |-> 0x220,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0xd0890 |-> 0x8800
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRH renamable $r0, renamable $r1, $noreg, 6, 14, $noreg, debug-location !348 :: (store (s16) into %ir.dms); batchtest/g723_enc/g723_enc.c:630:18
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0xd0890 |-> 0x8800
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: STRH renamable $r0, renamable $r1, $noreg, 8, 14, $noreg, debug-location !350 :: (store (s16) into %ir.dml, align 4); batchtest/g723_enc/g723_enc.c:631:18
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0xd0890 |-> 0x8800
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: STRH renamable $r0, renamable $r1, $noreg, 10, 14, $noreg, debug-location !352 :: (store (s16) into %ir.ap); batchtest/g723_enc/g723_enc.c:632:17
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0xd0890 |-> 0x8800
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.0)
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0xd0890 |-> 0x8800
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}
    ]
  ]
]
# After:
not available
## Instruction: B %bb.1, debug-location !353; batchtest/g723_enc/g723_enc.c:635:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !354 :: (load (s32) from %stack.0); batchtest/g723_enc/g723_enc.c:0
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      [
       Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init_state taken 0 times |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0xd0890 |-> 0x8800
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffdc |-> 0x0
0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

       Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init_state taken at least 1 times |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRi12 $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.2)
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      [
       Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init_state taken 0 times |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0xd0890 |-> 0x8800
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffdc |-> 0x0
0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

       Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init_state taken at least 1 times |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: CMPri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !356; batchtest/g723_enc/g723_enc.c:635:3
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 0, killed $cpsr, debug-location !356; batchtest/g723_enc/g723_enc.c:635:3
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !356; batchtest/g723_enc/g723_enc.c:635:3
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !357 :: (load (s32) from %stack.1); batchtest/g723_enc/g723_enc.c:636:5
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      [
       Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init_state taken 0 times |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0xd0890 |-> 0x8800
0x7ffffd4 |-> 0x0
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffdc |-> 0x0
0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

       Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init_state taken at least 1 times |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !357 :: (load (s32) from %stack.2); batchtest/g723_enc/g723_enc.c:636:5
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      [
       Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init_state taken 0 times |->
        Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0xd0890 |-> 0x8800
0x7ffffd4 |-> 0x0
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffdc |-> 0x0
0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

       Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init_state taken at least 1 times |->
        Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r1 = ADDrsi renamable $r0, renamable $r1, 10, 14, $noreg, $noreg, debug-location !357; batchtest/g723_enc/g723_enc.c:636:5
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRH renamable $r0, renamable $r1, $noreg, 12, 14, $noreg, debug-location !358 :: (store (s16) into %ir.arrayidx); batchtest/g723_enc/g723_enc.c:636:26
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      [
       Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init_state taken 0 times |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0xd0890 |-> 0x8800
0x7ffffd4 |-> 0x0
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffdc |-> 0x0
0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

       Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init_state taken at least 1 times |->
        Leaf:
[0 |-> 0x0,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRH killed renamable $r0, renamable $r1, $noreg, 28, 14, $noreg, debug-location !360 :: (store (s16) into %ir.arrayidx1); batchtest/g723_enc/g723_enc.c:637:27
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      [
       Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init_state taken 0 times |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0xd0890 |-> 0x8800
0x7ffffd4 |-> 0x0
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffdc |-> 0x0
0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

       Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init_state taken at least 1 times |->
        Leaf:
[0 |-> 0x0,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVi 32, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRH killed renamable $r0, killed renamable $r1, $noreg, 44, 14, $noreg, debug-location !362 :: (store (s16) into %ir.arrayidx2); batchtest/g723_enc/g723_enc.c:638:27
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      [
       Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init_state taken 0 times |->
        Leaf:
[0 |-> 0x20,
 1 |-> 0xd0890,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0xd0890 |-> 0x8800
0x7ffffd4 |-> 0x0
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffdc |-> 0x0
0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

       Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init_state taken at least 1 times |->
        Leaf:
[0 |-> 0x20,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: B %bb.3, debug-location !363; batchtest/g723_enc/g723_enc.c:639:3
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !364 :: (load (s32) from %stack.2); batchtest/g723_enc/g723_enc.c:635:33
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      [
       Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init_state taken 0 times |->
        Leaf:
[0 |-> 0x20,
 1 |-> 0xd0890,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0xd0890 |-> 0x8800
0x7ffffd4 |-> 0x0
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffdc |-> 0x0
0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

       Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init_state taken at least 1 times |->
        Leaf:
[0 |-> 0x20,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDri renamable $r0, 1, 14, $noreg, $noreg, debug-location !364; batchtest/g723_enc/g723_enc.c:635:33
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.0)
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      [
       Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_init_state taken 0 times |->
        Leaf:
[0 |-> 0x1,
 1 |-> 0xd0890,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0xd0890 |-> 0x8800
0x7ffffd4 |-> 0x0
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffdc |-> 0x0
0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

       Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_init_state taken at least 1 times |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: B %bb.1, debug-location !356; batchtest/g723_enc/g723_enc.c:635:3
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.3)
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      Leaf:
[0 |-> 0x0,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
    ]
  ]
]
# After:
not available
## Instruction: B %bb.5, debug-location !366; batchtest/g723_enc/g723_enc.c:641:9
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !354 :: (load (s32) from %stack.3); batchtest/g723_enc/g723_enc.c:0
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      [
       Loop Peeling: Backedges {(BB7, BB5)} in function g723_enc_init_state taken 0 times |->
        Leaf:
[0 |-> 0x0,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd0 |-> 0x0
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}

       Loop Iteration: Backedges {(BB7, BB5)} in function g723_enc_init_state taken at least 1 times |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRi12 $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.4)
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      [
       Loop Peeling: Backedges {(BB7, BB5)} in function g723_enc_init_state taken 0 times |->
        Leaf:
[0 |-> 0x0,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd0 |-> 0x0
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}

       Loop Iteration: Backedges {(BB7, BB5)} in function g723_enc_init_state taken at least 1 times |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: CMPri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !368; batchtest/g723_enc/g723_enc.c:641:3
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 0, killed $cpsr, debug-location !368; batchtest/g723_enc/g723_enc.c:641:3
# Before:
not available
# After:
not available
## Instruction: B %bb.6, debug-location !368; batchtest/g723_enc/g723_enc.c:641:3
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !369 :: (load (s32) from %stack.1); batchtest/g723_enc/g723_enc.c:642:5
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      [
       Loop Peeling: Backedges {(BB7, BB5)} in function g723_enc_init_state taken 0 times |->
        Leaf:
[0 |-> 0x0,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffcc |-> 0x0
0x7ffffd0 |-> 0x0
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}

       Loop Iteration: Backedges {(BB7, BB5)} in function g723_enc_init_state taken at least 1 times |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !369 :: (load (s32) from %stack.4); batchtest/g723_enc/g723_enc.c:642:5
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      [
       Loop Peeling: Backedges {(BB7, BB5)} in function g723_enc_init_state taken 0 times |->
        Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffcc |-> 0x0
0x7ffffd0 |-> 0x0
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}

       Loop Iteration: Backedges {(BB7, BB5)} in function g723_enc_init_state taken at least 1 times |->
        Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r1 = ADDrsi renamable $r0, renamable $r1, 10, 14, $noreg, $noreg, debug-location !369; batchtest/g723_enc/g723_enc.c:642:5
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRH killed renamable $r0, renamable $r1, $noreg, 16, 14, $noreg, debug-location !370 :: (store (s16) into %ir.arrayidx6); batchtest/g723_enc/g723_enc.c:642:26
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      [
       Loop Peeling: Backedges {(BB7, BB5)} in function g723_enc_init_state taken 0 times |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffcc |-> 0x0
0x7ffffd0 |-> 0x0
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}

       Loop Iteration: Backedges {(BB7, BB5)} in function g723_enc_init_state taken at least 1 times |->
        Leaf:
[0 |-> 0x0,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVi 32, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRH killed renamable $r0, killed renamable $r1, $noreg, 32, 14, $noreg, debug-location !372 :: (store (s16) into %ir.arrayidx7); batchtest/g723_enc/g723_enc.c:643:27
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      [
       Loop Peeling: Backedges {(BB7, BB5)} in function g723_enc_init_state taken 0 times |->
        Leaf:
[0 |-> 0x20,
 1 |-> 0xd0890,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffcc |-> 0x0
0x7ffffd0 |-> 0x0
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}

       Loop Iteration: Backedges {(BB7, BB5)} in function g723_enc_init_state taken at least 1 times |->
        Leaf:
[0 |-> 0x20,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: B %bb.7, debug-location !373; batchtest/g723_enc/g723_enc.c:644:3
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !374 :: (load (s32) from %stack.4); batchtest/g723_enc/g723_enc.c:641:33
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      [
       Loop Peeling: Backedges {(BB7, BB5)} in function g723_enc_init_state taken 0 times |->
        Leaf:
[0 |-> 0x20,
 1 |-> 0xd0890,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffcc |-> 0x0
0x7ffffd0 |-> 0x0
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}

       Loop Iteration: Backedges {(BB7, BB5)} in function g723_enc_init_state taken at least 1 times |->
        Leaf:
[0 |-> 0x20,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDri renamable $r0, 1, 14, $noreg, $noreg, debug-location !374; batchtest/g723_enc/g723_enc.c:641:33
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.3)
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      [
       Loop Peeling: Backedges {(BB7, BB5)} in function g723_enc_init_state taken 0 times |->
        Leaf:
[0 |-> 0x1,
 1 |-> 0xd0890,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffcc |-> 0x0
0x7ffffd0 |-> 0x0
0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}

       Loop Iteration: Backedges {(BB7, BB5)} in function g723_enc_init_state taken at least 1 times |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: B %bb.5, debug-location !368; batchtest/g723_enc/g723_enc.c:641:3
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg :: (load (s32) from %stack.1)
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRBi12 killed renamable $r0, killed renamable $r1, 48, 14, $noreg, debug-location !377 :: (store (s8) into %ir.td, align 4); batchtest/g723_enc/g723_enc.c:645:17
# Before:
[
 Function call at location main_BB0_I6 |->
  [
   Function call at location g723_enc_init_BB0_I11 |->
    [
     Call of function g723_enc_init_state |->
      Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffcc,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
    ]
  ]
]
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 20, 14, $noreg, $noreg, debug-location !378; batchtest/g723_enc/g723_enc.c:646:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, debug-location !378; batchtest/g723_enc/g723_enc.c:646:1
# Before:
not available
# After:
not available
#### Function: g723_enc_main
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function g723_enc_main |->
    Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff8,
 12 |-> top,
 13 |-> 0x7fffff8,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
}
  ]
]
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function g723_enc_main |->
    Leaf:
[0 |-> 0x0,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
0x7fffff0 |-> 0x7fffff8
}
  ]
]
# After:
not available
## Instruction: B %bb.1, debug-location !400; batchtest/g723_enc/g723_enc.c:693:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !401 :: (load (s32) from %stack.0); batchtest/g723_enc/g723_enc.c:0
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function g723_enc_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_main taken 0 times |->
      Leaf:
[0 |-> 0x0,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

     Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_main taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd048c, @g723_enc_pack_output.i,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> 0xd0490, @g723_enc_OUTPUT,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: STRi12 $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function g723_enc_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_main taken 0 times |->
      Leaf:
[0 |-> 0x0,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

     Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_main taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd048c, @g723_enc_pack_output.i,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> 0xd0490, @g723_enc_OUTPUT,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: CMPri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !403; batchtest/g723_enc/g723_enc.c:693:3
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 0, killed $cpsr, debug-location !403; batchtest/g723_enc/g723_enc.c:693:3
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !403; batchtest/g723_enc/g723_enc.c:693:3
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !404 :: (load (s32) from %stack.1); batchtest/g723_enc/g723_enc.c:694:15
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function g723_enc_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_main taken 0 times |->
      Leaf:
[0 |-> 0x0,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
0x7ffffe8 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

     Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_main taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd048c, @g723_enc_pack_output.i,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> 0xd0490, @g723_enc_OUTPUT,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !404 :: (load (s32) from constant-pool); batchtest/g723_enc/g723_enc.c:694:15
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function g723_enc_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_main taken 0 times |->
      Leaf:
[0 |-> 0x0,
 1 |-> 0x0,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
0x7ffffe8 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

     Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_main taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd048c, @g723_enc_pack_output.i,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> 0xd0490, @g723_enc_OUTPUT,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r1, 18, 14, $noreg, $noreg, debug-location !404; batchtest/g723_enc/g723_enc.c:694:15
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = LDRSH killed renamable $r0, $noreg, 0, 14, $noreg, debug-location !404 :: (load (s16) from %ir.arrayidx, align 4); batchtest/g723_enc/g723_enc.c:694:15
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function g723_enc_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_main taken 0 times |->
      Leaf:
[0 |-> 0xd0000,
 1 |-> 0x0,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
0x7ffffe8 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

     Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_main taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd048c, @g723_enc_pack_output.i,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> 0xd0490, @g723_enc_OUTPUT,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !406 :: (load (s32) from constant-pool); batchtest/g723_enc/g723_enc.c:695:12
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function g723_enc_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_main taken 0 times |->
      Leaf:
[0 |-> top,
 1 |-> 0x0,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffffd8 |-> 0xd0890, @g723_enc_state
0x7ffffe4 |-> 0x0
0x7ffffe8 |-> 0x0
0x7ffffec |-> 0x0
0x7fffff0 |-> 0x7fffff8
}

     Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_main taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd048c, @g723_enc_pack_output.i,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> 0xd0490, @g723_enc_OUTPUT,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r1 = MOVi 2, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL_pred @g723_enc_g723_24_encoder, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, implicit-def $r0, debug-location !406; batchtest/g723_enc/g723_enc.c:695:12
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDri killed renamable $r0, 255, 14, $noreg, $noreg, debug-location !407; batchtest/g723_enc/g723_enc.c:696:13
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 3, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL_pred @g723_enc_pack_output, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !407; batchtest/g723_enc/g723_enc.c:696:13
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !408; batchtest/g723_enc/g723_enc.c:697:3
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !409 :: (load (s32) from %stack.1); batchtest/g723_enc/g723_enc.c:693:24
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function g723_enc_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_main taken 0 times |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd048c, @g723_enc_pack_output.i,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> 0xd0490, @g723_enc_OUTPUT,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0x0
0x7ffffec |-> 0x0
}

     Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_main taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd048c, @g723_enc_pack_output.i,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> 0xd0490, @g723_enc_OUTPUT,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDri renamable $r0, 1, 14, $noreg, $noreg, debug-location !409; batchtest/g723_enc/g723_enc.c:693:24
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function g723_enc_main |->
    [
     Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_main taken 0 times |->
      Leaf:
[0 |-> 0x1,
 1 |-> top,
 2 |-> 0xd048c, @g723_enc_pack_output.i,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> 0xd0490, @g723_enc_OUTPUT,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0x0
0x7ffffec |-> 0x0
}

     Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_main taken at least 1 times |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd048c, @g723_enc_pack_output.i,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> 0xd0490, @g723_enc_OUTPUT,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: B %bb.1, debug-location !403; batchtest/g723_enc/g723_enc.c:693:3
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !411; batchtest/g723_enc/g723_enc.c:699:1
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !411; batchtest/g723_enc/g723_enc.c:699:1
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Call of function g723_enc_main |->
    Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7fffff0,
 14 |-> top,
 15 |-> top]
{}
  ]
]
# After:
not available
## Instruction: BX_RET 14, $noreg, debug-location !411; batchtest/g723_enc/g723_enc.c:699:1
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
#### Function: g723_enc_pack_output
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I9 |->
    [
     Call of function g723_enc_pack_output |->
      Leaf:
[0 |-> top,
 1 |-> 0x3,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff0,
 12 |-> top,
 13 |-> 0x7ffffe8,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
    ]
  ]
]
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r12 = MOVr killed $r1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $lr = MOVr killed $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !327 :: (load (s32) from constant-pool); batchtest/g723_enc/g723_enc.c:596:27
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I9 |->
    [
     Call of function g723_enc_pack_output |->
      Leaf:
[0 |-> top,
 1 |-> 0x3,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> 0x3,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r2 = LDRi12 renamable $r0, 0, 14, $noreg, debug-location !327 :: (dereferenceable load (s32) from @g723_enc_pack_output.out_bits); batchtest/g723_enc/g723_enc.c:596:27
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I9 |->
    [
     Call of function g723_enc_pack_output |->
      Leaf:
[0 |-> 0xd0488, @g723_enc_pack_output.out_bits,
 1 |-> 0x3,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> 0x3,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r3 = LDRi12 %const.1, 0, 14, $noreg, debug-location !329 :: (load (s32) from constant-pool); batchtest/g723_enc/g723_enc.c:596:14
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I9 |->
    [
     Call of function g723_enc_pack_output |->
      Leaf:
[0 |-> 0xd0488, @g723_enc_pack_output.out_bits,
 1 |-> 0x3,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> 0x3,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r1 = LDRi12 renamable $r3, 0, 14, $noreg, debug-location !329 :: (dereferenceable load (s32) from @g723_enc_pack_output.out_buffer); batchtest/g723_enc/g723_enc.c:596:14
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I9 |->
    [
     Call of function g723_enc_pack_output |->
      Leaf:
[0 |-> 0xd0488, @g723_enc_pack_output.out_bits,
 1 |-> 0x3,
 2 |-> top,
 3 |-> 0xd0484, @g723_enc_pack_output.out_buffer,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> 0x3,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r1 = ORRrsr killed renamable $r1, killed renamable $lr, renamable $r2, 2, 14, $noreg, $noreg, debug-location !329; batchtest/g723_enc/g723_enc.c:596:14
# Before:
not available
# After:
not available
## Instruction: STRi12 renamable $r1, renamable $r3, 0, 14, $noreg, debug-location !329 :: (store (s32) into @g723_enc_pack_output.out_buffer); batchtest/g723_enc/g723_enc.c:596:14
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I9 |->
    [
     Call of function g723_enc_pack_output |->
      Leaf:
[0 |-> 0xd0488, @g723_enc_pack_output.out_bits,
 1 |-> top,
 2 |-> top,
 3 |-> 0xd0484, @g723_enc_pack_output.out_buffer,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> 0x3,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r2 = nsw ADDrr killed renamable $r2, killed renamable $r12, 14, $noreg, $noreg, debug-location !330; batchtest/g723_enc/g723_enc.c:597:12
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = nsw SUBri killed renamable $r2, 8, 14, $noreg, $noreg, debug-location !331; batchtest/g723_enc/g723_enc.c:600:12
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r2, renamable $r0, 0, 14, $noreg, debug-location !331 :: (store (s32) into @g723_enc_pack_output.out_bits); batchtest/g723_enc/g723_enc.c:600:12
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I9 |->
    [
     Call of function g723_enc_pack_output |->
      Leaf:
[0 |-> 0xd0488, @g723_enc_pack_output.out_bits,
 1 |-> top,
 2 |-> top,
 3 |-> 0xd0484, @g723_enc_pack_output.out_buffer,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> 0x3,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r2 = MOVsi renamable $r1, 67, 14, $noreg, $noreg, debug-location !332; batchtest/g723_enc/g723_enc.c:601:14
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r2, killed renamable $r3, 0, 14, $noreg, debug-location !332 :: (store (s32) into @g723_enc_pack_output.out_buffer); batchtest/g723_enc/g723_enc.c:601:14
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I9 |->
    [
     Call of function g723_enc_pack_output |->
      Leaf:
[0 |-> 0xd0488, @g723_enc_pack_output.out_bits,
 1 |-> top,
 2 |-> top,
 3 |-> 0xd0484, @g723_enc_pack_output.out_buffer,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> 0x3,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r3 = ANDri killed renamable $r1, 255, 14, $noreg, $noreg, debug-location !333; batchtest/g723_enc/g723_enc.c:604:26
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.2, 0, 14, $noreg, debug-location !334 :: (load (s32) from constant-pool); batchtest/g723_enc/g723_enc.c:604:20
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I9 |->
    [
     Call of function g723_enc_pack_output |->
      Leaf:
[0 |-> 0xd0488, @g723_enc_pack_output.out_bits,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> 0x3,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r1 = LDRi12 renamable $r2, 0, 14, $noreg, debug-location !334 :: (dereferenceable load (s32) from @g723_enc_pack_output.i); batchtest/g723_enc/g723_enc.c:604:20
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I9 |->
    [
     Call of function g723_enc_pack_output |->
      Leaf:
[0 |-> 0xd0488, @g723_enc_pack_output.out_bits,
 1 |-> top,
 2 |-> 0xd048c, @g723_enc_pack_output.i,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> 0x3,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r12 = LDRi12 %const.3, 0, 14, $noreg, debug-location !335 :: (load (s32) from constant-pool); batchtest/g723_enc/g723_enc.c:604:3
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I9 |->
    [
     Call of function g723_enc_pack_output |->
      Leaf:
[0 |-> 0xd0488, @g723_enc_pack_output.out_bits,
 1 |-> top,
 2 |-> 0xd048c, @g723_enc_pack_output.i,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> 0x3,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: STRrs killed renamable $r3, killed renamable $r12, renamable $r1, 16386, 14, $noreg, debug-location !336 :: (store (s32) into %ir.arrayidx); batchtest/g723_enc/g723_enc.c:604:24
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I9 |->
    [
     Call of function g723_enc_pack_output |->
      Leaf:
[0 |-> 0xd0488, @g723_enc_pack_output.out_bits,
 1 |-> top,
 2 |-> 0xd048c, @g723_enc_pack_output.i,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> 0xd0490, @g723_enc_OUTPUT,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r1 = nsw ADDri killed renamable $r1, 1, 14, $noreg, $noreg, debug-location !337; batchtest/g723_enc/g723_enc.c:605:10
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, killed renamable $r2, 0, 14, $noreg, debug-location !338 :: (store (s32) into @g723_enc_pack_output.i); batchtest/g723_enc/g723_enc.c:605:5
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I9 |->
    [
     Call of function g723_enc_pack_output |->
      Leaf:
[0 |-> 0xd0488, @g723_enc_pack_output.out_bits,
 1 |-> top,
 2 |-> 0xd048c, @g723_enc_pack_output.i,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> 0xd0490, @g723_enc_OUTPUT,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r1 = LDRi12 killed renamable $r0, 0, 14, $noreg, debug-location !339 :: (dereferenceable load (s32) from @g723_enc_pack_output.out_bits); batchtest/g723_enc/g723_enc.c:608:12
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I9 |->
    [
     Call of function g723_enc_pack_output |->
      Leaf:
[0 |-> 0xd0488, @g723_enc_pack_output.out_bits,
 1 |-> top,
 2 |-> 0xd048c, @g723_enc_pack_output.i,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> 0xd0490, @g723_enc_OUTPUT,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r1, 0, 14, $noreg, implicit-def $cpsr, debug-location !340; batchtest/g723_enc/g723_enc.c:608:21
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVi 1, 12, killed $cpsr, $noreg, implicit renamable $r0, debug-location !340; batchtest/g723_enc/g723_enc.c:608:21
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !341; batchtest/g723_enc/g723_enc.c:608:3
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I9 |->
    [
     Call of function g723_enc_pack_output |->
      Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd048c, @g723_enc_pack_output.i,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> 0xd0490, @g723_enc_OUTPUT,
 13 |-> 0x7ffffe0,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
    ]
  ]
]
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !341; batchtest/g723_enc/g723_enc.c:608:3
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
# Before:
not available
# After:
not available
#### Function: g723_enc_predictor_pole
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I22 |->
      [
       Call of function g723_enc_predictor_pole |->
        Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr killed $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I22 |->
      [
       Call of function g723_enc_predictor_pole |->
        Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff90,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = LDRSH renamable $r1, $noreg, 14, 14, $noreg, debug-location !170 :: (load (s16) from %ir.arrayidx); batchtest/g723_enc/g723_enc.c:293:28
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I22 |->
      [
       Call of function g723_enc_predictor_pole |->
        Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff90,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 17, 14, $noreg, $noreg, debug-location !171; batchtest/g723_enc/g723_enc.c:293:46
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRSH renamable $r1, $noreg, 46, 14, $noreg, debug-location !172 :: (load (s16) from %ir.arrayidx1); batchtest/g723_enc/g723_enc.c:293:52
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I22 |->
      [
       Call of function g723_enc_predictor_pole |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff90,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: BL_pred @g723_enc_fmult, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !173; batchtest/g723_enc/g723_enc.c:293:12
# Before:
not available
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !173 :: (load (s32) from %stack.1); batchtest/g723_enc/g723_enc.c:293:12
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I22 |->
      [
       Call of function g723_enc_predictor_pole |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff90,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I22 |->
      [
       Call of function g723_enc_predictor_pole |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff90,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = LDRSH renamable $r1, $noreg, 12, 14, $noreg, debug-location !174 :: (load (s16) from %ir.arrayidx4, align 4); batchtest/g723_enc/g723_enc.c:294:28
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I22 |->
      [
       Call of function g723_enc_predictor_pole |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff90,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 17, 14, $noreg, $noreg, debug-location !175; batchtest/g723_enc/g723_enc.c:294:46
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRSH killed renamable $r1, $noreg, 44, 14, $noreg, debug-location !176 :: (load (s16) from %ir.arrayidx8, align 4); batchtest/g723_enc/g723_enc.c:294:52
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I22 |->
      [
       Call of function g723_enc_predictor_pole |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff90,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: BL_pred @g723_enc_fmult, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !177; batchtest/g723_enc/g723_enc.c:294:12
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg, debug-location !177; batchtest/g723_enc/g723_enc.c:294:12
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !178 :: (load (s32) from %stack.0); batchtest/g723_enc/g723_enc.c:293:73
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I22 |->
      [
       Call of function g723_enc_predictor_pole |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff90,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = nsw ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !178; batchtest/g723_enc/g723_enc.c:293:73
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !179; batchtest/g723_enc/g723_enc.c:293:3
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !179; batchtest/g723_enc/g723_enc.c:293:3
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I22 |->
      [
       Call of function g723_enc_predictor_pole |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff98,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !179; batchtest/g723_enc/g723_enc.c:293:3
# Before:
not available
# After:
not available
#### Function: g723_enc_predictor_zero
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 24, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr killed $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 12, 14, $noreg :: (store (s32) into %stack.2)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = LDRSH renamable $r1, $noreg, 16, 14, $noreg, debug-location !151 :: (load (s16) from %ir.arrayidx, align 4); batchtest/g723_enc/g723_enc.c:274:26
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 17, 14, $noreg, $noreg, debug-location !152; batchtest/g723_enc/g723_enc.c:274:44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRSH renamable $r1, $noreg, 32, 14, $noreg, debug-location !153 :: (load (s16) from %ir.arrayidx1, align 4); batchtest/g723_enc/g723_enc.c:274:50
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: BL_pred @g723_enc_fmult, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !154; batchtest/g723_enc/g723_enc.c:274:10
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $r11, -8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        Leaf:
[0 |-> top,
 1 |-> 0x1,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        Leaf:
[0 |-> top,
 1 |-> 0x1,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: B %bb.1, debug-location !155; batchtest/g723_enc/g723_enc.c:276:9
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !156 :: (load (s32) from %stack.1); batchtest/g723_enc/g723_enc.c:0
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        [
         Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken 0 times |->
          Leaf:
[0 |-> top,
 1 |-> 0x1,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !156 :: (load (s32) from %stack.0); batchtest/g723_enc/g723_enc.c:0
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        [
         Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken 0 times |->
          Leaf:
[0 |-> 0x1,
 1 |-> 0x1,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.4)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        [
         Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken 0 times |->
          Leaf:
[0 |-> 0x1,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRi12 $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.3)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        [
         Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken 0 times |->
          Leaf:
[0 |-> 0x1,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: CMPri renamable $r0, 2, 14, $noreg, implicit-def $cpsr, debug-location !158; batchtest/g723_enc/g723_enc.c:276:3
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 0, killed $cpsr, debug-location !158; batchtest/g723_enc/g723_enc.c:276:3
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !158; batchtest/g723_enc/g723_enc.c:276:3
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !159 :: (load (s32) from %stack.2); batchtest/g723_enc/g723_enc.c:277:29
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        [
         Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken 0 times |->
          Leaf:
[0 |-> 0x1,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x1
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !159 :: (load (s32) from %stack.3); batchtest/g723_enc/g723_enc.c:277:29
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        [
         Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken 0 times |->
          Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x1
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken at least 1 times |->
          Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r1 = ADDrsi renamable $r0, renamable $r1, 10, 14, $noreg, $noreg, debug-location !159; batchtest/g723_enc/g723_enc.c:277:29
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = LDRSH renamable $r1, $noreg, 16, 14, $noreg, debug-location !159 :: (load (s16) from %ir.arrayidx5); batchtest/g723_enc/g723_enc.c:277:29
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        [
         Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken 0 times |->
          Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> 0xd0892,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x1
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken at least 1 times |->
          Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 17, 14, $noreg, $noreg, debug-location !160; batchtest/g723_enc/g723_enc.c:277:47
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRSH killed renamable $r1, $noreg, 32, 14, $noreg, debug-location !161 :: (load (s16) from %ir.arrayidx9); batchtest/g723_enc/g723_enc.c:277:53
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        [
         Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken 0 times |->
          Leaf:
[0 |-> top,
 1 |-> 0xd0892,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x1
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: BL_pred @g723_enc_fmult, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !162; batchtest/g723_enc/g723_enc.c:277:13
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.5)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        [
         Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken 0 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x1
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: B %bb.3, debug-location !163; batchtest/g723_enc/g723_enc.c:277:5
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !164 :: (load (s32) from %stack.3); batchtest/g723_enc/g723_enc.c:277:10
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        [
         Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken 0 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x1
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !164 :: (load (s32) from %stack.4); batchtest/g723_enc/g723_enc.c:277:10
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        [
         Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken 0 times |->
          Leaf:
[0 |-> top,
 1 |-> 0x1,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x1
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 0, 14, $noreg, debug-location !164 :: (load (s32) from %stack.5); batchtest/g723_enc/g723_enc.c:277:10
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        [
         Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken 0 times |->
          Leaf:
[0 |-> top,
 1 |-> 0x1,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x1
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = nsw ADDrr renamable $r0, renamable $r2, 14, $noreg, $noreg, debug-location !164; batchtest/g723_enc/g723_enc.c:277:10
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nuw nsw ADDri renamable $r1, 1, 14, $noreg, $noreg, debug-location !165; batchtest/g723_enc/g723_enc.c:276:24
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $r11, -8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        [
         Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken 0 times |->
          Leaf:
[0 |-> top,
 1 |-> 0x2,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x1
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        [
         Loop Peeling: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken 0 times |->
          Leaf:
[0 |-> top,
 1 |-> 0x2,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x1
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff90 |-> 0x2
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB3, BB1)} in function g723_enc_predictor_zero taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: B %bb.1, debug-location !158; batchtest/g723_enc/g723_enc.c:276:3
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !168 :: (load (s32) from %stack.4); batchtest/g723_enc/g723_enc.c:279:3
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !168; batchtest/g723_enc/g723_enc.c:279:3
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !168; batchtest/g723_enc/g723_enc.c:279:3
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Call of function g723_enc_predictor_zero |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff98,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !168; batchtest/g723_enc/g723_enc.c:279:3
# Before:
not available
# After:
not available
#### Function: g723_enc_quan
### Basic Block: 0
## Instruction: B %bb.1, debug-location !142; batchtest/g723_enc/g723_enc.c:250:9
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I17 |->
      [
       Function call at location g723_enc_predictor_zero_BB0_I12 |->
        [
         Function call at location g723_enc_fmult_BB0_I12 |->
          [
           Call of function g723_enc_quan |->
            Leaf:
[0 |-> top,
 1 |-> 0xd0400, @g723_enc_power2,
 2 |-> 0x3,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff78,
 12 |-> top,
 13 |-> 0x7ffff70,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
          ]
        ]

       Function call at location g723_enc_predictor_zero_BB2_I6 |->
        [
         Function call at location g723_enc_fmult_BB0_I12 |->
          [
           Call of function g723_enc_quan |->
            Leaf:
[0 |-> top,
 1 |-> 0xd0400, @g723_enc_power2,
 2 |-> 0x3,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff78,
 12 |-> top,
 13 |-> 0x7ffff70,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
          ]
        ]
      ]

     Function call at location g723_enc_g723_24_encoder_BB0_I22 |->
      [
       Function call at location g723_enc_predictor_pole_BB0_I12 |->
        [
         Function call at location g723_enc_fmult_BB0_I12 |->
          [
           Call of function g723_enc_quan |->
            Leaf:
[0 |-> top,
 1 |-> 0xd0400, @g723_enc_power2,
 2 |-> 0x3,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff88,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
          ]
        ]

       Function call at location g723_enc_predictor_pole_BB0_I18 |->
        [
         Function call at location g723_enc_fmult_BB0_I12 |->
          [
           Call of function g723_enc_quan |->
            Leaf:
[0 |-> top,
 1 |-> 0xd0400, @g723_enc_power2,
 2 |-> 0x3,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff88,
 12 |-> top,
 13 |-> 0x7ffff80,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
          ]
        ]
      ]

     Function call at location g723_enc_g723_24_encoder_BB0_I43 |->
      [
       Function call at location g723_enc_quantize_BB0_I16 |->
        [
         Call of function g723_enc_quan |->
          Leaf:
[0 |-> top,
 1 |-> 0xd0400, @g723_enc_power2,
 2 |-> 0xf,
 3 |-> 0x3,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
        ]

       Function call at location g723_enc_quantize_BB0_I34 |->
        [
         Call of function g723_enc_quan |->
          Leaf:
[0 |-> top,
 1 |-> 0xd041e, @g723_enc_qtab_723_24,
 2 |-> 0x3,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
        ]
      ]
    ]
  ]
]
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !143; batchtest/g723_enc/g723_enc.c:250:3
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !143; batchtest/g723_enc/g723_enc.c:250:3
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !143; batchtest/g723_enc/g723_enc.c:250:3
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: B %bb.3, debug-location !144; batchtest/g723_enc/g723_enc.c:255:3
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.1, debug-location !143; batchtest/g723_enc/g723_enc.c:250:3
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !147; batchtest/g723_enc/g723_enc.c:257:3
# Before:
not available
# After:
not available
#### Function: g723_enc_quantize
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I43 |->
      [
       Call of function g723_enc_quantize |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd041e, @g723_enc_qtab_723_24,
 3 |-> 0x3,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r3, $sp, 8, 14, $noreg :: (store (s32) into %stack.1)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I43 |->
      [
       Call of function g723_enc_quantize |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd041e, @g723_enc_qtab_723_24,
 3 |-> 0x3,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRi12 $r2, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I43 |->
      [
       Call of function g723_enc_quantize |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd041e, @g723_enc_qtab_723_24,
 3 |-> 0x3,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRi12 $r1, $sp, 0, 14, $noreg :: (store (s32) into %stack.3)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I43 |->
      [
       Call of function g723_enc_quantize |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd041e, @g723_enc_qtab_723_24,
 3 |-> 0x3,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: BL_pred @g723_enc_abs, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit-def $sp, implicit-def $r0, debug-location !185; batchtest/g723_enc/g723_enc.c:342:9
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 130, 14, $noreg, $noreg, debug-location !186; batchtest/g723_enc/g723_enc.c:343:24
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I43 |->
      [
       Call of function g723_enc_quantize |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd041e, @g723_enc_qtab_723_24,
 3 |-> 0x3,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r0, 137, 14, $noreg, $noreg, debug-location !187; batchtest/g723_enc/g723_enc.c:343:28
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRi12 %const.0, 0, 14, $noreg, debug-location !188 :: (load (s32) from constant-pool); batchtest/g723_enc/g723_enc.c:343:9
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I43 |->
      [
       Call of function g723_enc_quantize |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> 0xd041e, @g723_enc_qtab_723_24,
 3 |-> 0x3,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r2 = MOVi 15, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL_pred @g723_enc_quan, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, implicit-def $r0, debug-location !188; batchtest/g723_enc/g723_enc.c:343:9
# Before:
not available
# After:
not available
## Instruction: $r12 = LDRi12 $sp, 0, 14, $noreg, debug-location !188 :: (load (s32) from %stack.3); batchtest/g723_enc/g723_enc.c:343:9
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I43 |->
      [
       Call of function g723_enc_quantize |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0400, @g723_enc_power2,
 2 |-> 0xf,
 3 |-> 0x3,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 4, 14, $noreg, debug-location !188 :: (load (s32) from %stack.2); batchtest/g723_enc/g723_enc.c:343:9
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I43 |->
      [
       Call of function g723_enc_quantize |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0400, @g723_enc_power2,
 2 |-> 0xf,
 3 |-> 0x3,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 8, 14, $noreg, debug-location !188 :: (load (s32) from %stack.1); batchtest/g723_enc/g723_enc.c:343:9
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I43 |->
      [
       Call of function g723_enc_quantize |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd041e, @g723_enc_qtab_723_24,
 2 |-> 0xf,
 3 |-> 0x3,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r3 = MOVr $r0, 14, $noreg, $noreg, debug-location !188; batchtest/g723_enc/g723_enc.c:343:9
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !190 :: (load (s32) from %stack.0); batchtest/g723_enc/g723_enc.c:344:18
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I43 |->
      [
       Call of function g723_enc_quantize |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd041e, @g723_enc_qtab_723_24,
 2 |-> 0x3,
 3 |-> 0x0,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = exact MOVsi killed renamable $r0, 73, 14, $noreg, $noreg, debug-location !190; batchtest/g723_enc/g723_enc.c:344:18
# Before:
not available
# After:
not available
## Instruction: renamable $lr = MOVsi renamable $r3, 130, 14, $noreg, $noreg, debug-location !191; batchtest/g723_enc/g723_enc.c:344:28
# Before:
not available
# After:
not available
## Instruction: renamable $lr = MOVsi killed renamable $lr, 129, 14, $noreg, $noreg, debug-location !191; batchtest/g723_enc/g723_enc.c:344:28
# Before:
not available
# After:
not available
## Instruction: renamable $lr = MOVsr killed renamable $r0, killed renamable $lr, 1, 14, $noreg, $noreg, debug-location !192; batchtest/g723_enc/g723_enc.c:344:25
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 8323072, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrsi killed renamable $r0, killed renamable $lr, 130, 14, $noreg, $noreg, debug-location !193; batchtest/g723_enc/g723_enc.c:352:9
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $r3, 186, 14, $noreg, $noreg, debug-location !193; batchtest/g723_enc/g723_enc.c:352:9
# Before:
not available
# After:
not available
## Instruction: $r3 = MOVi 16711680, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r3 = ORRri $r3, 4278190080, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = ANDrsi killed renamable $r3, killed renamable $r12, 114, 14, $noreg, $noreg, debug-location !194; batchtest/g723_enc/g723_enc.c:359:22
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r3, 14, $noreg, $noreg, debug-location !194; batchtest/g723_enc/g723_enc.c:359:22
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = exact MOVsi killed renamable $r0, 129, 14, $noreg, $noreg, debug-location !194; batchtest/g723_enc/g723_enc.c:359:22
# Before:
not available
# After:
not available
## Instruction: BL_pred @g723_enc_quan, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, implicit-def $r0, debug-location !195; batchtest/g723_enc/g723_enc.c:359:7
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !196; batchtest/g723_enc/g723_enc.c:361:3
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !196; batchtest/g723_enc/g723_enc.c:361:3
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I43 |->
      [
       Call of function g723_enc_quantize |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd041e, @g723_enc_qtab_723_24,
 2 |-> 0x3,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff98,
 12 |-> top,
 13 |-> 0x7ffff98,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !196; batchtest/g723_enc/g723_enc.c:361:3
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
#### Function: g723_enc_reconstruct
### Basic Block: 0
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I53 |->
      [
       Call of function g723_enc_reconstruct |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !198; batchtest/g723_enc/g723_enc.c:384:12
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr killed renamable $r1, 1, killed $cpsr, $noreg, implicit renamable $r0, debug-location !198; batchtest/g723_enc/g723_enc.c:384:12
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !199; batchtest/g723_enc/g723_enc.c:384:3
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
# Before:
not available
# After:
not available
#### Function: g723_enc_return
### Basic Block: 0
## Instruction: B %bb.1, debug-location !393; batchtest/g723_enc/g723_enc.c:667:9
# Before:
[
 Function call at location main_BB0_I8 |->
  [
   Call of function g723_enc_return |->
    Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff8,
 12 |-> top,
 13 |-> 0x7fffff8,
 14 |-> top,
 15 |-> top]
{}
  ]
]
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !394; batchtest/g723_enc/g723_enc.c:667:3
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !394; batchtest/g723_enc/g723_enc.c:667:3
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !394; batchtest/g723_enc/g723_enc.c:667:3
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: B %bb.3, debug-location !395; batchtest/g723_enc/g723_enc.c:668:5
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.1, debug-location !394; batchtest/g723_enc/g723_enc.c:667:3
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !398; batchtest/g723_enc/g723_enc.c:670:3
# Before:
not available
# After:
not available
#### Function: g723_enc_step_size
### Basic Block: 0
## Instruction: renamable $r0 = LDRSH killed renamable $r0, $noreg, 4, 14, $noreg, debug-location !181 :: (load (s16) from %ir.yu, align 4); batchtest/g723_enc/g723_enc.c:311:23
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I32 |->
      [
       Call of function g723_enc_step_size |->
        Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x7ffff98
0x7ffff90 |-> 0xd0890, @g723_enc_state
0x7ffff98 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !183; batchtest/g723_enc/g723_enc.c:311:3
# Before:
not available
# After:
not available
#### Function: g723_enc_ulaw2linear
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: $r1 = MOVr killed $r0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r1, 194, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 193, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MVNr killed renamable $r1, 14, $noreg, $noreg, debug-location !283; batchtest/g723_enc/g723_enc.c:523:11
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 132, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ORRrsi killed renamable $r1, renamable $r3, 26, 14, $noreg, $noreg, debug-location !285; batchtest/g723_enc/g723_enc.c:529:39
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDri killed renamable $r1, 255, 14, $noreg, $noreg, debug-location !285; batchtest/g723_enc/g723_enc.c:529:39
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVi 7, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ANDrsi killed renamable $r2, killed renamable $r3, 35, 14, $noreg, $noreg, debug-location !286; batchtest/g723_enc/g723_enc.c:530:46
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVsr killed renamable $r1, killed renamable $r2, 2, 14, $noreg, $noreg, debug-location !287; batchtest/g723_enc/g723_enc.c:530:5
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !289; batchtest/g723_enc/g723_enc.c:532:12
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 4, killed $cpsr, debug-location !289; batchtest/g723_enc/g723_enc.c:532:12
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !289; batchtest/g723_enc/g723_enc.c:532:12
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !290 :: (load (s32) from %stack.0); batchtest/g723_enc/g723_enc.c:532:42
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nsw RSBri renamable $r0, 132, 14, $noreg, $noreg, debug-location !290; batchtest/g723_enc/g723_enc.c:532:42
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: B %bb.3, debug-location !289; batchtest/g723_enc/g723_enc.c:532:12
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !291 :: (load (s32) from %stack.0); batchtest/g723_enc/g723_enc.c:532:54
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nsw SUBri renamable $r0, 132, 14, $noreg, $noreg, debug-location !291; batchtest/g723_enc/g723_enc.c:532:54
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: B %bb.3, debug-location !289; batchtest/g723_enc/g723_enc.c:532:12
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !289 :: (load (s32) from %stack.1); batchtest/g723_enc/g723_enc.c:532:12
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 8, 14, $noreg, $noreg, debug-location !292; batchtest/g723_enc/g723_enc.c:532:3
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !292; batchtest/g723_enc/g723_enc.c:532:3
# Before:
not available
# After:
not available
#### Function: g723_enc_update
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 24, 14, $noreg, $noreg
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x3,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffffa0,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 12, 14, $noreg :: (store (s32) into %stack.2)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x3,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg :: (load (s32) from %fixed-stack.0)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x3,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRi12 $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.1)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0x7ffffe0
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 32, 14, $noreg :: (load (s32) from %fixed-stack.1)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 20, 14, $noreg :: (store (s32) into %stack.0)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = LDRi12 renamable $r0, 0, 14, $noreg, debug-location !201 :: (load (s32) from %ir.yl); batchtest/g723_enc/g723_enc.c:420:22
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 10, 14, $noreg, $noreg, debug-location !202; batchtest/g723_enc/g723_enc.c:423:12
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 655360, 14, $noreg, implicit-def $cpsr, debug-location !204; batchtest/g723_enc/g723_enc.c:423:10
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 11, killed $cpsr, debug-location !204; batchtest/g723_enc/g723_enc.c:423:10
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !204; batchtest/g723_enc/g723_enc.c:423:10
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: B %bb.3, debug-location !204; batchtest/g723_enc/g723_enc.c:423:10
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: B %bb.3, debug-location !204; batchtest/g723_enc/g723_enc.c:423:10
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r1 = LDRi12 $sp, 16, 14, $noreg :: (load (s32) from %stack.1)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVi 544, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRH killed renamable $r0, renamable $r1, $noreg, 4, 14, $noreg, debug-location !206 :: (store (s16) into %ir.yu25, align 4); batchtest/g723_enc/g723_enc.c:435:17
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x220,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = LDRi12 renamable $r1, 0, 14, $noreg, debug-location !207 :: (load (s32) from %ir.yl28); batchtest/g723_enc/g723_enc.c:440:52
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x220,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r2 = nsw RSBri renamable $r0, 0, 14, $noreg, $noreg, debug-location !208; batchtest/g723_enc/g723_enc.c:440:40
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, killed renamable $r2, 49, 14, $noreg, $noreg, debug-location !210; batchtest/g723_enc/g723_enc.c:440:34
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDri killed renamable $r0, 544, 14, $noreg, $noreg, debug-location !212; batchtest/g723_enc/g723_enc.c:440:17
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, renamable $r1, 0, 14, $noreg, debug-location !212 :: (store (s32) into %ir.yl32); batchtest/g723_enc/g723_enc.c:440:17
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.4)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0xd041e, @g723_enc_qtab_723_24
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRH renamable $r0, renamable $r1, $noreg, 12, 14, $noreg, debug-location !214 :: (store (s16) into %ir.arrayidx, align 4); batchtest/g723_enc/g723_enc.c:445:21
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0x0
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRH renamable $r0, renamable $r1, $noreg, 14, 14, $noreg, debug-location !216 :: (store (s16) into %ir.arrayidx35); batchtest/g723_enc/g723_enc.c:446:21
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0x0
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRH renamable $r0, renamable $r1, $noreg, 16, 14, $noreg, debug-location !218 :: (store (s16) into %ir.arrayidx36, align 4); batchtest/g723_enc/g723_enc.c:447:21
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0x0
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRH renamable $r0, renamable $r1, $noreg, 18, 14, $noreg, debug-location !220 :: (store (s16) into %ir.arrayidx38); batchtest/g723_enc/g723_enc.c:448:21
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0x0
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRH renamable $r0, renamable $r1, $noreg, 20, 14, $noreg, debug-location !222 :: (store (s16) into %ir.arrayidx40, align 4); batchtest/g723_enc/g723_enc.c:449:21
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0x0
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRH renamable $r0, renamable $r1, $noreg, 22, 14, $noreg, debug-location !224 :: (store (s16) into %ir.arrayidx42); batchtest/g723_enc/g723_enc.c:450:21
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0x0
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRH renamable $r0, renamable $r1, $noreg, 24, 14, $noreg, debug-location !226 :: (store (s16) into %ir.arrayidx44, align 4); batchtest/g723_enc/g723_enc.c:451:21
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0x0
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRH renamable $r0, renamable $r1, $noreg, 26, 14, $noreg, debug-location !228 :: (store (s16) into %ir.arrayidx46); batchtest/g723_enc/g723_enc.c:452:21
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0x0
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.3)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x1,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0x0
0x7ffff90 |-> 0x3
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: B %bb.4, debug-location !229; batchtest/g723_enc/g723_enc.c:456:9
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !230 :: (load (s32) from %stack.3); batchtest/g723_enc/g723_enc.c:0
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        [
         Loop Peeling: Backedges {(BB6, BB4)} in function g723_enc_update taken 0 times |->
          Leaf:
[0 |-> 0x1,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0x0
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB6, BB4)} in function g723_enc_update taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRi12 $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.5)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        [
         Loop Peeling: Backedges {(BB6, BB4)} in function g723_enc_update taken 0 times |->
          Leaf:
[0 |-> 0x1,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff8c |-> 0x0
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB6, BB4)} in function g723_enc_update taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !232; batchtest/g723_enc/g723_enc.c:456:3
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.7, 0, killed $cpsr, debug-location !232; batchtest/g723_enc/g723_enc.c:456:3
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !232; batchtest/g723_enc/g723_enc.c:456:3
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !234 :: (load (s32) from %stack.1); batchtest/g723_enc/g723_enc.c:457:28
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        [
         Loop Peeling: Backedges {(BB6, BB4)} in function g723_enc_update taken 0 times |->
          Leaf:
[0 |-> 0x1,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x1
0x7ffff8c |-> 0x0
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB6, BB4)} in function g723_enc_update taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !234 :: (load (s32) from %stack.5); batchtest/g723_enc/g723_enc.c:457:28
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        [
         Loop Peeling: Backedges {(BB6, BB4)} in function g723_enc_update taken 0 times |->
          Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x1
0x7ffff8c |-> 0x0
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB6, BB4)} in function g723_enc_update taken at least 1 times |->
          Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r1 = ADDrsi renamable $r0, renamable $r1, 10, 14, $noreg, $noreg, debug-location !234; batchtest/g723_enc/g723_enc.c:457:28
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = LDRH renamable $r1, $noreg, 30, 14, $noreg, debug-location !234 :: (load (s16) from %ir.arrayidx51); batchtest/g723_enc/g723_enc.c:457:28
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        [
         Loop Peeling: Backedges {(BB6, BB4)} in function g723_enc_update taken 0 times |->
          Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> 0xd0892,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x1
0x7ffff8c |-> 0x0
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB6, BB4)} in function g723_enc_update taken at least 1 times |->
          Leaf:
[0 |-> 0xd0890, @g723_enc_state,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRH killed renamable $r0, killed renamable $r1, $noreg, 32, 14, $noreg, debug-location !236 :: (store (s16) into %ir.arrayidx53); batchtest/g723_enc/g723_enc.c:457:26
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        [
         Loop Peeling: Backedges {(BB6, BB4)} in function g723_enc_update taken 0 times |->
          Leaf:
[0 |-> top,
 1 |-> 0xd0892,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x1
0x7ffff8c |-> 0x0
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB6, BB4)} in function g723_enc_update taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: B %bb.6, debug-location !235; batchtest/g723_enc/g723_enc.c:457:5
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !237 :: (load (s32) from %stack.5); batchtest/g723_enc/g723_enc.c:456:30
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        [
         Loop Peeling: Backedges {(BB6, BB4)} in function g723_enc_update taken 0 times |->
          Leaf:
[0 |-> top,
 1 |-> 0xd0892,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x1
0x7ffff8c |-> 0x0
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB6, BB4)} in function g723_enc_update taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = nsw SUBri renamable $r0, 1, 14, $noreg, $noreg, debug-location !237; batchtest/g723_enc/g723_enc.c:456:30
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.3)
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        [
         Loop Peeling: Backedges {(BB6, BB4)} in function g723_enc_update taken 0 times |->
          Leaf:
[0 |-> 0x0,
 1 |-> 0xd0892,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff78 |-> 0x7ffff98
0x7ffff88 |-> 0x1
0x7ffff8c |-> 0x0
0x7ffff90 |-> 0x1
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffac |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
0x7ffffe0 |-> 0x7fffff0
}

         Loop Iteration: Backedges {(BB6, BB4)} in function g723_enc_update taken at least 1 times |->
          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: B %bb.4, debug-location !232; batchtest/g723_enc/g723_enc.c:456:3
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r1 = LDRi12 $sp, 16, 14, $noreg, debug-location !240 :: (load (s32) from %stack.1); batchtest/g723_enc/g723_enc.c:416:9
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 12, 14, $noreg, debug-location !240 :: (load (s32) from %stack.2); batchtest/g723_enc/g723_enc.c:416:9
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 20, 14, $noreg, debug-location !240 :: (load (s32) from %stack.0); batchtest/g723_enc/g723_enc.c:416:9
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 251, 14, $noreg, $noreg, debug-location !240; batchtest/g723_enc/g723_enc.c:416:9
# Before:
not available
# After:
not available
## Instruction: $r3 = MOVi 3104, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: $r3 = ORRri $r3, 61440, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRH killed renamable $r3, renamable $r1, $noreg, 32, 14, $noreg, debug-location !242 :: (store (s16) into %ir.arrayidx55, align 4); batchtest/g723_enc/g723_enc.c:459:22
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r3 = LDRH renamable $r1, $noreg, 44, 14, $noreg, debug-location !243 :: (load (s16) from %ir.arrayidx57, align 4); batchtest/g723_enc/g723_enc.c:462:24
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRH killed renamable $r3, renamable $r1, $noreg, 46, 14, $noreg, debug-location !245 :: (store (s16) into %ir.arrayidx59); batchtest/g723_enc/g723_enc.c:462:22
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r3 = MOVi 32, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRH killed renamable $r3, renamable $r1, $noreg, 44, 14, $noreg, debug-location !247 :: (store (s16) into %ir.arrayidx61, align 4); batchtest/g723_enc/g723_enc.c:464:22
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> 0x20,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r3 = LDRH renamable $r1, $noreg, 28, 14, $noreg, debug-location !248 :: (load (s16) from %ir.arrayidx62, align 4); batchtest/g723_enc/g723_enc.c:468:24
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> 0x20,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRH killed renamable $r3, renamable $r1, $noreg, 30, 14, $noreg, debug-location !250 :: (store (s16) into %ir.arrayidx64); batchtest/g723_enc/g723_enc.c:468:22
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: STRH killed renamable $r0, renamable $r1, $noreg, 28, 14, $noreg, debug-location !252 :: (store (s16) into %ir.arrayidx66, align 4); batchtest/g723_enc/g723_enc.c:469:22
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRBi12 killed renamable $r0, renamable $r1, 48, 14, $noreg, debug-location !254 :: (store (s8) into %ir.td, align 4); batchtest/g723_enc/g723_enc.c:472:17
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = LDRSH renamable $r1, $noreg, 6, 14, $noreg, debug-location !256 :: (load (s16) from %ir.dms); batchtest/g723_enc/g723_enc.c:478:28
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x0,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r3 = nsw SUBrr renamable $r2, renamable $r0, 14, $noreg, $noreg, debug-location !257; batchtest/g723_enc/g723_enc.c:478:26
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, killed renamable $r3, 43, 14, $noreg, $noreg, debug-location !260; batchtest/g723_enc/g723_enc.c:478:18
# Before:
not available
# After:
not available
## Instruction: STRH killed renamable $r0, renamable $r1, $noreg, 6, 14, $noreg, debug-location !260 :: (store (s16) into %ir.dms70); batchtest/g723_enc/g723_enc.c:478:18
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = LDRSH renamable $r1, $noreg, 8, 14, $noreg, debug-location !263 :: (load (s16) from %ir.dml, align 4); batchtest/g723_enc/g723_enc.c:479:39
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r2 = nsw RSBrsi renamable $r0, killed renamable $r2, 18, 14, $noreg, $noreg, debug-location !264; batchtest/g723_enc/g723_enc.c:479:37
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, killed renamable $r2, 59, 14, $noreg, $noreg, debug-location !267; batchtest/g723_enc/g723_enc.c:479:18
# Before:
not available
# After:
not available
## Instruction: STRH killed renamable $r0, renamable $r1, $noreg, 8, 14, $noreg, debug-location !267 :: (store (s16) into %ir.dml78, align 4); batchtest/g723_enc/g723_enc.c:479:18
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> top,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: renamable $r0 = MOVi 256, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRH killed renamable $r0, killed renamable $r1, $noreg, 10, 14, $noreg, debug-location !269 :: (store (s16) into %ir.ap); batchtest/g723_enc/g723_enc.c:481:17
# Before:
[
 Function call at location main_BB0_I7 |->
  [
   Function call at location g723_enc_main_BB2_I6 |->
    [
     Function call at location g723_enc_g723_24_encoder_BB0_I79 |->
      [
       Call of function g723_enc_update |->
        Leaf:
[0 |-> 0x100,
 1 |-> 0xd0890, @g723_enc_state,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> 0xd0890, @g723_enc_state,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffe0,
 12 |-> top,
 13 |-> 0x7ffff88,
 14 |-> top,
 15 |-> top]
{0x7ffff8c |-> 0x0
0x7ffff98 |-> 0xd0890, @g723_enc_state
0x7ffffc8 |-> 0x3
}
      ]
    ]
  ]
]
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 24, 14, $noreg, $noreg, debug-location !270; batchtest/g723_enc/g723_enc.c:482:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, debug-location !270; batchtest/g723_enc/g723_enc.c:482:1
# Before:
not available
# After:
not available
#### Function: main
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
# Before:
[
 Call of function main |->
  Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> top,
 12 |-> top,
 13 |-> 0x8000000,
 14 |-> top,
 15 |-> top]
{}
]
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: BL_pred @g723_enc_init, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit-def $sp, debug-location !413; batchtest/g723_enc/g723_enc.c:704:3
# Before:
not available
# After:
not available
## Instruction: BL_pred @g723_enc_main, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit-def $sp, debug-location !414; batchtest/g723_enc/g723_enc.c:705:3
# Before:
not available
# After:
not available
## Instruction: BL_pred @g723_enc_return, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit-def $sp, implicit-def $r0, debug-location !415; batchtest/g723_enc/g723_enc.c:707:12
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !416; batchtest/g723_enc/g723_enc.c:707:3
# Before:
[
 Call of function main |->
  Leaf:
[0 |-> 0x0,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7fffff8,
 12 |-> top,
 13 |-> 0x7fffff8,
 14 |-> top,
 15 |-> top]
{}
]
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !416; batchtest/g723_enc/g723_enc.c:707:3
# Before:
not available
# After:
not available
#### Function: memcpy
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 20, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 4, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 8, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 12, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: B %bb.1, debug-location !1388; ../memory.c:8:6
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r1 = LDRi12 $sp, 4, 14, $noreg, debug-location !1389 :: (load (s32) from %stack.3); ../memory.c:0
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !1389 :: (load (s32) from %stack.0); ../memory.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1391; ../memory.c:8:2
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 0, killed $cpsr, debug-location !1391; ../memory.c:8:2
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1391; ../memory.c:8:2
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1392 :: (load (s32) from %stack.1); ../memory.c:9:21
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 0, 14, $noreg, debug-location !1392 :: (load (s32) from %stack.4); ../memory.c:9:21
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !1392 :: (load (s32) from %stack.2); ../memory.c:9:21
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRBrs renamable $r0, renamable $r2, 0, 14, $noreg, debug-location !1392 :: (load (s8) from %ir.arrayidx); ../memory.c:9:21
# Before:
bot
# After:
not available
## Instruction: STRBrs killed renamable $r0, renamable $r1, renamable $r2, 0, 14, $noreg, debug-location !1394 :: (store (s8) into %ir.arrayidx1); ../memory.c:9:19
# Before:
bot
# After:
not available
## Instruction: B %bb.3, debug-location !1395; ../memory.c:10:2
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1396 :: (load (s32) from %stack.4); ../memory.c:8:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nuw ADDri renamable $r0, 1, 14, $noreg, $noreg, debug-location !1396; ../memory.c:8:26
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: B %bb.1, debug-location !1391; ../memory.c:8:2
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $sp = frame-destroy ADDri killed $sp, 20, 14, $noreg, $noreg, debug-location !1398; ../memory.c:11:1
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1398; ../memory.c:11:1
# Before:
not available
# After:
not available
#### Function: memset
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 20, 14, $noreg, $noreg
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 4, 14, $noreg :: (store (s32) into %stack.3)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 8, 14, $noreg :: (store (s32) into %stack.2)
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 12, 14, $noreg :: (store (s32) into %stack.1)
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: B %bb.1, debug-location !1400; ../memory.c:17:6
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r1 = LDRi12 $sp, 4, 14, $noreg, debug-location !1401 :: (load (s32) from %stack.3); ../memory.c:0
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !1401 :: (load (s32) from %stack.0); ../memory.c:0
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.4)
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1403; ../memory.c:17:2
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 0, killed $cpsr, debug-location !1403; ../memory.c:17:2
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1403; ../memory.c:17:2
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !1406 :: (load (s32) from %stack.2); ../memory.c:18:11
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1406 :: (load (s32) from %stack.1); ../memory.c:18:11
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 0, 14, $noreg, debug-location !1406 :: (load (s32) from %stack.4); ../memory.c:18:11
# Before:
bot
# After:
not available
## Instruction: STRBrs renamable $r0, renamable $r1, renamable $r2, 0, 14, $noreg, debug-location !1406 :: (store (s8) into %ir.arrayidx); ../memory.c:18:11
# Before:
bot
# After:
not available
## Instruction: B %bb.3, debug-location !1407; ../memory.c:19:2
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1408 :: (load (s32) from %stack.4); ../memory.c:17:26
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nuw ADDri renamable $r0, 1, 14, $noreg, $noreg, debug-location !1408; ../memory.c:17:26
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.0)
# Before:
bot
# After:
not available
## Instruction: B %bb.1, debug-location !1403; ../memory.c:17:2
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1410 :: (load (s32) from %stack.1); ../memory.c:20:2
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 20, 14, $noreg, $noreg, debug-location !1410; ../memory.c:20:2
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1410; ../memory.c:20:2
# Before:
not available
# After:
not available
